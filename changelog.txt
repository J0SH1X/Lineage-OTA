
########################################
device/lge/sm8150 Changes:
########################################
device/lge/betalm Changes:
commit eddc1f67cfe1b6752421e558ec330e874bff3d4f
Author: J0SH1X <aljoshua.hell@gmail.com>
Date:   Sun May 9 19:16:56 2021 +0200

    Revert "Betalm: enable metadata encryption"
    
    This reverts commit bbab228074390468aaff00fc14882ae54b7bfb89.

commit e2d07c2ab7974297be8b47dcd142fc98fa817ac7
Author: SGCMarkus <markusornik@gmail.com>
Date:   Wed Jan 27 15:11:25 2021 +0100

    flashlmdd: Switch to standalone extract utils
    
    * Align with templates while we are at it
########################################
device/lge/beta-common Changes:
commit c8b0cbfe6f6b6ccc2c0cd636522924c74e001794
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu May 6 12:32:52 2021 +0200

    flash-common: build common fingerprint hal

commit c447357e3f5437a873569415463d5655fb715847
Author: SGCMarkus <markusornik@gmail.com>
Date:   Fri Mar 12 10:21:35 2021 +0100

    Revert "flash-common: decommonize NFC"
    
    This reverts commit 085f7d2f493695c437fb087e0a30dfe7f04ad5b8.

commit d64b967e4fff66b0d7fe4784f320ee2ffa054a7a
Author: SGCMarkus <markusornik@gmail.com>
Date:   Mon Mar 8 14:04:53 2021 +0100

    flash-common: decommonize audio hal

commit 6e3b1d0eaef0c4160b7ae922f6806332533e70d5
Author: SGCMarkus <markusornik@gmail.com>
Date:   Mon Mar 8 13:54:13 2021 +0100

    flash-common: decommonize speaker protection prop

commit 53f0d751a6e509aa92bbc558428eac3ce8a20097
Author: SGCMarkus <markusornik@gmail.com>
Date:   Mon Mar 8 13:39:06 2021 +0100

    flash-common: decommonize NFC
########################################
kernel/lge/sm8150 Changes:
commit 6fd870a3cd16036d5fd4d3417049d9c46002b10d
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Apr 28 12:08:44 2021 +0200

    Linux 4.14.232
    
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Link: https://lore.kernel.org/r/20210426072819.721586742@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 462fd9289d1d5f976d675afa28250e81985b7214
Author: Oliver Neukum <oneukum@suse.com>
Date:   Wed Apr 21 09:45:13 2021 +0200

    USB: CDC-ACM: fix poison/unpoison imbalance
    
    commit a8b3b519618f30a87a304c4e120267ce6f8dc68a upstream.
    
    suspend() does its poisoning conditionally, resume() does it
    unconditionally. On a device with combined interfaces this
    will balance, on a device with two interfaces the counter will
    go negative and resubmission will fail.
    
    Both actions need to be done conditionally.
    
    Fixes: 6069e3e927c8f ("USB: cdc-acm: untangle a circular dependency between callback and softint")
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210421074513.4327-1-oneukum@suse.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1f75c6d0a068705014f570074bfdeff02f33e8a
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Apr 26 10:11:49 2021 +0200

    net: hso: fix NULL-deref on disconnect regression
    
    commit 2ad5692db72874f02b9ad551d26345437ea4f7f3 upstream.
    
    Commit 8a12f8836145 ("net: hso: fix null-ptr-deref during tty device
    unregistration") fixed the racy minor allocation reported by syzbot, but
    introduced an unconditional NULL-pointer dereference on every disconnect
    instead.
    
    Specifically, the serial device table must no longer be accessed after
    the minor has been released by hso_serial_tty_unregister().
    
    Fixes: 8a12f8836145 ("net: hso: fix null-ptr-deref during tty device unregistration")
    Cc: stable@vger.kernel.org
    Cc: Anirudh Rayabharam <mail@anirudhrb.com>
    Reported-by: Leonardo Antoniazzi <leoanto@aruba.it>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Anirudh Rayabharam <mail@anirudhrb.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbc4a2f77b844551fcab8dc09e02e3f6accd018c
Author: Mike Galbraith <efault@gmx.de>
Date:   Fri Apr 16 14:02:07 2021 +0200

    x86/crash: Fix crash_setup_memmap_entries() out-of-bounds access
    
    commit 5849cdf8c120e3979c57d34be55b92d90a77a47e upstream.
    
    Commit in Fixes: added support for kexec-ing a kernel on panic using a
    new system call. As part of it, it does prepare a memory map for the new
    kernel.
    
    However, while doing so, it wrongly accesses memory it has not
    allocated: it accesses the first element of the cmem->ranges[] array in
    memmap_exclude_ranges() but it has not allocated the memory for it in
    crash_setup_memmap_entries(). As KASAN reports:
    
      BUG: KASAN: vmalloc-out-of-bounds in crash_setup_memmap_entries+0x17e/0x3a0
      Write of size 8 at addr ffffc90000426008 by task kexec/1187
    
      (gdb) list *crash_setup_memmap_entries+0x17e
      0xffffffff8107cafe is in crash_setup_memmap_entries (arch/x86/kernel/crash.c:322).
      317                                      unsigned long long mend)
      318     {
      319             unsigned long start, end;
      320
      321             cmem->ranges[0].start = mstart;
      322             cmem->ranges[0].end = mend;
      323             cmem->nr_ranges = 1;
      324
      325             /* Exclude elf header region */
      326             start = image->arch.elf_load_addr;
      (gdb)
    
    Make sure the ranges array becomes a single element allocated.
    
     [ bp: Write a proper commit message. ]
    
    Fixes: dd5f726076cc ("kexec: support for kexec on panic using new system call")
    Signed-off-by: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Dave Young <dyoung@redhat.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/725fa3dc1da2737f0f6188a1a9701bead257ea9d.camel@gmx.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d79032932386700907ea258f9946a303bfdff86
Author: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
Date:   Fri Apr 16 15:46:15 2021 -0700

    ia64: tools: remove duplicate definition of ia64_mf() on ia64
    
    [ Upstream commit f4bf09dc3aaa4b07cd15630f2023f68cb2668809 ]
    
    The ia64_mf() macro defined in tools/arch/ia64/include/asm/barrier.h is
    already defined in <asm/gcc_intrin.h> on ia64 which causes libbpf
    failing to build:
    
        CC       /usr/src/linux/tools/bpf/bpftool//libbpf/staticobjs/libbpf.o
      In file included from /usr/src/linux/tools/include/asm/barrier.h:24,
                       from /usr/src/linux/tools/include/linux/ring_buffer.h:4,
                       from libbpf.c:37:
      /usr/src/linux/tools/include/asm/../../arch/ia64/include/asm/barrier.h:43: error: "ia64_mf" redefined [-Werror]
         43 | #define ia64_mf()       asm volatile ("mf" ::: "memory")
            |
      In file included from /usr/include/ia64-linux-gnu/asm/intrinsics.h:20,
                       from /usr/include/ia64-linux-gnu/asm/swab.h:11,
                       from /usr/include/linux/swab.h:8,
                       from /usr/include/linux/byteorder/little_endian.h:13,
                       from /usr/include/ia64-linux-gnu/asm/byteorder.h:5,
                       from /usr/src/linux/tools/include/uapi/linux/perf_event.h:20,
                       from libbpf.c:36:
      /usr/include/ia64-linux-gnu/asm/gcc_intrin.h:382: note: this is the location of the previous definition
        382 | #define ia64_mf() __asm__ volatile ("mf" ::: "memory")
            |
      cc1: all warnings being treated as errors
    
    Thus, remove the definition from tools/arch/ia64/include/asm/barrier.h.
    
    Signed-off-by: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8998db1b35c2691b1276ab69426fafafda08ddca
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Apr 16 15:46:09 2021 -0700

    ia64: fix discontig.c section mismatches
    
    [ Upstream commit e2af9da4f867a1a54f1252bf3abc1a5c63951778 ]
    
    Fix IA64 discontig.c Section mismatch warnings.
    
    When CONFIG_SPARSEMEM=y and CONFIG_MEMORY_HOTPLUG=y, the functions
    computer_pernodesize() and scatter_node_data() should not be marked as
    __meminit because they are needed after init, on any memory hotplug
    event.  Also, early_nr_cpus_node() is called by compute_pernodesize(),
    so early_nr_cpus_node() cannot be __meminit either.
    
      WARNING: modpost: vmlinux.o(.text.unlikely+0x1612): Section mismatch in reference from the function arch_alloc_nodedata() to the function .meminit.text:compute_pernodesize()
      The function arch_alloc_nodedata() references the function __meminit compute_pernodesize().
      This is often because arch_alloc_nodedata lacks a __meminit annotation or the annotation of compute_pernodesize is wrong.
    
      WARNING: modpost: vmlinux.o(.text.unlikely+0x1692): Section mismatch in reference from the function arch_refresh_nodedata() to the function .meminit.text:scatter_node_data()
      The function arch_refresh_nodedata() references the function __meminit scatter_node_data().
      This is often because arch_refresh_nodedata lacks a __meminit annotation or the annotation of scatter_node_data is wrong.
    
      WARNING: modpost: vmlinux.o(.text.unlikely+0x1502): Section mismatch in reference from the function compute_pernodesize() to the function .meminit.text:early_nr_cpus_node()
      The function compute_pernodesize() references the function __meminit early_nr_cpus_node().
      This is often because compute_pernodesize lacks a __meminit annotation or the annotation of early_nr_cpus_node is wrong.
    
    Link: https://lkml.kernel.org/r/20210411001201.3069-1-rdunlap@infradead.org
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Mike Rapoport <rppt@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b84674ec484e79629c4f0d3ea4a6dad3c3e43fc0
Author: Wan Jiabing <wanjiabing@vivo.com>
Date:   Wed Apr 14 19:31:48 2021 +0800

    cavium/liquidio: Fix duplicate argument
    
    [ Upstream commit 416dcc5ce9d2a810477171c62ffa061a98f87367 ]
    
    Fix the following coccicheck warning:
    
    ./drivers/net/ethernet/cavium/liquidio/cn66xx_regs.h:413:6-28:
    duplicated argument to & or |
    
    The CN6XXX_INTR_M1UPB0_ERR here is duplicate.
    Here should be CN6XXX_INTR_M1UNB0_ERR.
    
    Signed-off-by: Wan Jiabing <wanjiabing@vivo.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6aeacb9a61324f7425ebdb976bdd29d26ac47890
Author: Michael Brown <mbrown@fensystems.co.uk>
Date:   Tue Apr 13 16:25:12 2021 +0100

    xen-netback: Check for hotplug-status existence before watching
    
    [ Upstream commit 2afeec08ab5c86ae21952151f726bfe184f6b23d ]
    
    The logic in connect() is currently written with the assumption that
    xenbus_watch_pathfmt() will return an error for a node that does not
    exist.  This assumption is incorrect: xenstore does allow a watch to
    be registered for a nonexistent node (and will send notifications
    should the node be subsequently created).
    
    As of commit 1f2565780 ("xen-netback: remove 'hotplug-status' once it
    has served its purpose"), this leads to a failure when a domU
    transitions into XenbusStateConnected more than once.  On the first
    domU transition into Connected state, the "hotplug-status" node will
    be deleted by the hotplug_status_changed() callback in dom0.  On the
    second or subsequent domU transition into Connected state, the
    hotplug_status_changed() callback will therefore never be invoked, and
    so the backend will remain stuck in InitWait.
    
    This failure prevents scenarios such as reloading the xen-netfront
    module within a domU, or booting a domU via iPXE.  There is
    unfortunately no way for the domU to work around this dom0 bug.
    
    Fix by explicitly checking for existence of the "hotplug-status" node,
    thereby creating the behaviour that was previously assumed to exist.
    
    Signed-off-by: Michael Brown <mbrown@fensystems.co.uk>
    Reviewed-by: Paul Durrant <paul@xen.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f396ee19c5f19c6bba2458fad218e228655d8f7
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Fri Apr 9 00:15:21 2021 +0200

    s390/entry: save the caller of psw_idle
    
    [ Upstream commit a994eddb947ea9ebb7b14d9a1267001699f0a136 ]
    
    Currently psw_idle does not allocate a stack frame and does not
    save its r14 and r15 into the save area. Even though this is valid from
    call ABI point of view, because psw_idle does not make any calls
    explicitly, in reality psw_idle is an entry point for controlled
    transition into serving interrupts. So, in practice, psw_idle stack
    frame is analyzed during stack unwinding. Depending on build options
    that r14 slot in the save area of psw_idle might either contain a value
    saved by previous sibling call or complete garbage.
    
      [task    0000038000003c28] do_ext_irq+0xd6/0x160
      [task    0000038000003c78] ext_int_handler+0xba/0xe8
      [task   *0000038000003dd8] psw_idle_exit+0x0/0x8 <-- pt_regs
     ([task    0000038000003dd8] 0x0)
      [task    0000038000003e10] default_idle_call+0x42/0x148
      [task    0000038000003e30] do_idle+0xce/0x160
      [task    0000038000003e70] cpu_startup_entry+0x36/0x40
      [task    0000038000003ea0] arch_call_rest_init+0x76/0x80
    
    So, to make a stacktrace nicer and actually point for the real caller of
    psw_idle in this frequently occurring case, make psw_idle save its r14.
    
      [task    0000038000003c28] do_ext_irq+0xd6/0x160
      [task    0000038000003c78] ext_int_handler+0xba/0xe8
      [task   *0000038000003dd8] psw_idle_exit+0x0/0x6 <-- pt_regs
     ([task    0000038000003dd8] arch_cpu_idle+0x3c/0xd0)
      [task    0000038000003e10] default_idle_call+0x42/0x148
      [task    0000038000003e30] do_idle+0xce/0x160
      [task    0000038000003e70] cpu_startup_entry+0x36/0x40
      [task    0000038000003ea0] arch_call_rest_init+0x76/0x80
    
    Reviewed-by: Sven Schnelle <svens@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5e293c18bb9922b21b30678f06c79ce9b46ea52
Author: Phillip Potter <phil@philpotter.co.uk>
Date:   Sun Apr 11 12:28:24 2021 +0100

    net: geneve: check skb is large enough for IPv4/IPv6 header
    
    [ Upstream commit 6628ddfec7580882f11fdc5c194a8ea781fdadfa ]
    
    Check within geneve_xmit_skb/geneve6_xmit_skb that sk_buff structure
    is large enough to include IPv4 or IPv6 header, and reject if not. The
    geneve_xmit_skb portion and overall idea was contributed by Eric Dumazet.
    Fixes a KMSAN-found uninit-value bug reported by syzbot at:
    https://syzkaller.appspot.com/bug?id=abe95dc3e3e9667fc23b8d81f29ecad95c6f106f
    
    Suggested-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot+2e406a9ac75bb71d4b7a@syzkaller.appspotmail.com
    Signed-off-by: Phillip Potter <phil@philpotter.co.uk>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b20b3d4493b792368857884da1d1b1aaf8a3c08
Author: Tony Lindgren <tony@atomide.com>
Date:   Wed Mar 24 15:10:32 2021 +0200

    ARM: dts: Fix swapped mmc order for omap3
    
    [ Upstream commit a1ebdb3741993f853865d1bd8f77881916ad53a7 ]
    
    Also some omap3 devices like n900 seem to have eMMC and micro-sd swapped
    around with commit 21b2cec61c04 ("mmc: Set PROBE_PREFER_ASYNCHRONOUS for
    drivers that existed in v4.4").
    
    Let's fix the issue with aliases as discussed on the mailing lists. While
    the mmc aliases should be board specific, let's first fix the issue with
    minimal changes.
    
    Cc: Aaro Koskinen <aaro.koskinen@iki.fi>
    Cc: Peter Ujfalusi <peter.ujfalusi@gmail.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d36babd999aae76ee7d79fc19e673d7e7e722e2
Author: Jiapeng Zhong <abaci-bugfix@linux.alibaba.com>
Date:   Wed Jan 20 15:34:30 2021 +0800

    HID: wacom: Assign boolean values to a bool variable
    
    [ Upstream commit e29c62ffb008829dc8bcc0a2ec438adc25a8255e ]
    
    Fix the following coccicheck warnings:
    
    ./drivers/hid/wacom_wac.c:2536:2-6: WARNING: Assignment of
    0/1 to bool variable.
    
    Reported-by: Abaci Robot <abaci@linux.alibaba.com>
    Signed-off-by: Jiapeng Zhong <abaci-bugfix@linux.alibaba.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b80eaeffdc12c2f6cb4bbd9e68eb175bbdcf78e3
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Thu Mar 4 05:19:57 2021 -0800

    HID: alps: fix error return code in alps_input_configured()
    
    [ Upstream commit fa8ba6e5dc0e78e409e503ddcfceef5dd96527f4 ]
    
    When input_register_device() fails, no error return code is assigned.
    To fix this bug, ret is assigned with -ENOENT as error return code.
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ad0bfa6669916af4ae5e01dccde565228b54e95
Author: Yuanyuan Zhong <yzhong@purestorage.com>
Date:   Mon Apr 12 17:17:59 2021 -0600

    pinctrl: lewisburg: Update number of pins in community
    
    [ Upstream commit 196d941753297d0ca73c563ccd7d00be049ec226 ]
    
    When updating pin names for Intel Lewisburg, the numbers of pins were
    left behind. Update them accordingly.
    
    Fixes: e66ff71fd0db ("pinctrl: lewisburg: Update pin list according to v1.1v6")
    Signed-off-by: Yuanyuan Zhong <yzhong@purestorage.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cac819f3e5a78a553296b6403ea9fef5db750d04
Author: Zhang Yi <yi.zhang@huawei.com>
Date:   Fri Apr 23 20:42:08 2021 +0800

    ext4: correct error label in ext4_rename()
    
    The backport of upstream patch 5dccdc5a1916 ("ext4: do not iput inode
    under running transaction in ext4_rename()") introduced a regression on
    the stable kernels 4.14 and older. One of the end_rename error label was
    forgetting to change to release_bh, which may trigger below bug.
    
     ------------[ cut here ]------------
     kernel BUG at /home/zhangyi/hulk-4.4/fs/ext4/ext4_jbd2.c:30!
     ...
     Call Trace:
      [<ffffffff8b4207b2>] ext4_rename+0x9e2/0x10c0
      [<ffffffff8b331324>] ? unlazy_walk+0x124/0x2a0
      [<ffffffff8b420eb5>] ext4_rename2+0x25/0x60
      [<ffffffff8b335104>] vfs_rename+0x3a4/0xed0
      [<ffffffff8b33a7ad>] SYSC_renameat2+0x57d/0x7f0
      [<ffffffff8b33c119>] SyS_renameat+0x19/0x30
      [<ffffffff8bc57bb8>] entry_SYSCALL_64_fastpath+0x18/0x78
     ...
     ---[ end trace 75346ce7c76b9f06 ]---
    
    Fixes: d962f1b4ef54 ("ext4: do not iput inode under running transaction in ext4_rename()")
    Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba800a31b358b8e05cea0b86dab002cd58a665b6
Author: Anirudh Rayabharam <mail@anirudhrb.com>
Date:   Wed Apr 7 22:57:22 2021 +0530

    net: hso: fix null-ptr-deref during tty device unregistration
    
    commit 8a12f8836145ffe37e9c8733dce18c22fb668b66 upstream
    
    Multiple ttys try to claim the same the minor number causing a double
    unregistration of the same device. The first unregistration succeeds
    but the next one results in a null-ptr-deref.
    
    The get_free_serial_index() function returns an available minor number
    but doesn't assign it immediately. The assignment is done by the caller
    later. But before this assignment, calls to get_free_serial_index()
    would return the same minor number.
    
    Fix this by modifying get_free_serial_index to assign the minor number
    immediately after one is found to be and rename it to obtain_minor()
    to better reflect what it does. Similary, rename set_serial_by_index()
    to release_minor() and modify it to free up the minor number of the
    given hso_serial. Every obtain_minor() should have corresponding
    release_minor() call.
    
    Fixes: 72dc1c096c705 ("HSO: add option hso driver")
    Reported-by: syzbot+c49fe6089f295a05e6f8@syzkaller.appspotmail.com
    Tested-by: syzbot+c49fe6089f295a05e6f8@syzkaller.appspotmail.com
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Anirudh Rayabharam <mail@anirudhrb.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [sudip: adjust context]
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a026576e8f2e011e17b3d99ce1952ef6d1aa689
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed May 27 18:29:34 2020 -0700

    gup: document and work around "COW can break either way" issue
    
    commit 17839856fd588f4ab6b789f482ed3ffd7c403e1f upstream.
    
    Doing a "get_user_pages()" on a copy-on-write page for reading can be
    ambiguous: the page can be COW'ed at any time afterwards, and the
    direction of a COW event isn't defined.
    
    Yes, whoever writes to it will generally do the COW, but if the thread
    that did the get_user_pages() unmapped the page before the write (and
    that could happen due to memory pressure in addition to any outright
    action), the writer could also just take over the old page instead.
    
    End result: the get_user_pages() call might result in a page pointer
    that is no longer associated with the original VM, and is associated
    with - and controlled by - another VM having taken it over instead.
    
    So when doing a get_user_pages() on a COW mapping, the only really safe
    thing to do would be to break the COW when getting the page, even when
    only getting it for reading.
    
    At the same time, some users simply don't even care.
    
    For example, the perf code wants to look up the page not because it
    cares about the page, but because the code simply wants to look up the
    physical address of the access for informational purposes, and doesn't
    really care about races when a page might be unmapped and remapped
    elsewhere.
    
    This adds logic to force a COW event by setting FOLL_WRITE on any
    copy-on-write mapping when FOLL_GET (or FOLL_PIN) is used to get a page
    pointer as a result.
    
    The current semantics end up being:
    
     - __get_user_pages_fast(): no change. If you don't ask for a write,
       you won't break COW. You'd better know what you're doing.
    
     - get_user_pages_fast(): the fast-case "look it up in the page tables
       without anything getting mmap_sem" now refuses to follow a read-only
       page, since it might need COW breaking.  Which happens in the slow
       path - the fast path doesn't know if the memory might be COW or not.
    
     - get_user_pages() (including the slow-path fallback for gup_fast()):
       for a COW mapping, turn on FOLL_WRITE for FOLL_GET/FOLL_PIN, with
       very similar semantics to FOLL_FORCE.
    
    If it turns out that we want finer granularity (ie "only break COW when
    it might actually matter" - things like the zero page are special and
    don't need to be broken) we might need to push these semantics deeper
    into the lookup fault path.  So if people care enough, it's possible
    that we might end up adding a new internal FOLL_BREAK_COW flag to go
    with the internal FOLL_COW flag we already have for tracking "I had a
    COW".
    
    Alternatively, if it turns out that different callers might want to
    explicitly control the forced COW break behavior, we might even want to
    make such a flag visible to the users of get_user_pages() instead of
    using the above default semantics.
    
    But for now, this is mostly commentary on the issue (this commit message
    being a lot bigger than the patch, and that patch in turn is almost all
    comments), with that minimal "enable COW breaking early" logic using the
    existing FOLL_WRITE behavior.
    
    [ It might be worth noting that we've always had this ambiguity, and it
      could arguably be seen as a user-space issue.
    
      You only get private COW mappings that could break either way in
      situations where user space is doing cooperative things (ie fork()
      before an execve() etc), but it _is_ surprising and very subtle, and
      fork() is supposed to give you independent address spaces.
    
      So let's treat this as a kernel issue and make the semantics of
      get_user_pages() easier to understand. Note that obviously a true
      shared mapping will still get a page that can change under us, so this
      does _not_ mean that get_user_pages() somehow returns any "stable"
      page ]
    
    [surenb: backport notes
            Replaced (gup_flags | FOLL_WRITE) with write=1 in gup_pgd_range.
            Removed FOLL_PIN usage in should_force_cow_break since it's missing in
            the earlier kernels.]
    
    Reported-by: Jann Horn <jannh@google.com>
    Tested-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Acked-by: Kirill Shutemov <kirill@shutemov.name>
    Acked-by: Jan Kara <jack@suse.cz>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [surenb: backport to 4.14 kernel]
    Cc: stable@vger.kernel.org # 4.14.x
    Signed-off-by: Suren Baghdasaryan <surenb@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d13fa62ef36b7a228d17743f63a3f3d27109a9c
Author: Fredrik Strupe <fredrik@strupe.net>
Date:   Mon Apr 5 21:52:05 2021 +0100

    ARM: 9071/1: uprobes: Don't hook on thumb instructions
    
    commit d2f7eca60b29006285d57c7035539e33300e89e5 upstream.
    
    Since uprobes is not supported for thumb, check that the thumb bit is
    not set when matching the uprobes instruction hooks.
    
    The Arm UDF instructions used for uprobes triggering
    (UPROBE_SWBP_ARM_INSN and UPROBE_SS_ARM_INSN) coincidentally share the
    same encoding as a pair of unallocated 32-bit thumb instructions (not
    UDF) when the condition code is 0b1111 (0xf). This in effect makes it
    possible to trigger the uprobes functionality from thumb, and at that
    using two unallocated instructions which are not permanently undefined.
    
    Signed-off-by: Fredrik Strupe <fredrik@strupe.net>
    Cc: stable@vger.kernel.org
    Fixes: c7edc9e326d5 ("ARM: add uprobes support")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 796bdc9bcd24bc522792548799b334e5fc894bbd
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Thu Mar 25 10:26:21 2021 +0000

    ARM: footbridge: fix PCI interrupt mapping
    
    [ Upstream commit 30e3b4f256b4e366a61658c294f6a21b8626dda7 ]
    
    Since commit 30fdfb929e82 ("PCI: Add a call to pci_assign_irq() in
    pci_device_probe()"), the PCI code will call the IRQ mapping function
    whenever a PCI driver is probed. If these are marked as __init, this
    causes an oops if a PCI driver is loaded or bound after the kernel has
    initialised.
    
    Fixes: 30fdfb929e82 ("PCI: Add a call to pci_assign_irq() in pci_device_probe()")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7f5a23204fc5d7470154571c8fe7df62ec01165
Author: Lijun Pan <lijunp213@gmail.com>
Date:   Wed Apr 14 02:46:16 2021 -0500

    ibmvnic: remove duplicate napi_schedule call in open function
    
    commit 7c451f3ef676c805a4b77a743a01a5c21a250a73 upstream.
    
    Remove the unnecessary napi_schedule() call in __ibmvnic_open() since
    interrupt_rx() calls napi_schedule_prep/__napi_schedule during every
    receive interrupt.
    
    Fixes: ed651a10875f ("ibmvnic: Updated reset handling")
    Signed-off-by: Lijun Pan <lijunp213@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c92e42cd4118ee94fd26393920299de8830b55de
Author: Lijun Pan <lijunp213@gmail.com>
Date:   Wed Apr 14 02:46:15 2021 -0500

    ibmvnic: remove duplicate napi_schedule call in do_reset function
    
    commit d3a6abccbd272aea7dc2c6f984bb5a2c11278e44 upstream.
    
    During adapter reset, do_reset/do_hard_reset calls ibmvnic_open(),
    which will calls napi_schedule if previous state is VNIC_CLOSED
    (i.e, the reset case, and "ifconfig down" case). So there is no need
    for do_reset to call napi_schedule again at the end of the function
    though napi_schedule will neglect the request if napi is already
    scheduled.
    
    Fixes: ed651a10875f ("ibmvnic: Updated reset handling")
    Signed-off-by: Lijun Pan <lijunp213@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb3aa0e9cfb44a2117dff5d2183d6a7b2ce62e3f
Author: Lijun Pan <lijunp213@gmail.com>
Date:   Wed Apr 14 02:46:14 2021 -0500

    ibmvnic: avoid calling napi_disable() twice
    
    commit 0775ebc4cf8554bdcd2c212669a0868ab68df5c0 upstream.
    
    __ibmvnic_open calls napi_disable without checking whether NAPI polling
    has already been disabled or not. This could cause napi_disable
    being called twice, which could generate deadlock. For example,
    the first napi_disable will spin until NAPI_STATE_SCHED is cleared
    by napi_complete_done, then set it again.
    When napi_disable is called the second time, it will loop infinitely
    because no dev->poll will be running to clear NAPI_STATE_SCHED.
    
    To prevent above scenario from happening, call ibmvnic_napi_disable()
    which checks if napi is disabled or not before calling napi_disable.
    
    Fixes: bfc32f297337 ("ibmvnic: Move resource initialization to its own routine")
    Suggested-by: Thomas Falcon <tlfalcon@linux.ibm.com>
    Signed-off-by: Lijun Pan <lijunp213@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3329692660f85b71b4e8d9573a8a98151adbf35f
Author: Jason Xing <xingwanli@kuaishou.com>
Date:   Wed Apr 14 10:34:28 2021 +0800

    i40e: fix the panic when running bpf in xdpdrv mode
    
    commit 4e39a072a6a0fc422ba7da5e4336bdc295d70211 upstream.
    
    Fix this panic by adding more rules to calculate the value of @rss_size_max
    which could be used in allocating the queues when bpf is loaded, which,
    however, could cause the failure and then trigger the NULL pointer of
    vsi->rx_rings. Prio to this fix, the machine doesn't care about how many
    cpus are online and then allocates 256 queues on the machine with 32 cpus
    online actually.
    
    Once the load of bpf begins, the log will go like this "failed to get
    tracking for 256 queues for VSI 0 err -12" and this "setup of MAIN VSI
    failed".
    
    Thus, I attach the key information of the crash-log here.
    
    BUG: unable to handle kernel NULL pointer dereference at
    0000000000000000
    RIP: 0010:i40e_xdp+0xdd/0x1b0 [i40e]
    Call Trace:
    [2160294.717292]  ? i40e_reconfig_rss_queues+0x170/0x170 [i40e]
    [2160294.717666]  dev_xdp_install+0x4f/0x70
    [2160294.718036]  dev_change_xdp_fd+0x11f/0x230
    [2160294.718380]  ? dev_disable_lro+0xe0/0xe0
    [2160294.718705]  do_setlink+0xac7/0xe70
    [2160294.719035]  ? __nla_parse+0xed/0x120
    [2160294.719365]  rtnl_newlink+0x73b/0x860
    
    Fixes: 41c445ff0f48 ("i40e: main driver core")
    Co-developed-by: Shujin Li <lishujin@kuaishou.com>
    Signed-off-by: Shujin Li <lishujin@kuaishou.com>
    Signed-off-by: Jason Xing <xingwanli@kuaishou.com>
    Reviewed-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Acked-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0eff6120d43fc86d2c247dbc111745ddcec149e
Author: Hristo Venev <hristo@venev.name>
Date:   Mon Apr 12 20:41:16 2021 +0300

    net: sit: Unregister catch-all devices
    
    commit 610f8c0fc8d46e0933955ce13af3d64484a4630a upstream.
    
    A sit interface created without a local or a remote address is linked
    into the `sit_net::tunnels_wc` list of its original namespace. When
    deleting a network namespace, delete the devices that have been moved.
    
    The following script triggers a null pointer dereference if devices
    linked in a deleted `sit_net` remain:
    
        for i in `seq 1 30`; do
            ip netns add ns-test
            ip netns exec ns-test ip link add dev veth0 type veth peer veth1
            ip netns exec ns-test ip link add dev sit$i type sit dev veth0
            ip netns exec ns-test ip link set dev sit$i netns $$
            ip netns del ns-test
        done
        for i in `seq 1 30`; do
            ip link del dev sit$i
        done
    
    Fixes: 5e6700b3bf98f ("sit: add support of x-netns")
    Signed-off-by: Hristo Venev <hristo@venev.name>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 703c1f8782d373065b585d72302724bd03c79519
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Apr 11 11:02:08 2021 +0200

    net: davicom: Fix regulator not turned off on failed probe
    
    commit 31457db3750c0b0ed229d836f2609fdb8a5b790e upstream.
    
    When the probe fails, we must disable the regulator that was previously
    enabled.
    
    This patch is a follow-up to commit ac88c531a5b3
    ("net: davicom: Fix regulator not turned off on failed probe") which missed
    one case.
    
    Fixes: 7994fe55a4a2 ("dm9000: Add regulator and reset support to dm9000")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 428c5edd9c8505330ffab818193474d9d36d83a9
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Apr 9 08:49:39 2021 -0700

    netfilter: nft_limit: avoid possible divide error in nft_limit_init
    
    commit b895bdf5d643b6feb7c60856326dd4feb6981560 upstream.
    
    div_u64() divides u64 by u32.
    
    nft_limit_init() wants to divide u64 by u64, use the appropriate
    math function (div64_u64)
    
    divide error: 0000 [#1] PREEMPT SMP KASAN
    CPU: 1 PID: 8390 Comm: syz-executor188 Not tainted 5.12.0-rc4-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:div_u64_rem include/linux/math64.h:28 [inline]
    RIP: 0010:div_u64 include/linux/math64.h:127 [inline]
    RIP: 0010:nft_limit_init+0x2a2/0x5e0 net/netfilter/nft_limit.c:85
    Code: ef 4c 01 eb 41 0f 92 c7 48 89 de e8 38 a5 22 fa 4d 85 ff 0f 85 97 02 00 00 e8 ea 9e 22 fa 4c 0f af f3 45 89 ed 31 d2 4c 89 f0 <49> f7 f5 49 89 c6 e8 d3 9e 22 fa 48 8d 7d 48 48 b8 00 00 00 00 00
    RSP: 0018:ffffc90009447198 EFLAGS: 00010246
    RAX: 0000000000000000 RBX: 0000200000000000 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: ffffffff875152e6 RDI: 0000000000000003
    RBP: ffff888020f80908 R08: 0000200000000000 R09: 0000000000000000
    R10: ffffffff875152d8 R11: 0000000000000000 R12: ffffc90009447270
    R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
    FS:  000000000097a300(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000200001c4 CR3: 0000000026a52000 CR4: 00000000001506e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     nf_tables_newexpr net/netfilter/nf_tables_api.c:2675 [inline]
     nft_expr_init+0x145/0x2d0 net/netfilter/nf_tables_api.c:2713
     nft_set_elem_expr_alloc+0x27/0x280 net/netfilter/nf_tables_api.c:5160
     nf_tables_newset+0x1997/0x3150 net/netfilter/nf_tables_api.c:4321
     nfnetlink_rcv_batch+0x85a/0x21b0 net/netfilter/nfnetlink.c:456
     nfnetlink_rcv_skb_batch net/netfilter/nfnetlink.c:580 [inline]
     nfnetlink_rcv+0x3af/0x420 net/netfilter/nfnetlink.c:598
     netlink_unicast_kernel net/netlink/af_netlink.c:1312 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1338
     netlink_sendmsg+0x856/0xd90 net/netlink/af_netlink.c:1927
     sock_sendmsg_nosec net/socket.c:654 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:674
     ____sys_sendmsg+0x6e8/0x810 net/socket.c:2350
     ___sys_sendmsg+0xf3/0x170 net/socket.c:2404
     __sys_sendmsg+0xe5/0x1b0 net/socket.c:2433
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Fixes: c26844eda9d4 ("netfilter: nf_tables: Fix nft limit burst handling")
    Fixes: 3e0f64b7dd31 ("netfilter: nft_limit: fix packet ratelimiting")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Diagnosed-by: Luigi Rizzo <lrizzo@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4da94234449f8056093f3a38ca7e843fa4cebc7f
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Wed Mar 31 01:04:45 2021 +0200

    netfilter: conntrack: do not print icmpv6 as unknown via /proc
    
    commit fbea31808ca124dd73ff6bb1e67c9af4607c3e32 upstream.
    
    /proc/net/nf_conntrack shows icmpv6 as unknown.
    
    Fixes: 09ec82f5af99 ("netfilter: conntrack: remove protocol name from l4proto struct")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47f38ed1f342ac1a53db91cb84feabe13a3ec66b
Author: Jolly Shah <jollys@google.com>
Date:   Thu Mar 18 15:56:32 2021 -0700

    scsi: libsas: Reset num_scatter if libata marks qc as NODATA
    
    commit 176ddd89171ddcf661862d90c5d257877f7326d6 upstream.
    
    When the cache_type for the SCSI device is changed, the SCSI layer issues a
    MODE_SELECT command. The caching mode details are communicated via a
    request buffer associated with the SCSI command with data direction set as
    DMA_TO_DEVICE (scsi_mode_select()). When this command reaches the libata
    layer, as a part of generic initial setup, libata layer sets up the
    scatterlist for the command using the SCSI command (ata_scsi_qc_new()).
    This command is then translated by the libata layer into
    ATA_CMD_SET_FEATURES (ata_scsi_mode_select_xlat()). The libata layer treats
    this as a non-data command (ata_mselect_caching()), since it only needs an
    ATA taskfile to pass the caching on/off information to the device. It does
    not need the scatterlist that has been setup, so it does not perform
    dma_map_sg() on the scatterlist (ata_qc_issue()). Unfortunately, when this
    command reaches the libsas layer (sas_ata_qc_issue()), libsas layer sees it
    as a non-data command with a scatterlist. It cannot extract the correct DMA
    length since the scatterlist has not been mapped with dma_map_sg() for a
    DMA operation. When this partially constructed SAS task reaches pm80xx
    LLDD, it results in the following warning:
    
    "pm80xx_chip_sata_req 6058: The sg list address
    start_addr=0x0000000000000000 data_len=0x0end_addr_high=0xffffffff
    end_addr_low=0xffffffff has crossed 4G boundary"
    
    Update libsas to handle ATA non-data commands separately so num_scatter and
    total_xfer_len remain 0.
    
    Link: https://lore.kernel.org/r/20210318225632.2481291-1-jollys@google.com
    Fixes: 53de092f47ff ("scsi: libsas: Set data_dir as DMA_NONE if libata marks qc as NODATA")
    Tested-by: Luo Jiaxing <luojiaxing@huawei.com>
    Reviewed-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Jolly Shah <jollys@google.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5560502ab076c083a1def89a7caa41c57f15640
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Tue Apr 13 17:08:04 2021 -0700

    arm64: alternatives: Move length validation in alternative_{insn, endif}
    
    commit 22315a2296f4c251fa92aec45fbbae37e9301b6c upstream.
    
    After commit 2decad92f473 ("arm64: mte: Ensure TIF_MTE_ASYNC_FAULT is
    set atomically"), LLVM's integrated assembler fails to build entry.S:
    
    <instantiation>:5:7: error: expected assembly-time absolute expression
     .org . - (664b-663b) + (662b-661b)
          ^
    <instantiation>:6:7: error: expected assembly-time absolute expression
     .org . - (662b-661b) + (664b-663b)
          ^
    
    The root cause is LLVM's assembler has a one-pass design, meaning it
    cannot figure out these instruction lengths when the .org directive is
    outside of the subsection that they are in, which was changed by the
    .arch_extension directive added in the above commit.
    
    Apply the same fix from commit 966a0acce2fc ("arm64/alternatives: move
    length validation inside the subsection") to the alternative_endif
    macro, shuffling the .org directives so that the length validation
    happen will always happen in the same subsections. alternative_insn has
    not shown any issue yet but it appears that it could have the same issue
    in the future so just preemptively change it.
    
    Fixes: f7b93d42945c ("arm64/alternatives: use subsections for replacement sequences")
    Cc: <stable@vger.kernel.org> # 5.8.x
    Link: https://github.com/ClangBuiltLinux/linux/issues/1347
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Sami Tolvanen <samitolvanen@google.com>
    Tested-by: Sami Tolvanen <samitolvanen@google.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Tested-by: Nick Desaulniers <ndesaulniers@google.com>
    Link: https://lore.kernel.org/r/20210414000803.662534-1-nathan@kernel.org
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4110597198e2b1ec57a79942767aaf6089da5772
Author: Peter Collingbourne <pcc@google.com>
Date:   Thu Apr 1 09:51:10 2021 -0700

    arm64: fix inline asm in load_unaligned_zeropad()
    
    commit 185f2e5f51c2029efd9dd26cceb968a44fe053c6 upstream.
    
    The inline asm's addr operand is marked as input-only, however in
    the case where an exception is taken it may be modified by the BIC
    instruction on the exception path. Fix the problem by using a temporary
    register as the destination register for the BIC instruction.
    
    Signed-off-by: Peter Collingbourne <pcc@google.com>
    Cc: stable@vger.kernel.org
    Link: https://linux-review.googlesource.com/id/I84538c8a2307d567b4f45bb20b715451005f9617
    Link: https://lore.kernel.org/r/20210401165110.3952103-1-pcc@google.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd482310f155de7e8f50d4b3a1c503da148c49de
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Apr 17 09:27:04 2021 -0700

    readdir: make sure to verify directory entry for legacy interfaces too
    
    commit 0c93ac69407d63a85be0129aa55ffaec27ffebd3 upstream.
    
    This does the directory entry name verification for the legacy
    "fillonedir" (and compat) interface that goes all the way back to the
    dark ages before we had a proper dirent, and the readdir() system call
    returned just a single entry at a time.
    
    Nobody should use this interface unless you still have binaries from
    1991, but let's do it right.
    
    This came up during discussions about unsafe_copy_to_user() and proper
    checking of all the inputs to it, as the networking layer is looking to
    use it in a few new places.  So let's make sure the _old_ users do it
    all right and proper, before we add new ones.
    
    See also commit 8a23eb804ca4 ("Make filldir[64]() verify the directory
    entry filename is valid") which did the proper modern interfaces that
    people actually use. It had a note:
    
        Note that I didn't bother adding the checks to any legacy interfaces
        that nobody uses.
    
    which this now corrects.  Note that we really don't care about POSIX and
    the presense of '/' in a directory entry, but verify_dirent_name() also
    ends up doing the proper name length verification which is what the
    input checking discussion was about.
    
    [ Another option would be to remove the support for this particular very
      old interface: any binaries that use it are likely a.out binaries, and
      they will no longer run anyway since we removed a.out binftm support
      in commit eac616557050 ("x86: Deprecate a.out support").
    
      But I'm not sure which came first: getdents() or ELF support, so let's
      pretend somebody might still have a working binary that uses the
      legacy readdir() case.. ]
    
    Link: https://lore.kernel.org/lkml/CAHk-=wjbvzCAhAtvG0d81W5o0-KT5PPTHhfJ5ieDFq+bGtgOYg@mail.gmail.com/
    Acked-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03402e981ac15a60fb423ddedf195213f0148f3a
Author: Ping Cheng <pinglinux@gmail.com>
Date:   Thu Mar 11 11:30:09 2021 -0800

    HID: wacom: set EV_KEY and EV_ABS only for non-HID_GENERIC type of devices
    
    commit 276559d8d02c2709281578976ca2f53bc62063d4 upstream.
    
    Valid HID_GENERIC type of devices set EV_KEY and EV_ABS by wacom_map_usage.
    When *_input_capabilities are reached, those devices should already have
    their proper EV_* set. EV_KEY and EV_ABS only need to be set for
    non-HID_GENERIC type of devices in *_input_capabilities.
    
    Devices that don't support HID descitoprs will pass back to hid-input for
    registration without being accidentally rejected by the introduction of
    patch: "Input: refuse to register absolute devices without absinfo"
    
    Fixes: 6ecfe51b4082 ("Input: refuse to register absolute devices without absinfo")
    Signed-off-by: Ping Cheng <ping.cheng@wacom.com>
    Reviewed-by: Jason Gerecke <Jason.Gerecke@wacom.com>
    Tested-by: Juan Garrido <Juan.Garrido@wacom.com>
    CC: stable@vger.kernel.org
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6956a1d7a789f59e0f4af51d80885459cfff5ead
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Mar 23 09:56:34 2021 -0700

    Input: i8042 - fix Pegatron C15B ID entry
    
    commit daa58c8eec0a65ac8e2e77ff3ea8a233d8eec954 upstream.
    
    The Zenbook Flip entry that was added overwrites a previous one
    because of a typo:
    
    In file included from drivers/input/serio/i8042.h:23,
                     from drivers/input/serio/i8042.c:131:
    drivers/input/serio/i8042-x86ia64io.h:591:28: error: initialized field overwritten [-Werror=override-init]
      591 |                 .matches = {
          |                            ^
    drivers/input/serio/i8042-x86ia64io.h:591:28: note: (near initialization for 'i8042_dmi_noselftest_table[0].matches')
    
    Add the missing separator between the two.
    
    Fixes: b5d6e7ab7fe7 ("Input: i8042 - add ASUS Zenbook Flip to noselftest list")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Marcos Paulo de Souza <mpdesouza@suse.com>
    Link: https://lore.kernel.org/r/20210323130623.2302402-1-arnd@kernel.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3392f567493f2420af64b0188a63750a49b24c13
Author: Seevalamuthu Mariappan <seevalam@codeaurora.org>
Date:   Fri Mar 19 19:48:52 2021 +0530

    mac80211: clear sta->fast_rx when STA removed from 4-addr VLAN
    
    [ Upstream commit dd0b45538146cb6a54d6da7663b8c3afd16ebcfd ]
    
    In some race conditions, with more clients and traffic configuration,
    below crash is seen when making the interface down. sta->fast_rx wasn't
    cleared when STA gets removed from 4-addr AP_VLAN interface. The crash is
    due to try accessing 4-addr AP_VLAN interface's net_device (fast_rx->dev)
    which has been deleted already.
    
    Resolve this by clearing sta->fast_rx pointer when STA removes
    from a 4-addr VLAN.
    
    [  239.449529] Unable to handle kernel NULL pointer dereference at virtual address 00000004
    [  239.449531] pgd = 80204000
    ...
    [  239.481496] CPU: 1 PID: 0 Comm: swapper/1 Not tainted 4.4.60 #227
    [  239.481591] Hardware name: Generic DT based system
    [  239.487665] task: be05b700 ti: be08e000 task.ti: be08e000
    [  239.492360] PC is at get_rps_cpu+0x2d4/0x31c
    [  239.497823] LR is at 0xbe08fc54
    ...
    [  239.778574] [<80739740>] (get_rps_cpu) from [<8073cb10>] (netif_receive_skb_internal+0x8c/0xac)
    [  239.786722] [<8073cb10>] (netif_receive_skb_internal) from [<8073d578>] (napi_gro_receive+0x48/0xc4)
    [  239.795267] [<8073d578>] (napi_gro_receive) from [<c7b83e8c>] (ieee80211_mark_rx_ba_filtered_frames+0xbcc/0x12d4 [mac80211])
    [  239.804776] [<c7b83e8c>] (ieee80211_mark_rx_ba_filtered_frames [mac80211]) from [<c7b84d4c>] (ieee80211_rx_napi+0x7b8/0x8c8 [mac8
                0211])
    [  239.815857] [<c7b84d4c>] (ieee80211_rx_napi [mac80211]) from [<c7f63d7c>] (ath11k_dp_process_rx+0x7bc/0x8c8 [ath11k])
    [  239.827757] [<c7f63d7c>] (ath11k_dp_process_rx [ath11k]) from [<c7f5b6c4>] (ath11k_dp_service_srng+0x2c0/0x2e0 [ath11k])
    [  239.838484] [<c7f5b6c4>] (ath11k_dp_service_srng [ath11k]) from [<7f55b7dc>] (ath11k_ahb_ext_grp_napi_poll+0x20/0x84 [ath11k_ahb]
                )
    [  239.849419] [<7f55b7dc>] (ath11k_ahb_ext_grp_napi_poll [ath11k_ahb]) from [<8073ce1c>] (net_rx_action+0xe0/0x28c)
    [  239.860945] [<8073ce1c>] (net_rx_action) from [<80324868>] (__do_softirq+0xe4/0x228)
    [  239.871269] [<80324868>] (__do_softirq) from [<80324c48>] (irq_exit+0x98/0x108)
    [  239.879080] [<80324c48>] (irq_exit) from [<8035c59c>] (__handle_domain_irq+0x90/0xb4)
    [  239.886114] [<8035c59c>] (__handle_domain_irq) from [<8030137c>] (gic_handle_irq+0x50/0x94)
    [  239.894100] [<8030137c>] (gic_handle_irq) from [<803024c0>] (__irq_svc+0x40/0x74)
    
    Signed-off-by: Seevalamuthu Mariappan <seevalam@codeaurora.org>
    Link: https://lore.kernel.org/r/1616163532-3881-1-git-send-email-seevalam@codeaurora.org
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc1fbe64bb767a0fed30daa978b7fc061300b9bf
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Mar 11 10:44:45 2021 +0000

    usbip: Fix incorrect double assignment to udc->ud.tcp_rx
    
    commit 9858af27e69247c5d04c3b093190a93ca365f33d upstream.
    
    Currently udc->ud.tcp_rx is being assigned twice, the second assignment
    is incorrect, it should be to udc->ud.tcp_tx instead of rx. Fix this.
    
    Fixes: 46613c9dfa96 ("usbip: fix vudc usbip_sockfd_store races leading to gpf")
    Acked-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Cc: stable <stable@vger.kernel.org>
    Addresses-Coverity: ("Unused value")
    Link: https://lore.kernel.org/r/20210311104445.7811-1-colin.king@canonical.com
    Signed-off-by: Tom Seewald <tseewald@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6d1e72fd284f7d812a85baf5c150c4f22d03c28
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Mon Apr 5 21:29:22 2021 -0700

    pcnet32: Use pci_resource_len to validate PCI resource
    
    [ Upstream commit 66c3f05ddc538ee796321210c906b6ae6fc0792a ]
    
    pci_resource_start() is not a good indicator to determine if a PCI
    resource exists or not, since the resource may start at address 0.
    This is seen when trying to instantiate the driver in qemu for riscv32
    or riscv64.
    
    pci 0000:00:01.0: reg 0x10: [io  0x0000-0x001f]
    pci 0000:00:01.0: reg 0x14: [mem 0x00000000-0x0000001f]
    ...
    pcnet32: card has no PCI IO resources, aborting
    
    Use pci_resouce_len() instead.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7519148832216b46ed4dc10c7cc6a6b23acbe5d
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:52 2021 -0400

    net: ieee802154: forbid monitor for add llsec seclevel
    
    [ Upstream commit 9ec87e322428d4734ac647d1a8e507434086993d ]
    
    This patch forbids to add llsec seclevel for monitor interfaces which we
    don't support yet. Otherwise we will access llsec mib which isn't
    initialized for monitors.
    
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-14-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a379e07b52790145813a84b03f6b5374b242f255
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:51 2021 -0400

    net: ieee802154: stop dump llsec seclevels for monitors
    
    [ Upstream commit 4c9b4f55ad1f5a4b6206ac4ea58f273126d21925 ]
    
    This patch stops dumping llsec seclevels for monitors which we don't
    support yet. Otherwise we will access llsec mib which isn't initialized
    for monitors.
    
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-13-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ddfacb3689810907deb3d449da0edba32493eb5
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:49 2021 -0400

    net: ieee802154: forbid monitor for add llsec devkey
    
    [ Upstream commit a347b3b394868fef15b16f143719df56184be81d ]
    
    This patch forbids to add llsec devkey for monitor interfaces which we
    don't support yet. Otherwise we will access llsec mib which isn't
    initialized for monitors.
    
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-11-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77a6b91b9273dc11630d95753461f0e92201c572
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:48 2021 -0400

    net: ieee802154: stop dump llsec devkeys for monitors
    
    [ Upstream commit 080d1a57a94d93e70f84b7a360baa351388c574f ]
    
    This patch stops dumping llsec devkeys for monitors which we don't support
    yet. Otherwise we will access llsec mib which isn't initialized for
    monitors.
    
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-10-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 308334ffa92cd7f8353834c5985e2c68b2169ded
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:46 2021 -0400

    net: ieee802154: forbid monitor for add llsec dev
    
    [ Upstream commit 5303f956b05a2886ff42890908156afaec0f95ac ]
    
    This patch forbids to add llsec dev for monitor interfaces which we
    don't support yet. Otherwise we will access llsec mib which isn't
    initialized for monitors.
    
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-8-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6555ad07d0d40ca14407ecb9394b46652fa28955
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:45 2021 -0400

    net: ieee802154: stop dump llsec devs for monitors
    
    [ Upstream commit 5582d641e6740839c9b83efd1fbf9bcd00b6f5fc ]
    
    This patch stops dumping llsec devs for monitors which we don't support
    yet. Otherwise we will access llsec mib which isn't initialized for
    monitors.
    
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-7-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39aad4f97d8d5588b0c1d7f01129a4366b96c891
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:42 2021 -0400

    net: ieee802154: stop dump llsec keys for monitors
    
    [ Upstream commit fb3c5cdf88cd504ef11d59e8d656f4bc896c6922 ]
    
    This patch stops dumping llsec keys for monitors which we don't support
    yet. Otherwise we will access llsec mib which isn't initialized for
    monitors.
    
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-4-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6332fbc8f934bfaeb160f4cc17342257a07ea9d3
Author: Martin Wilck <mwilck@suse.com>
Date:   Thu Apr 1 11:11:05 2021 +0200

    scsi: scsi_transport_srp: Don't block target in SRP_PORT_LOST state
    
    [ Upstream commit 5cd0f6f57639c5afbb36100c69281fee82c95ee7 ]
    
    rport_dev_loss_timedout() sets the rport state to SRP_PORT_LOST and the
    SCSI target state to SDEV_TRANSPORT_OFFLINE. If this races with
    srp_reconnect_work(), a warning is printed:
    
    Mar 27 18:48:07 ictm1604s01h4 kernel: dev_loss_tmo expired for SRP port-18:1 / host18.
    Mar 27 18:48:07 ictm1604s01h4 kernel: ------------[ cut here ]------------
    Mar 27 18:48:07 ictm1604s01h4 kernel: scsi_internal_device_block(18:0:0:100) failed: ret = -22
    Mar 27 18:48:07 ictm1604s01h4 kernel: Call Trace:
    Mar 27 18:48:07 ictm1604s01h4 kernel:  ? scsi_target_unblock+0x50/0x50 [scsi_mod]
    Mar 27 18:48:07 ictm1604s01h4 kernel:  starget_for_each_device+0x80/0xb0 [scsi_mod]
    Mar 27 18:48:07 ictm1604s01h4 kernel:  target_block+0x24/0x30 [scsi_mod]
    Mar 27 18:48:07 ictm1604s01h4 kernel:  device_for_each_child+0x57/0x90
    Mar 27 18:48:07 ictm1604s01h4 kernel:  srp_reconnect_rport+0xe4/0x230 [scsi_transport_srp]
    Mar 27 18:48:07 ictm1604s01h4 kernel:  srp_reconnect_work+0x40/0xc0 [scsi_transport_srp]
    
    Avoid this by not trying to block targets for rports in SRP_PORT_LOST
    state.
    
    Link: https://lore.kernel.org/r/20210401091105.8046-1-mwilck@suse.com
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin Wilck <mwilck@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8933829fe9b6de455806c37c19819fd52a94bb12
Author: Alexander Shiyan <shc_work@mail.ru>
Date:   Fri Apr 2 11:14:05 2021 +0300

    ASoC: fsl_esai: Fix TDM slot setup for I2S mode
    
    [ Upstream commit e7a48c710defa0e0fef54d42b7d9e4ab596e2761 ]
    
    When using the driver in I2S TDM mode, the fsl_esai_startup()
    function rewrites the number of slots previously set by the
    fsl_esai_set_dai_tdm_slot() function to 2.
    To fix this, let's use the saved slot count value or, if TDM
    is not used and the number of slots is not set, the driver will use
    the default value (2), which is set by fsl_esai_probe().
    
    Signed-off-by: Alexander Shiyan <shc_work@mail.ru>
    Acked-by: Nicolin Chen <nicoleotsuka@gmail.com>
    Link: https://lore.kernel.org/r/20210402081405.9892-1-shc_work@mail.ru
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 046657610bd536a4502b8aa5a9887256b4f72a1d
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Mar 23 14:18:05 2021 +0100

    ARM: keystone: fix integer overflow warning
    
    [ Upstream commit 844b85dda2f569943e1e018fdd63b6f7d1d6f08e ]
    
    clang warns about an impossible condition when building with 32-bit
    phys_addr_t:
    
    arch/arm/mach-keystone/keystone.c:79:16: error: result of comparison of constant 51539607551 with expression of type 'phys_addr_t' (aka 'unsigned int') is always false [-Werror,-Wtautological-constant-out-of-range-compare]
                mem_end   > KEYSTONE_HIGH_PHYS_END) {
                ~~~~~~~   ^ ~~~~~~~~~~~~~~~~~~~~~~
    arch/arm/mach-keystone/keystone.c:78:16: error: result of comparison of constant 34359738368 with expression of type 'phys_addr_t' (aka 'unsigned int') is always true [-Werror,-Wtautological-constant-out-of-range-compare]
            if (mem_start < KEYSTONE_HIGH_PHYS_START ||
                ~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~
    
    Change the temporary variable to a fixed-size u64 to avoid the warning.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Nathan Chancellor <nathan@kernel.org>
    Acked-by: Santosh Shilimkar <ssantosh@kernel.org>
    Link: https://lore.kernel.org/r/20210323131814.2751750-1-arnd@kernel.org'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 506c301ab516a00accd6263d0acf5924e3ecfe10
Author: Tong Zhu <zhutong@amazon.com>
Date:   Fri Mar 19 14:33:37 2021 -0400

    neighbour: Disregard DEAD dst in neigh_update
    
    [ Upstream commit d47ec7a0a7271dda08932d6208e4ab65ab0c987c ]
    
    After a short network outage, the dst_entry is timed out and put
    in DST_OBSOLETE_DEAD. We are in this code because arp reply comes
    from this neighbour after network recovers. There is a potential
    race condition that dst_entry is still in DST_OBSOLETE_DEAD.
    With that, another neighbour lookup causes more harm than good.
    
    In best case all packets in arp_queue are lost. This is
    counterproductive to the original goal of finding a better path
    for those packets.
    
    I observed a worst case with 4.x kernel where a dst_entry in
    DST_OBSOLETE_DEAD state is associated with loopback net_device.
    It leads to an ethernet header with all zero addresses.
    A packet with all zero source MAC address is quite deadly with
    mac80211, ath9k and 802.11 block ack.  It fails
    ieee80211_find_sta_by_ifaddr in ath9k (xmit.c). Ath9k flushes tx
    queue (ath_tx_complete_aggr). BAW (block ack window) is not
    updated. BAW logic is damaged and ath9k transmission is disabled.
    
    Signed-off-by: Tong Zhu <zhutong@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3500893f73c5ef76dee2b2eaba9528adf7cb0d67
Author: Wang Qing <wangqing@vivo.com>
Date:   Mon Mar 1 20:05:48 2021 +0800

    arc: kernel: Return -EFAULT if copy_to_user() fails
    
    [ Upstream commit 46e152186cd89d940b26726fff11eb3f4935b45a ]
    
    The copy_to_user() function returns the number of bytes remaining to be
    copied, but we want to return -EFAULT if the copy doesn't complete.
    
    Signed-off-by: Wang Qing <wangqing@vivo.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64e8ac4f0c0bc89491a4183c842264d3ac42c7e9
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Mar 8 11:30:45 2021 +0200

    ARM: dts: Fix moving mmc devices with aliases for omap4 & 5
    
    [ Upstream commit 77335a040178a0456d4eabc8bf17a7ca3ee4a327 ]
    
    Fix moving mmc devices with dts aliases as discussed on the lists.
    Without this we now have internal eMMC mmc1 show up as mmc2 compared
    to the earlier order of devices.
    
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a69f0cc5c427cc6c0c05b73107030b9d25b844d
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Wed Mar 24 16:17:57 2021 +0200

    dmaengine: dw: Make it dependent to HAS_IOMEM
    
    [ Upstream commit 88cd1d6191b13689094310c2405394e4ce36d061 ]
    
    Some architectures do not provide devm_*() APIs. Hence make the driver
    dependent on HAVE_IOMEM.
    
    Fixes: dbde5c2934d1 ("dw_dmac: use devm_* functions to simplify code")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Link: https://lore.kernel.org/r/20210324141757.24710-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43811b680102e9bb780f47fc80b52b5905e4e491
Author: Fabian Vogt <fabian@ritter-vogt.de>
Date:   Tue Mar 23 10:45:55 2021 -0700

    Input: nspire-keypad - enable interrupts only when opened
    
    [ Upstream commit 69d5ff3e9e51e23d5d81bf48480aa5671be67a71 ]
    
    The driver registers an interrupt handler in _probe, but didn't configure
    them until later when the _open function is called. In between, the keypad
    can fire an IRQ due to touchpad activity, which the handler ignores. This
    causes the kernel to disable the interrupt, blocking the keypad from
    working.
    
    Fix this by disabling interrupts before registering the handler.
    Additionally, disable them in _close, so that they're only enabled while
    open.
    
    Fixes: fc4f31461892 ("Input: add TI-Nspire keypad support")
    Signed-off-by: Fabian Vogt <fabian@ritter-vogt.de>
    Link: https://lore.kernel.org/r/3383725.iizBOSrK1V@linux-e202.suse.de
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 424ff95373869b446c48d8cb18ab4716e4b6fc6c
Author: Or Cohen <orcohen@paloaltonetworks.com>
Date:   Tue Apr 13 21:10:31 2021 +0300

    net/sctp: fix race condition in sctp_destroy_sock
    
    commit b166a20b07382b8bc1dcee2a448715c9c2c81b5b upstream.
    
    If sctp_destroy_sock is called without sock_net(sk)->sctp.addr_wq_lock
    held and sp->do_auto_asconf is true, then an element is removed
    from the auto_asconf_splist without any proper locking.
    
    This can happen in the following functions:
    1. In sctp_accept, if sctp_sock_migrate fails.
    2. In inet_create or inet6_create, if there is a bpf program
       attached to BPF_CGROUP_INET_SOCK_CREATE which denies
       creation of the sctp socket.
    
    The bug is fixed by acquiring addr_wq_lock in sctp_destroy_sock
    instead of sctp_close.
    
    This addresses CVE-2021-23133.
    
    Reported-by: Or Cohen <orcohen@paloaltonetworks.com>
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    Fixes: 610236587600 ("bpf: Add new cgroup attach type to enable sock modifications")
    Signed-off-by: Or Cohen <orcohen@paloaltonetworks.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ae15a0d81d4c75f171b41d7cb03b416d72b11ec
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Apr 16 11:57:53 2021 +0200

    Linux 4.14.231
    
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Link: https://lore.kernel.org/r/20210415144414.464797272@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbbf7aaec456c87f3ce1624081e211a40064710c
Author: Juergen Gross <jgross@suse.com>
Date:   Mon Apr 12 08:28:45 2021 +0200

    xen/events: fix setting irq affinity
    
    The backport of upstream patch 25da4618af240fbec61 ("xen/events: don't
    unmask an event channel when an eoi is pending") introduced a
    regression for stable kernels 5.10 and older: setting IRQ affinity for
    IRQs related to interdomain events would no longer work, as moving the
    IRQ to its new cpu was not included in the irq_ack callback for those
    events.
    
    Fix that by adding the needed call.
    
    Note that kernels 5.11 and later don't need the explicit moving of the
    IRQ to the target cpu in the irq_ack callback, due to a rework of the
    affinity setting in kernel 5.11.
    
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fbd0cc818aab1ff86a0b01c3008d973da8d3924
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Fri Mar 5 10:02:09 2021 -0300

    perf map: Tighten snprintf() string precision to pass gcc check on some 32-bit arches
    
    commit 77d02bd00cea9f1a87afe58113fa75b983d6c23a upstream.
    
    Noticed on a debian:experimental mips and mipsel cross build build
    environment:
    
      perfbuilder@ec265a086e9b:~$ mips-linux-gnu-gcc --version | head -1
      mips-linux-gnu-gcc (Debian 10.2.1-3) 10.2.1 20201224
      perfbuilder@ec265a086e9b:~$
    
        CC       /tmp/build/perf/util/map.o
      util/map.c: In function 'map__new':
      util/map.c:109:5: error: '%s' directive output may be truncated writing between 1 and 2147483645 bytes into a region of size 4096 [-Werror=format-truncation=]
        109 |    "%s/platforms/%s/arch-%s/usr/lib/%s",
            |     ^~
      In file included from /usr/mips-linux-gnu/include/stdio.h:867,
                       from util/symbol.h:11,
                       from util/map.c:2:
      /usr/mips-linux-gnu/include/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output 32 or more bytes (assuming 4294967321) into a destination of size 4096
         67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
            |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         68 |        __bos (__s), __fmt, __va_arg_pack ());
            |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      cc1: all warnings being treated as errors
    
    Since we have the lenghts for what lands in that place, use it to give
    the compiler more info and make it happy.
    
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Anders Roxell <anders.roxell@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit edab6550f3cf2a0b1370a6f48fbf73a2efd658aa
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Apr 7 21:38:57 2021 +0200

    netfilter: x_tables: fix compat match/target pad out-of-bound write
    
    commit b29c457a6511435960115c0f548c4360d5f4801d upstream.
    
    xt_compat_match/target_from_user doesn't check that zeroing the area
    to start of next rule won't write past end of allocated ruleset blob.
    
    Remove this code and zero the entire blob beforehand.
    
    Reported-by: syzbot+cfc0247ac173f597aaaa@syzkaller.appspotmail.com
    Reported-by: Andy Nguyen <theflow@google.com>
    Fixes: 9fa492cdc160c ("[NETFILTER]: x_tables: simplify compat API")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83f54e55008d20e9329611611814c6b4fde52d91
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Mon Apr 12 16:31:01 2021 -0700

    net: phy: broadcom: Only advertise EEE for supported modes
    
    commit c056d480b40a68f2520ccc156c7fae672d69d57d upstream
    
    We should not be advertising EEE for modes that we do not support,
    correct that oversight by looking at the PHY device supported linkmodes.
    
    Fixes: 99cec8a4dda2 ("net: phy: broadcom: Allow enabling or disabling of EEE")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 890cdc7d92b8baabda57b616cfd556a76d2bd478
Author: Yufen Yu <yuyufen@huawei.com>
Date:   Wed Mar 31 07:53:59 2021 -0400

    block: only update parent bi_status when bio fail
    
    [ Upstream commit 3edf5346e4f2ce2fa0c94651a90a8dda169565ee ]
    
    For multiple split bios, if one of the bio is fail, the whole
    should return error to application. But we found there is a race
    between bio_integrity_verify_fn and bio complete, which return
    io success to application after one of the bio fail. The race as
    following:
    
    split bio(READ)          kworker
    
    nvme_complete_rq
    blk_update_request //split error=0
      bio_endio
        bio_integrity_endio
          queue_work(kintegrityd_wq, &bip->bip_work);
    
                             bio_integrity_verify_fn
                             bio_endio //split bio
                              __bio_chain_endio
                                 if (!parent->bi_status)
    
                                   <interrupt entry>
                                   nvme_irq
                                     blk_update_request //parent error=7
                                     req_bio_endio
                                        bio->bi_status = 7 //parent bio
                                   <interrupt exit>
    
                                   parent->bi_status = 0
                            parent->bi_end_io() // return bi_status=0
    
    The bio has been split as two: split and parent. When split
    bio completed, it depends on kworker to do endio, while
    bio_integrity_verify_fn have been interrupted by parent bio
    complete irq handler. Then, parent bio->bi_status which have
    been set in irq handler will overwrite by kworker.
    
    In fact, even without the above race, we also need to conside
    the concurrency beteen mulitple split bio complete and update
    the same parent bi_status. Normally, multiple split bios will
    be issued to the same hctx and complete from the same irq
    vector. But if we have updated queue map between multiple split
    bios, these bios may complete on different hw queue and different
    irq vector. Then the concurrency update parent bi_status may
    cause the final status error.
    
    Suggested-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Yufen Yu <yuyufen@huawei.com>
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Link: https://lore.kernel.org/r/20210331115359.1125679-1-yuyufen@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4827bb264f234dd26f1e6b931f4dcee5b4b4abd2
Author: Bob Peterson <rpeterso@redhat.com>
Date:   Thu Mar 25 08:51:13 2021 -0400

    gfs2: report "already frozen/thawed" errors
    
    [ Upstream commit ff132c5f93c06bd4432bbab5c369e468653bdec4 ]
    
    Before this patch, gfs2's freeze function failed to report an error
    when the target file system was already frozen as it should (and as
    generic vfs function freeze_super does. Similarly, gfs2's thaw function
    failed to report an error when trying to thaw a file system that is not
    frozen, as vfs function thaw_super does. The errors were checked, but
    it always returned a 0 return code.
    
    This patch adds the missing error return codes to gfs2 freeze and thaw.
    
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 44dfdb0d32e119cf4f16c1a5be90a6c72a1995a7
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Mar 24 17:47:41 2021 +0100

    drm/imx: imx-ldb: fix out of bounds array access warning
    
    [ Upstream commit 33ce7f2f95cabb5834cf0906308a5cb6103976da ]
    
    When CONFIG_OF is disabled, building with 'make W=1' produces warnings
    about out of bounds array access:
    
    drivers/gpu/drm/imx/imx-ldb.c: In function 'imx_ldb_set_clock.constprop':
    drivers/gpu/drm/imx/imx-ldb.c:186:8: error: array subscript -22 is below array bounds of 'struct clk *[4]' [-Werror=array-bounds]
    
    Add an error check before the index is used, which helps with the
    warning, as well as any possible other error condition that may be
    triggered at runtime.
    
    The warning could be fixed by adding a Kconfig depedency on CONFIG_OF,
    but Liu Ying points out that the driver may hit the out-of-bounds
    problem at runtime anyway.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Liu Ying <victor.liu@nxp.com>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd56c35e0ed546d8055413fc11946ef85e352971
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Tue Mar 23 12:06:30 2021 +0000

    KVM: arm64: Disable guest access to trace filter controls
    
    [ Upstream commit a354a64d91eec3e0f8ef0eed575b480fd75b999c ]
    
    Disable guest access to the Trace Filter control registers.
    We do not advertise the Trace filter feature to the guest
    (ID_AA64DFR0_EL1: TRACE_FILT is cleared) already, but the guest
    can still access the TRFCR_EL1 unless we trap it.
    
    This will also make sure that the guest cannot fiddle with
    the filtering controls set by a nvhe host.
    
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Will Deacon <will@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210323120647.454211-3-suzuki.poulose@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fc34587d813bfa15cdf56d7148916363f602a6b1
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Tue Mar 23 12:06:29 2021 +0000

    KVM: arm64: Hide system instruction access to Trace registers
    
    [ Upstream commit 1d676673d665fd2162e7e466dcfbe5373bfdb73e ]
    
    Currently we advertise the ID_AA6DFR0_EL1.TRACEVER for the guest,
    when the trace register accesses are trapped (CPTR_EL2.TTA == 1).
    So, the guest will get an undefined instruction, if trusts the
    ID registers and access one of the trace registers.
    Lets be nice to the guest and hide the feature to avoid
    unexpected behavior.
    
    Even though this can be done at KVM sysreg emulation layer,
    we do this by removing the TRACEVER from the sanitised feature
    register field. This is fine as long as the ETM drivers
    can handle the individual trace units separately, even
    when there are differences among the CPUs.
    
    Cc: Will Deacon <will@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210323120647.454211-2-suzuki.poulose@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2dd189f218ce89169cf6158f08ca7124d7a861c2
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Apr 12 09:56:57 2021 +0200

    Revert "cifs: Set CIFS_MOUNT_USE_PREFIX_PATH flag on setting cifs_sb->prepath."
    
    This reverts commit ad48c641e7c344ae7aba243d3056a22eaba71bfd which is
    commit a738c93fb1c17e386a09304b517b1c6b2a6a5a8b upstream.
    
    It is reported to cause problems in older kernels, so revert it for now
    until we can figure it out...
    
    Reported-by: Salvatore Bonaccorso <carnil@debian.org>
    Link: https://lore.kernel.org/r/YG7r0UaivWZL762N@eldamar.lan
    Cc: Shyam Prasad N <sprasad@microsoft.com>
    Cc: Aurelien Aptel <aaptel@suse.com>
    Cc: Steve French <stfrench@microsoft.com>
    Cc: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a8d7b8126568f39c54ea2b7b06b04e4925b00d3
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:54 2021 -0400

    net: ieee802154: stop dump llsec params for monitors
    
    commit 1534efc7bbc1121e92c86c2dabebaf2c9dcece19 upstream.
    
    This patch stops dumping llsec params for monitors which we don't support
    yet. Otherwise we will access llsec mib which isn't initialized for
    monitors.
    
    Reported-by: syzbot+cde43a581a8e5f317bc2@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-16-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61d150d01c2a5afa176fa19d81a29a9adfb18609
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:53 2021 -0400

    net: ieee802154: forbid monitor for del llsec seclevel
    
    commit 9dde130937e95b72adfae64ab21d6e7e707e2dac upstream.
    
    This patch forbids to del llsec seclevel for monitor interfaces which we
    don't support yet. Otherwise we will access llsec mib which isn't
    initialized for monitors.
    
    Reported-by: syzbot+fbf4fc11a819824e027b@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-15-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08407693a32eb3018e9a63939c76c41479283e99
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:41 2021 -0400

    net: ieee802154: forbid monitor for set llsec params
    
    commit 88c17855ac4291fb462e13a86b7516773b6c932e upstream.
    
    This patch forbids to set llsec params for monitor interfaces which we
    don't support yet.
    
    Reported-by: syzbot+8b6719da8a04beeafcc3@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-3-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae28a297d85ca4b06ac362a1faa0f469cc959f10
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 21 12:43:21 2021 -0500

    net: ieee802154: fix nl802154 del llsec devkey
    
    commit 27c746869e1a135dffc2f2a80715bb7aa00445b4 upstream.
    
    This patch fixes a nullpointer dereference if NL802154_ATTR_SEC_DEVKEY is
    not set by the user. If this is the case nl802154 will return -EINVAL.
    
    Reported-by: syzbot+368672e0da240db53b5f@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210221174321.14210-4-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2fef28936218824eb4063f88de28d864af05ad74
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 21 12:43:20 2021 -0500

    net: ieee802154: fix nl802154 add llsec key
    
    commit 20d5fe2d7103f5c43ad11a3d6d259e9d61165c35 upstream.
    
    This patch fixes a nullpointer dereference if NL802154_ATTR_SEC_KEY is
    not set by the user. If this is the case nl802154 will return -EINVAL.
    
    Reported-by: syzbot+ce4e062c2d51977ddc50@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210221174321.14210-3-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8f93b019b4c84e6bafa50185a84b112b054a161
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 21 12:43:19 2021 -0500

    net: ieee802154: fix nl802154 del llsec dev
    
    commit 3d1eac2f45585690d942cf47fd7fbd04093ebd1b upstream.
    
    This patch fixes a nullpointer dereference if NL802154_ATTR_SEC_DEVICE is
    not set by the user. If this is the case nl802154 will return -EINVAL.
    
    Reported-by: syzbot+d946223c2e751d136c94@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210221174321.14210-2-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9fe5fd6f50098f9948219d7864a03ba0e6de2e6
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 21 12:43:18 2021 -0500

    net: ieee802154: fix nl802154 del llsec key
    
    commit 37feaaf5ceb2245e474369312bb7b922ce7bce69 upstream.
    
    This patch fixes a nullpointer dereference if NL802154_ATTR_SEC_KEY is
    not set by the user. If this is the case nl802154 will return -EINVAL.
    
    Reported-by: syzbot+ac5c11d2959a8b3c4806@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210221174321.14210-1-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ce539b551fb719524a3141b35b30a2fcc97db72
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 28 10:18:03 2021 -0500

    net: ieee802154: nl-mac: fix check on panid
    
    commit 6f7f657f24405f426212c09260bf7fe8a52cef33 upstream.
    
    This patch fixes a null pointer derefence for panid handle by move the
    check for the netlink variable directly before accessing them.
    
    Reported-by: syzbot+d4c07de0144f6f63be3a@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210228151817.95700-4-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 318fecbbaa1111692b4dd212930e6edbb0179889
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Mar 4 18:21:25 2021 +0300

    net: mac802154: Fix general protection fault
    
    commit 1165affd484889d4986cf3b724318935a0b120d8 upstream.
    
    syzbot found general protection fault in crypto_destroy_tfm()[1].
    It was caused by wrong clean up loop in llsec_key_alloc().
    If one of the tfm array members is in IS_ERR() range it will
    cause general protection fault in clean up function [1].
    
    Call Trace:
     crypto_free_aead include/crypto/aead.h:191 [inline] [1]
     llsec_key_alloc net/mac802154/llsec.c:156 [inline]
     mac802154_llsec_key_add+0x9e0/0xcc0 net/mac802154/llsec.c:249
     ieee802154_add_llsec_key+0x56/0x80 net/mac802154/cfg.c:338
     rdev_add_llsec_key net/ieee802154/rdev-ops.h:260 [inline]
     nl802154_add_llsec_key+0x3d3/0x560 net/ieee802154/nl802154.c:1584
     genl_family_rcv_msg_doit+0x228/0x320 net/netlink/genetlink.c:739
     genl_family_rcv_msg net/netlink/genetlink.c:783 [inline]
     genl_rcv_msg+0x328/0x580 net/netlink/genetlink.c:800
     netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2502
     genl_rcv+0x24/0x40 net/netlink/genetlink.c:811
     netlink_unicast_kernel net/netlink/af_netlink.c:1312 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1338
     netlink_sendmsg+0x856/0xd90 net/netlink/af_netlink.c:1927
     sock_sendmsg_nosec net/socket.c:654 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:674
     ____sys_sendmsg+0x6e8/0x810 net/socket.c:2350
     ___sys_sendmsg+0xf3/0x170 net/socket.c:2404
     __sys_sendmsg+0xe5/0x1b0 net/socket.c:2433
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Reported-by: syzbot+9ec037722d2603a9f52e@syzkaller.appspotmail.com
    Acked-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210304152125.1052825-1-paskripkin@gmail.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b98daa84e277db871c1d104b26f4670048f79fb
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Apr 1 16:27:52 2021 +0300

    drivers: net: fix memory leak in peak_usb_create_dev
    
    commit a0b96b4a62745397aee662670cfc2157bac03f55 upstream.
    
    syzbot reported memory leak in peak_usb.
    The problem was in case of failure after calling
    ->dev_init()[2] in peak_usb_create_dev()[1]. The data
    allocated int dev_init() wasn't freed, so simple
    ->dev_free() call fix this problem.
    
    backtrace:
        [<0000000079d6542a>] kmalloc include/linux/slab.h:552 [inline]
        [<0000000079d6542a>] kzalloc include/linux/slab.h:682 [inline]
        [<0000000079d6542a>] pcan_usb_fd_init+0x156/0x210 drivers/net/can/usb/peak_usb/pcan_usb_fd.c:868   [2]
        [<00000000c09f9057>] peak_usb_create_dev drivers/net/can/usb/peak_usb/pcan_usb_core.c:851 [inline] [1]
        [<00000000c09f9057>] peak_usb_probe+0x389/0x490 drivers/net/can/usb/peak_usb/pcan_usb_core.c:949
    
    Reported-by: syzbot+91adee8d9ebb9193d22d@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78a6292b157e316cc7cbd4408548206d40131b7a
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Apr 1 07:46:24 2021 +0300

    drivers: net: fix memory leak in atusb_probe
    
    commit 6b9fbe16955152626557ec6f439f3407b7769941 upstream.
    
    syzbot reported memory leak in atusb_probe()[1].
    The problem was in atusb_alloc_urbs().
    Since urb is anchored, we need to release the reference
    to correctly free the urb
    
    backtrace:
        [<ffffffff82ba0466>] kmalloc include/linux/slab.h:559 [inline]
        [<ffffffff82ba0466>] usb_alloc_urb+0x66/0xe0 drivers/usb/core/urb.c:74
        [<ffffffff82ad3888>] atusb_alloc_urbs drivers/net/ieee802154/atusb.c:362 [inline][2]
        [<ffffffff82ad3888>] atusb_probe+0x158/0x820 drivers/net/ieee802154/atusb.c:1038 [1]
    
    Reported-by: syzbot+28a246747e0a465127f3@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a3f995d3b7d7826ea4cc94e65e91f3a08c737de
Author: Phillip Potter <phil@philpotter.co.uk>
Date:   Tue Apr 6 18:45:54 2021 +0100

    net: tun: set tun->dev->addr_len during TUNSETLINK processing
    
    commit cca8ea3b05c972ffb5295367e6c544369b45fbdd upstream.
    
    When changing type with TUNSETLINK ioctl command, set tun->dev->addr_len
    to match the appropriate type, using new tun_get_addr_len utility function
    which returns appropriate address length for given type. Fixes a
    KMSAN-found uninit-value bug reported by syzbot at:
    https://syzkaller.appspot.com/bug?id=0766d38c656abeace60621896d705743aeefed51
    
    Reported-by: syzbot+001516d86dbe88862cec@syzkaller.appspotmail.com
    Diagnosed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Phillip Potter <phil@philpotter.co.uk>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d156bcac83367fd113aed8a86d7a2514dff7322
Author: Du Cheng <ducheng2@gmail.com>
Date:   Thu Apr 8 00:27:56 2021 +0800

    cfg80211: remove WARN_ON() in cfg80211_sme_connect
    
    commit 1b5ab825d9acc0f27d2f25c6252f3526832a9626 upstream.
    
    A WARN_ON(wdev->conn) would trigger in cfg80211_sme_connect(), if multiple
    send_msg(NL80211_CMD_CONNECT) system calls are made from the userland, which
    should be anticipated and handled by the wireless driver. Remove this WARN_ON()
    to prevent kernel panic if kernel is configured to "panic_on_warn".
    
    Bug reported by syzbot.
    
    Reported-by: syzbot+5f9392825de654244975@syzkaller.appspotmail.com
    Signed-off-by: Du Cheng <ducheng2@gmail.com>
    Link: https://lore.kernel.org/r/20210407162756.6101-1-ducheng2@gmail.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46828f6850edc3af8610d74891b9ead0fe308b9a
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Sun Mar 7 20:53:31 2021 -0700

    usbip: fix vudc usbip_sockfd_store races leading to gpf
    
    commit 46613c9dfa964c0c60b5385dbdf5aaa18be52a9c upstream.
    
    usbip_sockfd_store() is invoked when user requests attach (import)
    detach (unimport) usb gadget device from usbip host. vhci_hcd sends
    import request and usbip_sockfd_store() exports the device if it is
    free for export.
    
    Export and unexport are governed by local state and shared state
    - Shared state (usbip device status, sockfd) - sockfd and Device
      status are used to determine if stub should be brought up or shut
      down. Device status is shared between host and client.
    - Local state (tcp_socket, rx and tx thread task_struct ptrs)
      A valid tcp_socket controls rx and tx thread operations while the
      device is in exported state.
    - While the device is exported, device status is marked used and socket,
      sockfd, and thread pointers are valid.
    
    Export sequence (stub-up) includes validating the socket and creating
    receive (rx) and transmit (tx) threads to talk to the client to provide
    access to the exported device. rx and tx threads depends on local and
    shared state to be correct and in sync.
    
    Unexport (stub-down) sequence shuts the socket down and stops the rx and
    tx threads. Stub-down sequence relies on local and shared states to be
    in sync.
    
    There are races in updating the local and shared status in the current
    stub-up sequence resulting in crashes. These stem from starting rx and
    tx threads before local and global state is updated correctly to be in
    sync.
    
    1. Doesn't handle kthread_create() error and saves invalid ptr in local
       state that drives rx and tx threads.
    2. Updates tcp_socket and sockfd,  starts stub_rx and stub_tx threads
       before updating usbip_device status to SDEV_ST_USED. This opens up a
       race condition between the threads and usbip_sockfd_store() stub up
       and down handling.
    
    Fix the above problems:
    - Stop using kthread_get_run() macro to create/start threads.
    - Create threads and get task struct reference.
    - Add kthread_create() failure handling and bail out.
    - Hold usbip_device lock to update local and shared states after
      creating rx and tx threads.
    - Update usbip_device status to SDEV_ST_USED.
    - Update usbip_device tcp_socket, sockfd, tcp_rx, and tcp_tx
    - Start threads after usbip_device (tcp_socket, sockfd, tcp_rx, tcp_tx,
      and status) is complete.
    
    Credit goes to syzbot and Tetsuo Handa for finding and root-causing the
    kthread_get_run() improper error handling problem and others. This is a
    hard problem to find and debug since the races aren't seen in a normal
    case. Fuzzing forces the race window to be small enough for the
    kthread_get_run() error path bug and starting threads before updating the
    local and shared state bug in the stub-up sequence.
    
    Fixes: 9720b4bc76a83807 ("staging/usbip: convert to kthread")
    Cc: stable@vger.kernel.org
    Reported-by: syzbot <syzbot+a93fba6d384346a761e3@syzkaller.appspotmail.com>
    Reported-by: syzbot <syzbot+bf1a360e305ee719e364@syzkaller.appspotmail.com>
    Reported-by: syzbot <syzbot+95ce4b142579611ef0a9@syzkaller.appspotmail.com>
    Reported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/b1c08b983ffa185449c9f0f7d1021dc8c8454b60.1615171203.git.skhan@linuxfoundation.org
    Signed-off-by: Tom Seewald <tseewald@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60849d2581ab425397c551ab7fd66a28d16f60ff
Author: Samuel Mendoza-Jonas <sam@mendozajonas.com>
Date:   Thu May 31 17:02:54 2018 +1000

    net/ncsi: Avoid GFP_KERNEL in response handler
    
    commit b0949618826cbb64e9ba764bdd52aa14eaf5073d upstream.
    
    ncsi_rsp_handler_gc() allocates the filter arrays using GFP_KERNEL in
    softirq context, causing the below backtrace. This allocation is only a
    few dozen bytes during probing so allocate with GFP_ATOMIC instead.
    
    [   42.813372] BUG: sleeping function called from invalid context at mm/slab.h:416
    [   42.820900] in_atomic(): 1, irqs_disabled(): 0, pid: 213, name: kworker/0:1
    [   42.827893] INFO: lockdep is turned off.
    [   42.832023] CPU: 0 PID: 213 Comm: kworker/0:1 Tainted: G        W       4.13.16-01441-gad99b38 #65
    [   42.841007] Hardware name: Generic DT based system
    [   42.845966] Workqueue: events ncsi_dev_work
    [   42.850251] [<8010a494>] (unwind_backtrace) from [<80107510>] (show_stack+0x20/0x24)
    [   42.858046] [<80107510>] (show_stack) from [<80612770>] (dump_stack+0x20/0x28)
    [   42.865309] [<80612770>] (dump_stack) from [<80148248>] (___might_sleep+0x230/0x2b0)
    [   42.873241] [<80148248>] (___might_sleep) from [<80148334>] (__might_sleep+0x6c/0xac)
    [   42.881129] [<80148334>] (__might_sleep) from [<80240d6c>] (__kmalloc+0x210/0x2fc)
    [   42.888737] [<80240d6c>] (__kmalloc) from [<8060ad54>] (ncsi_rsp_handler_gc+0xd0/0x170)
    [   42.896770] [<8060ad54>] (ncsi_rsp_handler_gc) from [<8060b454>] (ncsi_rcv_rsp+0x16c/0x1d4)
    [   42.905314] [<8060b454>] (ncsi_rcv_rsp) from [<804d86c8>] (__netif_receive_skb_core+0x3c8/0xb50)
    [   42.914158] [<804d86c8>] (__netif_receive_skb_core) from [<804d96cc>] (__netif_receive_skb+0x20/0x7c)
    [   42.923420] [<804d96cc>] (__netif_receive_skb) from [<804de4b0>] (netif_receive_skb_internal+0x78/0x6a4)
    [   42.932931] [<804de4b0>] (netif_receive_skb_internal) from [<804df980>] (netif_receive_skb+0x78/0x158)
    [   42.942292] [<804df980>] (netif_receive_skb) from [<8042f204>] (ftgmac100_poll+0x43c/0x4e8)
    [   42.950855] [<8042f204>] (ftgmac100_poll) from [<804e094c>] (net_rx_action+0x278/0x4c4)
    [   42.958918] [<804e094c>] (net_rx_action) from [<801016a8>] (__do_softirq+0xe0/0x4c4)
    [   42.966716] [<801016a8>] (__do_softirq) from [<8011cd9c>] (do_softirq.part.4+0x50/0x78)
    [   42.974756] [<8011cd9c>] (do_softirq.part.4) from [<8011cebc>] (__local_bh_enable_ip+0xf8/0x11c)
    [   42.983579] [<8011cebc>] (__local_bh_enable_ip) from [<804dde08>] (__dev_queue_xmit+0x260/0x890)
    [   42.992392] [<804dde08>] (__dev_queue_xmit) from [<804df1f0>] (dev_queue_xmit+0x1c/0x20)
    [   43.000689] [<804df1f0>] (dev_queue_xmit) from [<806099c0>] (ncsi_xmit_cmd+0x1c0/0x244)
    [   43.008763] [<806099c0>] (ncsi_xmit_cmd) from [<8060dc14>] (ncsi_dev_work+0x2e0/0x4c8)
    [   43.016725] [<8060dc14>] (ncsi_dev_work) from [<80133dfc>] (process_one_work+0x214/0x6f8)
    [   43.024940] [<80133dfc>] (process_one_work) from [<80134328>] (worker_thread+0x48/0x558)
    [   43.033070] [<80134328>] (worker_thread) from [<8013ba80>] (kthread+0x130/0x174)
    [   43.040506] [<8013ba80>] (kthread) from [<80102950>] (ret_from_fork+0x14/0x24)
    
    Fixes: 062b3e1b6d4f ("net/ncsi: Refactor MAC, VLAN filters")
    Signed-off-by: Samuel Mendoza-Jonas <sam@mendozajonas.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65bac78c73cee788b0c567bc1a5ed99f9742e671
Author: Samuel Mendoza-Jonas <sam@mendozajonas.com>
Date:   Tue Apr 17 14:23:23 2018 +1000

    net/ncsi: Refactor MAC, VLAN filters
    
    commit 062b3e1b6d4f2a33c1d0fd7ae9b4550da5cf7e4b upstream.
    
    The NCSI driver defines a generic ncsi_channel_filter struct that can be
    used to store arbitrarily formatted filters, and several generic methods
    of accessing data stored in such a filter.
    However in both the driver and as defined in the NCSI specification
    there are only two actual filters: VLAN ID filters and MAC address
    filters. The splitting of the MAC filter into unicast, multicast, and
    mixed is also technically not necessary as these are stored in the same
    location in hardware.
    
    To save complexity, particularly in the set up and accessing of these
    generic filters, remove them in favour of two specific structs. These
    can be acted on directly and do not need several generic helper
    functions to use.
    
    This also fixes a memory error found by KASAN on ARM32 (which is not
    upstream yet), where response handlers accessing a filter's data field
    could write past allocated memory.
    
    [  114.926512] ==================================================================
    [  114.933861] BUG: KASAN: slab-out-of-bounds in ncsi_configure_channel+0x4b8/0xc58
    [  114.941304] Read of size 2 at addr 94888558 by task kworker/0:2/546
    [  114.947593]
    [  114.949146] CPU: 0 PID: 546 Comm: kworker/0:2 Not tainted 4.16.0-rc6-00119-ge156398bfcad #13
    ...
    [  115.170233] The buggy address belongs to the object at 94888540
    [  115.170233]  which belongs to the cache kmalloc-32 of size 32
    [  115.181917] The buggy address is located 24 bytes inside of
    [  115.181917]  32-byte region [94888540, 94888560)
    [  115.192115] The buggy address belongs to the page:
    [  115.196943] page:9eeac100 count:1 mapcount:0 mapping:94888000 index:0x94888fc1
    [  115.204200] flags: 0x100(slab)
    [  115.207330] raw: 00000100 94888000 94888fc1 0000003f 00000001 9eea2014 9eecaa74 96c003e0
    [  115.215444] page dumped because: kasan: bad access detected
    [  115.221036]
    [  115.222544] Memory state around the buggy address:
    [  115.227384]  94888400: fb fb fb fb fc fc fc fc 04 fc fc fc fc fc fc fc
    [  115.233959]  94888480: 00 00 00 fc fc fc fc fc 00 04 fc fc fc fc fc fc
    [  115.240529] >94888500: 00 00 04 fc fc fc fc fc 00 00 04 fc fc fc fc fc
    [  115.247077]                                             ^
    [  115.252523]  94888580: 00 04 fc fc fc fc fc fc 06 fc fc fc fc fc fc fc
    [  115.259093]  94888600: 00 00 06 fc fc fc fc fc 00 00 04 fc fc fc fc fc
    [  115.265639] ==================================================================
    
    Reported-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Samuel Mendoza-Jonas <sam@mendozajonas.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92f2f2185e2bf009ee3416177394be2a648cc546
Author: Samuel Mendoza-Jonas <sam@mendozajonas.com>
Date:   Mon Mar 5 11:39:05 2018 +1100

    net/ncsi: Add generic netlink family
    
    commit 955dc68cb9b23b42999cafe6df3684309bc686c6 upstream.
    
    Add a generic netlink family for NCSI. This supports three commands;
    NCSI_CMD_PKG_INFO which returns information on packages and their
    associated channels, NCSI_CMD_SET_INTERFACE which allows a specific
    package or package/channel combination to be set as the preferred
    choice, and NCSI_CMD_CLEAR_INTERFACE which clears any preferred setting.
    
    Signed-off-by: Samuel Mendoza-Jonas <sam@mendozajonas.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a60ee243af8d6ee4ff531ec088bf5cd89e0ab4a
Author: Samuel Mendoza-Jonas <sam@mendozajonas.com>
Date:   Wed Nov 8 16:30:45 2017 +1100

    net/ncsi: Don't return error on normal response
    
    commit 04bad8bda9e25afe676a6f4452f3b304c1fdea16 upstream.
    
    Several response handlers return EBUSY if the data corresponding to the
    command/response pair is already set. There is no reason to return an
    error here; the channel is advertising something as enabled because we
    told it to enable it, and it's possible that the feature has been
    enabled previously.
    
    Signed-off-by: Samuel Mendoza-Jonas <sam@mendozajonas.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 843fd179afc0501c487274fb12dc2a8ef06e2b3f
Author: Samuel Mendoza-Jonas <sam@mendozajonas.com>
Date:   Wed Nov 8 16:30:44 2017 +1100

    net/ncsi: Improve general state logging
    
    commit 9ef8690be13d8ae3130749fbcc0cc21e4e3f738c upstream.
    
    The NCSI driver is mostly silent which becomes a headache when trying to
    determine what has occurred on the NCSI connection. This adds additional
    logging in a few key areas such as state transitions and calling out
    certain errors more visibly.
    
    Signed-off-by: Samuel Mendoza-Jonas <sam@mendozajonas.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a244688dc701a9dec01d2d6a00996c370e9c9f6
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Thu Nov 2 11:15:28 2017 +0000

    net/ncsi: Make local function ncsi_get_filter() static
    
    commit 5a6d80034471d4407052c4bf3758071df5cadf33 upstream.
    
    Fixes the following sparse warnings:
    
    net/ncsi/ncsi-manage.c:41:5: warning:
     symbol 'ncsi_get_filter' was not declared. Should it be static?
    
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67be9ba16daf7687fee48b5354d7ece9bc6e62f2
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Sun Mar 14 12:07:09 2021 +0100

    clk: socfpga: fix iomem pointer cast on 64-bit
    
    commit 2867b9746cef78745c594894aece6f8ef826e0b4 upstream.
    
    Pointers should be cast with uintptr_t instead of integer.  This fixes
    warning when compile testing on ARM64:
    
      drivers/clk/socfpga/clk-gate.c: In function ‘socfpga_clk_recalc_rate’:
      drivers/clk/socfpga/clk-gate.c:102:7: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
    
    Fixes: b7cec13f082f ("clk: socfpga: Look for the GPIO_DB_CLK by its offset")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Acked-by: Dinh Nguyen <dinguyen@kernel.org>
    Link: https://lore.kernel.org/r/20210314110709.32599-1-krzysztof.kozlowski@canonical.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53d5ace6dd89dfa66838900ec5b52c52752ae224
Author: Potnuri Bharat Teja <bharat@chelsio.com>
Date:   Wed Mar 31 19:27:15 2021 +0530

    RDMA/cxgb4: check for ipv6 address properly while destroying listener
    
    [ Upstream commit 603c4690b01aaffe3a6c3605a429f6dac39852ae ]
    
    ipv6 bit is wrongly set by the below which causes fatal adapter lookup
    engine errors for ipv4 connections while destroying a listener.  Fix it to
    properly check the local address for ipv6.
    
    Fixes: 3408be145a5d ("RDMA/cxgb4: Fix adapter LE hash errors while destroying ipv6 listening server")
    Link: https://lore.kernel.org/r/20210331135715.30072-1-bharat@chelsio.com
    Signed-off-by: Potnuri Bharat Teja <bharat@chelsio.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0107aabb31abbee3a85625d87406a30def64f55
Author: Raed Salem <raeds@nvidia.com>
Date:   Thu Jan 21 16:01:37 2021 +0200

    net/mlx5: Fix placement of log_max_flow_counter
    
    [ Upstream commit a14587dfc5ad2312dabdd42a610d80ecd0dc8bea ]
    
    The cited commit wrongly placed log_max_flow_counter field of
    mlx5_ifc_flow_table_prop_layout_bits, align it to the HW spec intended
    placement.
    
    Fixes: 16f1c5bb3ed7 ("net/mlx5: Check device capability for maximum flow counters")
    Signed-off-by: Raed Salem <raeds@nvidia.com>
    Reviewed-by: Roi Dayan <roid@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53aa3bf0b96430c4c9b20d3d4da41432b6cba6ba
Author: Alexander Gordeev <agordeev@linux.ibm.com>
Date:   Mon Mar 29 18:35:07 2021 +0200

    s390/cpcmd: fix inline assembly register clobbering
    
    [ Upstream commit 7a2f91441b2c1d81b77c1cd816a4659f4abc9cbe ]
    
    Register variables initialized using arithmetic. That leads to
    kasan instrumentaton code corrupting the registers contents.
    Follow GCC guidlines and use temporary variables for assigning
    init values to register variables.
    
    Fixes: 94c12cc7d196 ("[S390] Inline assembly cleanup.")
    Signed-off-by: Alexander Gordeev <agordeev@linux.ibm.com>
    Acked-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Link: https://gcc.gnu.org/onlinedocs/gcc-10.2.0/gcc/Local-Register-Variables.html
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50bcd14b1dfe8753eb4270d7004b8378678056ec
Author: Zqiang <qiang.zhang@windriver.com>
Date:   Thu Feb 18 11:16:49 2021 +0800

    workqueue: Move the position of debug_work_activate() in __queue_work()
    
    [ Upstream commit 0687c66b5f666b5ad433f4e94251590d9bc9d10e ]
    
    The debug_work_activate() is called on the premise that
    the work can be inserted, because if wq be in WQ_DRAINING
    status, insert work may be failed.
    
    Fixes: e41e704bc4f4 ("workqueue: improve destroy_workqueue() debuggability")
    Signed-off-by: Zqiang <qiang.zhang@windriver.com>
    Reviewed-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit def9b475f598df8fd2ccce21285943c9eb5ca41d
Author: Lukasz Bartosik <lb@semihalf.com>
Date:   Fri Apr 2 00:51:49 2021 +0200

    clk: fix invalid usage of list cursor in unregister
    
    [ Upstream commit 7045465500e465b09f09d6e5bdc260a9f1aab97b ]
    
    Fix invalid usage of a list_for_each_entry cursor in
    clk_notifier_unregister(). When list is empty or if the list
    is completely traversed (without breaking from the loop on one
    of the entries) then the list cursor does not point to a valid
    entry and therefore should not be used. The patch fixes a logical
    bug that hasn't been seen in pratice however it is analogus
    to the bug fixed in clk_notifier_register().
    
    The issue was dicovered when running 5.12-rc1 kernel on x86_64
    with KASAN enabled:
    BUG: KASAN: global-out-of-bounds in clk_notifier_register+0xab/0x230
    Read of size 8 at addr ffffffffa0d10588 by task swapper/0/1
    
    CPU: 1 PID: 1 Comm: swapper/0 Not tainted 5.12.0-rc1 #1
    Hardware name: Google Caroline/Caroline,
    BIOS Google_Caroline.7820.430.0 07/20/2018
    Call Trace:
     dump_stack+0xee/0x15c
     print_address_description+0x1e/0x2dc
     kasan_report+0x188/0x1ce
     ? clk_notifier_register+0xab/0x230
     ? clk_prepare_lock+0x15/0x7b
     ? clk_notifier_register+0xab/0x230
     clk_notifier_register+0xab/0x230
     dw8250_probe+0xc01/0x10d4
     ...
     Memory state around the buggy address:
      ffffffffa0d10480: 00 00 00 00 00 03 f9 f9 f9 f9 f9 f9 00 00 00 00
      ffffffffa0d10500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f9 f9
     >ffffffffa0d10580: f9 f9 f9 f9 00 00 00 00 00 00 00 00 00 00 00 00
                              ^
      ffffffffa0d10600: 00 00 00 00 00 00 f9 f9 f9 f9 f9 f9 00 00 00 00
      ffffffffa0d10680: 00 00 00 00 00 00 00 00 f9 f9 f9 f9 00 00 00 00
      ==================================================================
    
    Fixes: b2476490ef11 ("clk: introduce the common clock framework")
    Reported-by: Lukasz Majczak <lma@semihalf.com>
    Signed-off-by: Lukasz Bartosik <lb@semihalf.com>
    Link: https://lore.kernel.org/r/20210401225149.18826-2-lb@semihalf.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c48f8ccddfd221d989d3f2bc9d9b0960dc9cc617
Author: Lukasz Bartosik <lb@semihalf.com>
Date:   Fri Apr 2 00:51:48 2021 +0200

    clk: fix invalid usage of list cursor in register
    
    [ Upstream commit 8d3c0c01cb2e36b2bf3c06a82b18b228d0c8f5d0 ]
    
    Fix invalid usage of a list_for_each_entry cursor in
    clk_notifier_register(). When list is empty or if the list
    is completely traversed (without breaking from the loop on one
    of the entries) then the list cursor does not point to a valid
    entry and therefore should not be used.
    
    The issue was dicovered when running 5.12-rc1 kernel on x86_64
    with KASAN enabled:
    BUG: KASAN: global-out-of-bounds in clk_notifier_register+0xab/0x230
    Read of size 8 at addr ffffffffa0d10588 by task swapper/0/1
    
    CPU: 1 PID: 1 Comm: swapper/0 Not tainted 5.12.0-rc1 #1
    Hardware name: Google Caroline/Caroline,
    BIOS Google_Caroline.7820.430.0 07/20/2018
    Call Trace:
     dump_stack+0xee/0x15c
     print_address_description+0x1e/0x2dc
     kasan_report+0x188/0x1ce
     ? clk_notifier_register+0xab/0x230
     ? clk_prepare_lock+0x15/0x7b
     ? clk_notifier_register+0xab/0x230
     clk_notifier_register+0xab/0x230
     dw8250_probe+0xc01/0x10d4
    ...
    Memory state around the buggy address:
     ffffffffa0d10480: 00 00 00 00 00 03 f9 f9 f9 f9 f9 f9 00 00 00 00
     ffffffffa0d10500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f9 f9
    >ffffffffa0d10580: f9 f9 f9 f9 00 00 00 00 00 00 00 00 00 00 00 00
                          ^
     ffffffffa0d10600: 00 00 00 00 00 00 f9 f9 f9 f9 f9 f9 00 00 00 00
     ffffffffa0d10680: 00 00 00 00 00 00 00 00 f9 f9 f9 f9 00 00 00 00
     ==================================================================
    
    Fixes: b2476490ef11 ("clk: introduce the common clock framework")
    Reported-by: Lukasz Majczak <lma@semihalf.com>
    Signed-off-by: Lukasz Bartosik <lb@semihalf.com>
    Link: https://lore.kernel.org/r/20210401225149.18826-1-lb@semihalf.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9df0f0ec8f8a6f63cc0b3185dc3483efc3425ee1
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Mar 23 14:15:23 2021 +0100

    soc/fsl: qbman: fix conflicting alignment attributes
    
    [ Upstream commit 040f31196e8b2609613f399793b9225271b79471 ]
    
    When building with W=1, gcc points out that the __packed attribute
    on struct qm_eqcr_entry conflicts with the 8-byte alignment
    attribute on struct qm_fd inside it:
    
    drivers/soc/fsl/qbman/qman.c:189:1: error: alignment 1 of 'struct qm_eqcr_entry' is less than 8 [-Werror=packed-not-aligned]
    
    I assume that the alignment attribute is the correct one, and
    that qm_eqcr_entry cannot actually be unaligned in memory,
    so add the same alignment on the outer struct.
    
    Fixes: c535e923bb97 ("soc/fsl: Introduce DPAA 1.x QMan device driver")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20210323131530.2619900-1-arnd@kernel.org'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac466ffff8fdd272738c18aa06f385c3b854474c
Author: Bastian Germann <bage@linutronix.de>
Date:   Wed Mar 31 17:18:43 2021 +0200

    ASoC: sunxi: sun4i-codec: fill ASoC card owner
    
    [ Upstream commit 7c0d6e482062eb5c06ecccfab340abc523bdca00 ]
    
    card->owner is a required property and since commit 81033c6b584b ("ALSA:
    core: Warn on empty module") a warning is issued if it is empty. Add it.
    This fixes following warning observed on Lamobo R1:
    
    WARNING: CPU: 1 PID: 190 at sound/core/init.c:207 snd_card_new+0x430/0x480 [snd]
    Modules linked in: sun4i_codec(E+) sun4i_backend(E+) snd_soc_core(E) ...
    CPU: 1 PID: 190 Comm: systemd-udevd Tainted: G         C  E     5.10.0-1-armmp #1 Debian 5.10.4-1
    Hardware name: Allwinner sun7i (A20) Family
    Call trace:
     (snd_card_new [snd])
     (snd_soc_bind_card [snd_soc_core])
     (snd_soc_register_card [snd_soc_core])
     (sun4i_codec_probe [sun4i_codec])
    
    Fixes: 45fb6b6f2aa3 ("ASoC: sunxi: add support for the on-chip codec on early Allwinner SoCs")
    Related: commit 3c27ea23ffb4 ("ASoC: qcom: Set card->owner to avoid warnings")
    Related: commit ec653df2a0cb ("drm/vc4/vc4_hdmi: fill ASoC card owner")
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: alsa-devel@alsa-project.org
    Signed-off-by: Bastian Germann <bage@linutronix.de>
    Link: https://lore.kernel.org/r/20210331151843.30583-1-bage@linutronix.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6fd4510c05a5c8aea5aecc2aa7acbc5999d24ea
Author: Milton Miller <miltonm@us.ibm.com>
Date:   Mon Mar 29 10:20:39 2021 -0500

    net/ncsi: Avoid channel_monitor hrtimer deadlock
    
    [ Upstream commit 03cb4d05b4ea9a3491674ca40952adb708d549fa ]
    
    Calling ncsi_stop_channel_monitor from channel_monitor is a guaranteed
    deadlock on SMP because stop calls del_timer_sync on the timer that
    invoked channel_monitor as its timer function.
    
    Recognise the inherent race of marking the monitor disabled before
    deleting the timer by just returning if enable was cleared.  After
    a timeout (the default case -- reset to START when response received)
    just mark the monitor.enabled false.
    
    If the channel has an entry on the channel_queue list, or if the
    state is not ACTIVE or INACTIVE, then warn and mark the timer stopped
    and don't restart, as the locking is broken somehow.
    
    Fixes: 0795fb2021f0 ("net/ncsi: Stop monitor if channel times out or is inactive")
    Signed-off-by: Milton Miller <miltonm@us.ibm.com>
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46684ddf5e271de43cd82f5df66367720113129d
Author: Stefan Riedmueller <s.riedmueller@phytec.de>
Date:   Mon Mar 29 15:01:03 2021 +0200

    ARM: dts: imx6: pbab01: Set vmmc supply for both SD interfaces
    
    [ Upstream commit f57011e72f5fe0421ec7a812beb1b57bdf4bb47f ]
    
    Setting the vmmc supplies is crucial since otherwise the supplying
    regulators get disabled and the SD interfaces are no longer powered
    which leads to system failures if the system is booted from that SD
    interface.
    
    Fixes: 1e44d3f880d5 ("ARM i.MX6Q: dts: Enable I2C1 with EEPROM and PMIC on Phytec phyFLEX-i.MX6 Ouad module")
    Signed-off-by: Stefan Riedmueller <s.riedmueller@phytec.de>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 24c012cd28be376732e1aaa25c21ea321505f5f7
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Sun Mar 28 00:30:29 2021 -0700

    net:tipc: Fix a double free in tipc_sk_mcast_rcv
    
    [ Upstream commit 6bf24dc0cc0cc43b29ba344b66d78590e687e046 ]
    
    In the if(skb_peek(arrvq) == skb) branch, it calls __skb_dequeue(arrvq) to get
    the skb by skb = skb_peek(arrvq). Then __skb_dequeue() unlinks the skb from arrvq
    and returns the skb which equals to skb_peek(arrvq). After __skb_dequeue(arrvq)
    finished, the skb is freed by kfree_skb(__skb_dequeue(arrvq)) in the first time.
    
    Unfortunately, the same skb is freed in the second time by kfree_skb(skb) after
    the branch completed.
    
    My patch removes kfree_skb() in the if(skb_peek(arrvq) == skb) branch, because
    this skb will be freed by kfree_skb(skb) finally.
    
    Fixes: cb1b728096f54 ("tipc: eliminate race condition at multicast reception")
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 581caa5e64a7a026cb503442fe3df45ca21c1afd
Author: Claudiu Manoil <claudiu.manoil@nxp.com>
Date:   Mon Mar 29 17:08:47 2021 +0300

    gianfar: Handle error code at MAC address change
    
    [ Upstream commit bff5b62585123823842833ab20b1c0a7fa437f8c ]
    
    Handle return error code of eth_mac_addr();
    
    Fixes: 3d23a05c75c7 ("gianfar: Enable changing mac addr when if up")
    Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c3d2296c939b772ccacdeae955926218e44e022
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Mar 25 11:14:53 2021 -0700

    sch_red: fix off-by-one checks in red_check_params()
    
    [ Upstream commit 3a87571f0ffc51ba3bf3ecdb6032861d0154b164 ]
    
    This fixes following syzbot report:
    
    UBSAN: shift-out-of-bounds in ./include/net/red.h:237:23
    shift exponent 32 is too large for 32-bit type 'unsigned int'
    CPU: 1 PID: 8418 Comm: syz-executor170 Not tainted 5.12.0-rc4-next-20210324-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:79 [inline]
     dump_stack+0x141/0x1d7 lib/dump_stack.c:120
     ubsan_epilogue+0xb/0x5a lib/ubsan.c:148
     __ubsan_handle_shift_out_of_bounds.cold+0xb1/0x181 lib/ubsan.c:327
     red_set_parms include/net/red.h:237 [inline]
     choke_change.cold+0x3c/0xc8 net/sched/sch_choke.c:414
     qdisc_create+0x475/0x12f0 net/sched/sch_api.c:1247
     tc_modify_qdisc+0x4c8/0x1a50 net/sched/sch_api.c:1663
     rtnetlink_rcv_msg+0x44e/0xad0 net/core/rtnetlink.c:5553
     netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2502
     netlink_unicast_kernel net/netlink/af_netlink.c:1312 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1338
     netlink_sendmsg+0x856/0xd90 net/netlink/af_netlink.c:1927
     sock_sendmsg_nosec net/socket.c:654 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:674
     ____sys_sendmsg+0x6e8/0x810 net/socket.c:2350
     ___sys_sendmsg+0xf3/0x170 net/socket.c:2404
     __sys_sendmsg+0xe5/0x1b0 net/socket.c:2433
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x43f039
    Code: 28 c3 e8 2a 14 00 00 66 2e 0f 1f 84 00 00 00 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48
    RSP: 002b:00007ffdfa725168 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
    RAX: ffffffffffffffda RBX: 0000000000400488 RCX: 000000000043f039
    RDX: 0000000000000000 RSI: 0000000020000040 RDI: 0000000000000004
    RBP: 0000000000403020 R08: 0000000000400488 R09: 0000000000400488
    R10: 0000000000400488 R11: 0000000000000246 R12: 00000000004030b0
    R13: 0000000000000000 R14: 00000000004ac018 R15: 0000000000400488
    
    Fixes: 8afa10cbe281 ("net_sched: red: Avoid illegal values")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f6f2b09c9939fa9b53b396a6f7f2eb3b5ff2570
Author: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
Date:   Thu Mar 25 08:39:12 2021 +0530

    amd-xgbe: Update DMA coherency values
    
    [ Upstream commit d75135082698140a26a56defe1bbc1b06f26a41f ]
    
    Based on the IOMMU configuration, the current cache control settings can
    result in possible coherency issues. The hardware team has recommended
    new settings for the PCI device path to eliminate the issue.
    
    Fixes: 6f595959c095 ("amd-xgbe: Adjust register settings to improve performance")
    Signed-off-by: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
    Acked-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 882eec23bcf465741f7cfddca0ec6079e255c3f4
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Fri Mar 19 18:48:46 2021 +0800

    ASoC: wm8960: Fix wrong bclk and lrclk with pll enabled for some chips
    
    [ Upstream commit 16b82e75c15a7dbd564ea3654f3feb61df9e1e6f ]
    
    The input MCLK is 12.288MHz, the desired output sysclk is 11.2896MHz
    and sample rate is 44100Hz, with the configuration pllprescale=2,
    postscale=sysclkdiv=1, some chip may have wrong bclk
    and lrclk output with pll enabled in master mode, but with the
    configuration pllprescale=1, postscale=2, the output clock is correct.
    
    >From Datasheet, the PLL performs best when f2 is between
    90MHz and 100MHz when the desired sysclk output is 11.2896MHz
    or 12.288MHz, so sysclkdiv = 2 (f2/8) is the best choice.
    
    So search available sysclk_divs from 2 to 1 other than from 1 to 2.
    
    Fixes: 84fdc00d519f ("ASoC: codec: wm9860: Refactor PLL out freq search")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/1616150926-22892-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f24784ea587f2eee3c38dbe4027bf7a580848c9
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Mar 12 14:02:40 2021 +0100

    regulator: bd9571mwv: Fix AVS and DVFS voltage range
    
    [ Upstream commit 3b6e7088afc919f5b52e4d2de8501ad34d35b09b ]
    
    According to Table 30 ("DVFS_MoniVDAC [6:0] Setting Table") in the
    BD9571MWV-M Datasheet Rev. 002, the valid voltage range is 600..1100 mV
    (settings 0x3c..0x6e).  While the lower limit is taken into account (by
    setting regulator_desc.linear_min_sel to 0x3c), the upper limit is not.
    
    Fix this by reducing regulator_desc.n_voltages from 0x80 to 0x6f.
    
    Fixes: e85c5a153fe237f2 ("regulator: Add ROHM BD9571MWV-M PMIC regulator driver")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20210312130242.3390038-2-geert+renesas@glider.be
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c41e046acb3019794a229c35b2f17dfbdf0e1c6
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Mon Mar 15 12:50:08 2021 +0100

    i2c: turn recovery error on init to debug
    
    commit e409a6a3e0690efdef9b8a96197bc61ff117cfaf upstream.
    
    In some configurations, recovery is optional. So, don't throw an error
    when it is not used because e.g. pinctrl settings for recovery are not
    provided. Reword the message and make it debug output.
    
    Reported-by: Klaus Kudielka <klaus.kudielka@gmail.com>
    Tested-by: Klaus Kudielka <klaus.kudielka@gmail.com>
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ba0394b5840607797fcaa4731b37f111d2c9204
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Mon Mar 29 19:36:51 2021 -0600

    usbip: synchronize event handler with sysfs code paths
    
    commit 363eaa3a450abb4e63bd6e3ad79d1f7a0f717814 upstream.
    
    Fuzzing uncovered race condition between sysfs code paths in usbip
    drivers. Device connect/disconnect code paths initiated through
    sysfs interface are prone to races if disconnect happens during
    connect and vice versa.
    
    Use sysfs_lock to synchronize event handler with sysfs paths
    in usbip drivers.
    
    Cc: stable@vger.kernel.org
    Reported-and-tested-by: syzbot+a93fba6d384346a761e3@syzkaller.appspotmail.com
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/c5c8723d3f29dfe3d759cfaafa7dd16b0dfe2918.1616807117.git.skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b544a79e5ba89d2917374d37858505e33aa44c8
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Mon Mar 29 19:36:49 2021 -0600

    usbip: stub-dev synchronize sysfs code paths
    
    commit 9dbf34a834563dada91366c2ac266f32ff34641a upstream.
    
    Fuzzing uncovered race condition between sysfs code paths in usbip
    drivers. Device connect/disconnect code paths initiated through
    sysfs interface are prone to races if disconnect happens during
    connect and vice versa.
    
    Use sysfs_lock to protect sysfs paths in stub-dev.
    
    Cc: stable@vger.kernel.org
    Reported-and-tested-by: syzbot+a93fba6d384346a761e3@syzkaller.appspotmail.com
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/2b182f3561b4a065bf3bf6dce3b0e9944ba17b3f.1616807117.git.skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad1c8bda879ca2588ffd9a7f442944682af90767
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Mon Mar 29 19:36:48 2021 -0600

    usbip: add sysfs_lock to synchronize sysfs code paths
    
    commit 4e9c93af7279b059faf5bb1897ee90512b258a12 upstream.
    
    Fuzzing uncovered race condition between sysfs code paths in usbip
    drivers. Device connect/disconnect code paths initiated through
    sysfs interface are prone to races if disconnect happens during
    connect and vice versa.
    
    This problem is common to all drivers while it can be reproduced easily
    in vhci_hcd. Add a sysfs_lock to usbip_device struct to protect the paths.
    
    Use this in vhci_hcd to protect sysfs paths. For a complete fix, usip_host
    and usip-vudc drivers and the event handler will have to use this lock to
    protect the paths. These changes will be done in subsequent patches.
    
    Cc: stable@vger.kernel.org
    Reported-and-tested-by: syzbot+a93fba6d384346a761e3@syzkaller.appspotmail.com
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/b6568f7beae702bbc236a545d3c020106ca75eac.1616807117.git.skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b61254efa1477506115aa52e8650a42d565b928c
Author: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
Date:   Thu Apr 8 18:14:31 2021 +0300

    net: sched: sch_teql: fix null-pointer dereference
    
    commit 1ffbc7ea91606e4abd10eb60de5367f1c86daf5e upstream.
    
    Reproduce:
    
      modprobe sch_teql
      tc qdisc add dev teql0 root teql0
    
    This leads to (for instance in Centos 7 VM) OOPS:
    
    [  532.366633] BUG: unable to handle kernel NULL pointer dereference at 00000000000000a8
    [  532.366733] IP: [<ffffffffc06124a8>] teql_destroy+0x18/0x100 [sch_teql]
    [  532.366825] PGD 80000001376d5067 PUD 137e37067 PMD 0
    [  532.366906] Oops: 0000 [#1] SMP
    [  532.366987] Modules linked in: sch_teql ...
    [  532.367945] CPU: 1 PID: 3026 Comm: tc Kdump: loaded Tainted: G               ------------ T 3.10.0-1062.7.1.el7.x86_64 #1
    [  532.368041] Hardware name: Virtuozzo KVM, BIOS 1.11.0-2.vz7.2 04/01/2014
    [  532.368125] task: ffff8b7d37d31070 ti: ffff8b7c9fdbc000 task.ti: ffff8b7c9fdbc000
    [  532.368224] RIP: 0010:[<ffffffffc06124a8>]  [<ffffffffc06124a8>] teql_destroy+0x18/0x100 [sch_teql]
    [  532.368320] RSP: 0018:ffff8b7c9fdbf8e0  EFLAGS: 00010286
    [  532.368394] RAX: ffffffffc0612490 RBX: ffff8b7cb1565e00 RCX: ffff8b7d35ba2000
    [  532.368476] RDX: ffff8b7d35ba2000 RSI: 0000000000000000 RDI: ffff8b7cb1565e00
    [  532.368557] RBP: ffff8b7c9fdbf8f8 R08: ffff8b7d3fd1f140 R09: ffff8b7d3b001600
    [  532.368638] R10: ffff8b7d3b001600 R11: ffffffff84c7d65b R12: 00000000ffffffd8
    [  532.368719] R13: 0000000000008000 R14: ffff8b7d35ba2000 R15: ffff8b7c9fdbf9a8
    [  532.368800] FS:  00007f6a4e872740(0000) GS:ffff8b7d3fd00000(0000) knlGS:0000000000000000
    [  532.368885] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  532.368961] CR2: 00000000000000a8 CR3: 00000001396ee000 CR4: 00000000000206e0
    [  532.369046] Call Trace:
    [  532.369159]  [<ffffffff84c8192e>] qdisc_create+0x36e/0x450
    [  532.369268]  [<ffffffff846a9b49>] ? ns_capable+0x29/0x50
    [  532.369366]  [<ffffffff849afde2>] ? nla_parse+0x32/0x120
    [  532.369442]  [<ffffffff84c81b4c>] tc_modify_qdisc+0x13c/0x610
    [  532.371508]  [<ffffffff84c693e7>] rtnetlink_rcv_msg+0xa7/0x260
    [  532.372668]  [<ffffffff84907b65>] ? sock_has_perm+0x75/0x90
    [  532.373790]  [<ffffffff84c69340>] ? rtnl_newlink+0x890/0x890
    [  532.374914]  [<ffffffff84c8da7b>] netlink_rcv_skb+0xab/0xc0
    [  532.376055]  [<ffffffff84c63708>] rtnetlink_rcv+0x28/0x30
    [  532.377204]  [<ffffffff84c8d400>] netlink_unicast+0x170/0x210
    [  532.378333]  [<ffffffff84c8d7a8>] netlink_sendmsg+0x308/0x420
    [  532.379465]  [<ffffffff84c2f3a6>] sock_sendmsg+0xb6/0xf0
    [  532.380710]  [<ffffffffc034a56e>] ? __xfs_filemap_fault+0x8e/0x1d0 [xfs]
    [  532.381868]  [<ffffffffc034a75c>] ? xfs_filemap_fault+0x2c/0x30 [xfs]
    [  532.383037]  [<ffffffff847ec23a>] ? __do_fault.isra.61+0x8a/0x100
    [  532.384144]  [<ffffffff84c30269>] ___sys_sendmsg+0x3e9/0x400
    [  532.385268]  [<ffffffff847f3fad>] ? handle_mm_fault+0x39d/0x9b0
    [  532.386387]  [<ffffffff84d88678>] ? __do_page_fault+0x238/0x500
    [  532.387472]  [<ffffffff84c31921>] __sys_sendmsg+0x51/0x90
    [  532.388560]  [<ffffffff84c31972>] SyS_sendmsg+0x12/0x20
    [  532.389636]  [<ffffffff84d8dede>] system_call_fastpath+0x25/0x2a
    [  532.390704]  [<ffffffff84d8de21>] ? system_call_after_swapgs+0xae/0x146
    [  532.391753] Code: 00 00 00 00 00 00 5b 5d c3 66 2e 0f 1f 84 00 00 00 00 00 66 66 66 66 90 55 48 89 e5 41 55 41 54 53 48 8b b7 48 01 00 00 48 89 fb <48> 8b 8e a8 00 00 00 48 85 c9 74 43 48 89 ca eb 0f 0f 1f 80 00
    [  532.394036] RIP  [<ffffffffc06124a8>] teql_destroy+0x18/0x100 [sch_teql]
    [  532.395127]  RSP <ffff8b7c9fdbf8e0>
    [  532.396179] CR2: 00000000000000a8
    
    Null pointer dereference happens on master->slaves dereference in
    teql_destroy() as master is null-pointer.
    
    When qdisc_create() calls teql_qdisc_init() it imediately fails after
    check "if (m->dev == dev)" because both devices are teql0, and it does
    not set qdisc_priv(sch)->m leaving it zero on error path, then
    qdisc_create() imediately calls teql_destroy() which does not expect
    zero master pointer and we get OOPS.
    
    Fixes: 87b60cfacf9f ("net_sched: fix error recovery at qdisc creation")
    Signed-off-by: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 068e0cacc337587d3b3cd7c2b5f8218953ce0beb
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Mar 30 16:43:43 2021 -0700

    net: ensure mac header is set in virtio_net_hdr_to_skb()
    
    commit 61431a5907fc36d0738e9a547c7e1556349a03e9 upstream.
    
    Commit 924a9bc362a5 ("net: check if protocol extracted by virtio_net_hdr_set_proto is correct")
    added a call to dev_parse_header_protocol() but mac_header is not yet set.
    
    This means that eth_hdr() reads complete garbage, and syzbot complained about it [1]
    
    This patch resets mac_header earlier, to get more coverage about this change.
    
    Audit of virtio_net_hdr_to_skb() callers shows that this change should be safe.
    
    [1]
    
    BUG: KASAN: use-after-free in eth_header_parse_protocol+0xdc/0xe0 net/ethernet/eth.c:282
    Read of size 2 at addr ffff888017a6200b by task syz-executor313/8409
    
    CPU: 1 PID: 8409 Comm: syz-executor313 Not tainted 5.12.0-rc2-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:79 [inline]
     dump_stack+0x141/0x1d7 lib/dump_stack.c:120
     print_address_description.constprop.0.cold+0x5b/0x2f8 mm/kasan/report.c:232
     __kasan_report mm/kasan/report.c:399 [inline]
     kasan_report.cold+0x7c/0xd8 mm/kasan/report.c:416
     eth_header_parse_protocol+0xdc/0xe0 net/ethernet/eth.c:282
     dev_parse_header_protocol include/linux/netdevice.h:3177 [inline]
     virtio_net_hdr_to_skb.constprop.0+0x99d/0xcd0 include/linux/virtio_net.h:83
     packet_snd net/packet/af_packet.c:2994 [inline]
     packet_sendmsg+0x2325/0x52b0 net/packet/af_packet.c:3031
     sock_sendmsg_nosec net/socket.c:654 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:674
     sock_no_sendpage+0xf3/0x130 net/core/sock.c:2860
     kernel_sendpage.part.0+0x1ab/0x350 net/socket.c:3631
     kernel_sendpage net/socket.c:3628 [inline]
     sock_sendpage+0xe5/0x140 net/socket.c:947
     pipe_to_sendpage+0x2ad/0x380 fs/splice.c:364
     splice_from_pipe_feed fs/splice.c:418 [inline]
     __splice_from_pipe+0x43e/0x8a0 fs/splice.c:562
     splice_from_pipe fs/splice.c:597 [inline]
     generic_splice_sendpage+0xd4/0x140 fs/splice.c:746
     do_splice_from fs/splice.c:767 [inline]
     do_splice+0xb7e/0x1940 fs/splice.c:1079
     __do_splice+0x134/0x250 fs/splice.c:1144
     __do_sys_splice fs/splice.c:1350 [inline]
     __se_sys_splice fs/splice.c:1332 [inline]
     __x64_sys_splice+0x198/0x250 fs/splice.c:1332
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
    
    Fixes: 924a9bc362a5 ("net: check if protocol extracted by virtio_net_hdr_set_proto is correct")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Balazs Nemeth <bnemeth@redhat.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 926ae39606546dc7cab374d153d3e2c2ecf6e1e8
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Mon Apr 5 19:16:50 2021 +0900

    batman-adv: initialize "struct batadv_tvlv_tt_vlan_data"->reserved field
    
    commit 08c27f3322fec11950b8f1384aa0f3b11d028528 upstream.
    
    KMSAN found uninitialized value at batadv_tt_prepare_tvlv_local_data()
    [1], for commit ced72933a5e8ab52 ("batman-adv: use CRC32C instead of CRC16
    in TT code") inserted 'reserved' field into "struct batadv_tvlv_tt_data"
    and commit 7ea7b4a142758dea ("batman-adv: make the TT CRC logic VLAN
    specific") moved that field to "struct batadv_tvlv_tt_vlan_data" but left
    that field uninitialized.
    
    [1] https://syzkaller.appspot.com/bug?id=07f3e6dba96f0eb3cabab986adcd8a58b9bdbe9d
    
    Reported-by: syzbot <syzbot+50ee810676e6a089487b@syzkaller.appspotmail.com>
    Tested-by: syzbot <syzbot+50ee810676e6a089487b@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Fixes: ced72933a5e8ab52 ("batman-adv: use CRC32C instead of CRC16 in TT code")
    Fixes: 7ea7b4a142758dea ("batman-adv: make the TT CRC logic VLAN specific")
    Acked-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03c07dacf361de97860e87883243acf029ae91db
Author: Marek Behún <kabel@kernel.org>
Date:   Sun Feb 21 00:11:44 2021 +0100

    ARM: dts: turris-omnia: configure LED[2]/INTn pin as interrupt pin
    
    commit a26c56ae67fa9fbb45a8a232dcd7ebaa7af16086 upstream.
    
    Use the `marvell,reg-init` DT property to configure the LED[2]/INTn pin
    of the Marvell 88E1514 ethernet PHY on Turris Omnia into interrupt mode.
    
    Without this the pin is by default in LED[2] mode, and the Marvell PHY
    driver configures LED[2] into "On - Link, Blink - Activity" mode.
    
    This fixes the issue where the pca9538 GPIO/interrupt controller (which
    can't mask interrupts in HW) received too many interrupts and after a
    time started ignoring the interrupt with error message:
      IRQ 71: nobody cared
    
    There is a work in progress to have the Marvell PHY driver support
    parsing PHY LED nodes from OF and registering the LEDs as Linux LED
    class devices. Once this is done the PHY driver can also automatically
    set the pin into INTn mode if it does not find LED[2] in OF.
    
    Until then, though, we fix this via `marvell,reg-init` DT property.
    
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Reported-by: Rui Salvaterra <rsalvaterra@gmail.com>
    Fixes: 26ca8b52d6e1 ("ARM: dts: add support for Turris Omnia")
    Cc: Uwe Kleine-König <uwe@kleine-koenig.org>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: Andrew Lunn <andrew@lunn.ch>
    Cc: Gregory CLEMENT <gregory.clement@bootlin.com>
    Cc: <stable@vger.kernel.org>
    Tested-by: Rui Salvaterra <rsalvaterra@gmail.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4cbd5b42b8e28c3df5b90d7407cd7e369547a471
Author: Gao Xiang <hsiangkao@redhat.com>
Date:   Tue Apr 6 12:59:29 2021 +0800

    parisc: avoid a warning on u8 cast for cmpxchg on u8 pointers
    
    commit 4d752e5af63753ab5140fc282929b98eaa4bd12e upstream.
    
    commit b344d6a83d01 ("parisc: add support for cmpxchg on u8 pointers")
    can generate a sparse warning ("cast truncates bits from constant
    value"), which has been reported several times [1] [2] [3].
    
    The original code worked as expected, but anyway, let silence such
    sparse warning as what others did [4].
    
    [1] https://lore.kernel.org/r/202104061220.nRMBwCXw-lkp@intel.com
    [2] https://lore.kernel.org/r/202012291914.T5Agcn99-lkp@intel.com
    [3] https://lore.kernel.org/r/202008210829.KVwn7Xeh%25lkp@intel.com
    [4] https://lore.kernel.org/r/20210315131512.133720-2-jacopo+renesas@jmondi.org
    Cc: Liam Beguin <liambeguin@gmail.com>
    Cc: Helge Deller <deller@gmx.de>
    Cc: stable@vger.kernel.org # v5.8+
    Signed-off-by: Gao Xiang <hsiangkao@redhat.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ec4765f0e1d998ba82a462c41c6aa4c5894eea6
Author: Helge Deller <deller@gmx.de>
Date:   Tue Apr 6 11:32:52 2021 +0200

    parisc: parisc-agp requires SBA IOMMU driver
    
    commit 9054284e8846b0105aad43a4e7174ca29fffbc44 upstream.
    
    Add a dependency to the SBA IOMMU driver to avoid:
    ERROR: modpost: "sba_list" [drivers/char/agp/parisc-agp.ko] undefined!
    
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef296ff03ce813d32c3d836122d4a2c77223ad50
Author: Jack Qiu <jack.qiu@huawei.com>
Date:   Fri Apr 9 13:27:35 2021 -0700

    fs: direct-io: fix missing sdio->boundary
    
    commit df41872b68601059dd4a84858952dcae58acd331 upstream.
    
    I encountered a hung task issue, but not a performance one.  I run DIO
    on a device (need lba continuous, for example open channel ssd), maybe
    hungtask in below case:
    
      DIO:                                          Checkpoint:
      get addr A(at boundary), merge into BIO,
      no submit because boundary missing
                                                    flush dirty data(get addr A+1), wait IO(A+1)
                                                    writeback timeout, because DIO(A) didn't submit
      get addr A+2 fail, because checkpoint is doing
    
    dio_send_cur_page() may clear sdio->boundary, so prevent it from missing
    a boundary.
    
    Link: https://lkml.kernel.org/r/20210322042253.38312-1-jack.qiu@huawei.com
    Fixes: b1058b981272 ("direct-io: submit bio after boundary buffer is added to it")
    Signed-off-by: Jack Qiu <jack.qiu@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50964c7ae738d31c2804efa1663379773c84c4cb
Author: Wengang Wang <wen.gang.wang@oracle.com>
Date:   Fri Apr 9 13:27:29 2021 -0700

    ocfs2: fix deadlock between setattr and dio_end_io_write
    
    commit 90bd070aae6c4fb5d302f9c4b9c88be60c8197ec upstream.
    
    The following deadlock is detected:
    
      truncate -> setattr path is waiting for pending direct IO to be done (inode->i_dio_count become zero) with inode->i_rwsem held (down_write).
    
      PID: 14827  TASK: ffff881686a9af80  CPU: 20  COMMAND: "ora_p005_hrltd9"
       #0  __schedule at ffffffff818667cc
       #1  schedule at ffffffff81866de6
       #2  inode_dio_wait at ffffffff812a2d04
       #3  ocfs2_setattr at ffffffffc05f322e [ocfs2]
       #4  notify_change at ffffffff812a5a09
       #5  do_truncate at ffffffff812808f5
       #6  do_sys_ftruncate.constprop.18 at ffffffff81280cf2
       #7  sys_ftruncate at ffffffff81280d8e
       #8  do_syscall_64 at ffffffff81003949
       #9  entry_SYSCALL_64_after_hwframe at ffffffff81a001ad
    
    dio completion path is going to complete one direct IO (decrement
    inode->i_dio_count), but before that it hung at locking inode->i_rwsem:
    
       #0  __schedule+700 at ffffffff818667cc
       #1  schedule+54 at ffffffff81866de6
       #2  rwsem_down_write_failed+536 at ffffffff8186aa28
       #3  call_rwsem_down_write_failed+23 at ffffffff8185a1b7
       #4  down_write+45 at ffffffff81869c9d
       #5  ocfs2_dio_end_io_write+180 at ffffffffc05d5444 [ocfs2]
       #6  ocfs2_dio_end_io+85 at ffffffffc05d5a85 [ocfs2]
       #7  dio_complete+140 at ffffffff812c873c
       #8  dio_aio_complete_work+25 at ffffffff812c89f9
       #9  process_one_work+361 at ffffffff810b1889
      #10  worker_thread+77 at ffffffff810b233d
      #11  kthread+261 at ffffffff810b7fd5
      #12  ret_from_fork+62 at ffffffff81a0035e
    
    Thus above forms ABBA deadlock.  The same deadlock was mentioned in
    upstream commit 28f5a8a7c033 ("ocfs2: should wait dio before inode lock
    in ocfs2_setattr()").  It seems that that commit only removed the
    cluster lock (the victim of above dead lock) from the ABBA deadlock
    party.
    
    End-user visible effects: Process hang in truncate -> ocfs2_setattr path
    and other processes hang at ocfs2_dio_end_io_write path.
    
    This is to fix the deadlock itself.  It removes inode_lock() call from
    dio completion path to remove the deadlock and add ip_alloc_sem lock in
    setattr path to synchronize the inode modifications.
    
    [wen.gang.wang@oracle.com: remove the "had_alloc_lock" as suggested]
      Link: https://lkml.kernel.org/r/20210402171344.1605-1-wen.gang.wang@oracle.com
    
    Link: https://lkml.kernel.org/r/20210331203654.3911-1-wen.gang.wang@oracle.com
    Signed-off-by: Wengang Wang <wen.gang.wang@oracle.com>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 942c0ce30884689f7c4c3f8de361d57c3b5b2f48
Author: Sergei Trofimovich <slyfox@gentoo.org>
Date:   Fri Apr 9 13:27:32 2021 -0700

    ia64: fix user_stack_pointer() for ptrace()
    
    commit 7ad1e366167837daeb93d0bacb57dee820b0b898 upstream.
    
    ia64 has two stacks:
    
     - memory stack (or stack), pointed at by by r12
    
     - register backing store (register stack), pointed at by
       ar.bsp/ar.bspstore with complications around dirty
       register frame on CPU.
    
    In [1] Dmitry noticed that PTRACE_GET_SYSCALL_INFO returns the register
    stack instead memory stack.
    
    The bug comes from the fact that user_stack_pointer() and
    current_user_stack_pointer() don't return the same register:
    
      ulong user_stack_pointer(struct pt_regs *regs) { return regs->ar_bspstore; }
      #define current_user_stack_pointer() (current_pt_regs()->r12)
    
    The change gets both back in sync.
    
    I think ptrace(PTRACE_GET_SYSCALL_INFO) is the only affected user by
    this bug on ia64.
    
    The change fixes 'rt_sigreturn.gen.test' strace test where it was
    observed initially.
    
    Link: https://bugs.gentoo.org/769614 [1]
    Link: https://lkml.kernel.org/r/20210331084447.2561532-1-slyfox@gentoo.org
    Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
    Reported-by: Dmitry V. Levin <ldv@altlinux.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0d22eb0fb58b9225ba19225d9d538ab479c06ca
Author: Muhammad Usama Anjum <musamaanjum@gmail.com>
Date:   Fri Apr 9 03:01:29 2021 +0500

    net: ipv6: check for validity before dereferencing cfg->fc_nlinfo.nlh
    
    commit 864db232dc7036aa2de19749c3d5be0143b24f8f upstream.
    
    nlh is being checked for validtity two times when it is dereferenced in
    this function. Check for validity again when updating the flags through
    nlh pointer to make the dereferencing safe.
    
    CC: <stable@vger.kernel.org>
    Addresses-Coverity: ("NULL pointer dereference")
    Signed-off-by: Muhammad Usama Anjum <musamaanjum@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a807e1d9e20d37eaabc77ed6ec4668f3ec0218ba
Author: Luca Fancellu <luca.fancellu@arm.com>
Date:   Tue Apr 6 11:51:04 2021 +0100

    xen/evtchn: Change irq_info lock to raw_spinlock_t
    
    commit d120198bd5ff1d41808b6914e1eb89aff937415c upstream.
    
    Unmask operation must be called with interrupt disabled,
    on preempt_rt spin_lock_irqsave/spin_unlock_irqrestore
    don't disable/enable interrupts, so use raw_* implementation
    and change lock variable in struct irq_info from spinlock_t
    to raw_spinlock_t
    
    Cc: stable@vger.kernel.org
    Fixes: 25da4618af24 ("xen/events: don't unmask an event channel when an eoi is pending")
    Signed-off-by: Luca Fancellu <luca.fancellu@arm.com>
    Reviewed-by: Julien Grall <jgrall@amazon.com>
    Reviewed-by: Wei Liu <wei.liu@kernel.org>
    Link: https://lore.kernel.org/r/20210406105105.10141-1-luca.fancellu@arm.com
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26d8243112acc3c36ee9f0aaac62cc5dcf3afb72
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Thu Mar 25 11:51:13 2021 +0800

    nfc: Avoid endless loops caused by repeated llcp_sock_connect()
    
    commit 4b5db93e7f2afbdfe3b78e37879a85290187e6f1 upstream.
    
    When sock_wait_state() returns -EINPROGRESS, "sk->sk_state" is
     LLCP_CONNECTING. In this case, llcp_sock_connect() is repeatedly invoked,
     nfc_llcp_sock_link() will add sk to local->connecting_sockets twice.
     sk->sk_node->next will point to itself, that will make an endless loop
     and hang-up the system.
    To fix it, check whether sk->sk_state is LLCP_CONNECTING in
     llcp_sock_connect() to avoid repeated invoking.
    
    Fixes: b4011239a08e ("NFC: llcp: Fix non blocking sockets connections")
    Reported-by: "kiyin(尹亮)" <kiyin@tencent.com>
    Link: https://www.openwall.com/lists/oss-security/2020/11/01/1
    Cc: <stable@vger.kernel.org> #v3.11
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 159cca3be1a877354893c16cd615cddfccdb93a6
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Thu Mar 25 11:51:12 2021 +0800

    nfc: fix memory leak in llcp_sock_connect()
    
    commit 7574fcdbdcb335763b6b322f6928dc0fd5730451 upstream.
    
    In llcp_sock_connect(), use kmemdup to allocate memory for
     "llcp_sock->service_name". The memory is not released in the sock_unlink
    label of the subsequent failure branch.
    As a result, memory leakage occurs.
    
    fix CVE-2020-25672
    
    Fixes: d646960f7986 ("NFC: Initial LLCP support")
    Reported-by: "kiyin(尹亮)" <kiyin@tencent.com>
    Link: https://www.openwall.com/lists/oss-security/2020/11/01/1
    Cc: <stable@vger.kernel.org> #v3.3
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66bd4b95df27e867109ef60592ae3d8eeaf66e46
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Thu Mar 25 11:51:11 2021 +0800

    nfc: fix refcount leak in llcp_sock_connect()
    
    commit 8a4cd82d62b5ec7e5482333a72b58a4eea4979f0 upstream.
    
    nfc_llcp_local_get() is invoked in llcp_sock_connect(),
    but nfc_llcp_local_put() is not invoked in subsequent failure branches.
    As a result, refcount leakage occurs.
    To fix it, add calling nfc_llcp_local_put().
    
    fix CVE-2020-25671
    Fixes: c7aa12252f51 ("NFC: Take a reference on the LLCP local pointer when creating a socket")
    Reported-by: "kiyin(尹亮)" <kiyin@tencent.com>
    Link: https://www.openwall.com/lists/oss-security/2020/11/01/1
    Cc: <stable@vger.kernel.org> #v3.6
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21cade6ca9b471dd1fd255ec46210240c36f7e3d
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Thu Mar 25 11:51:10 2021 +0800

    nfc: fix refcount leak in llcp_sock_bind()
    
    commit c33b1cc62ac05c1dbb1cdafe2eb66da01c76ca8d upstream.
    
    nfc_llcp_local_get() is invoked in llcp_sock_bind(),
    but nfc_llcp_local_put() is not invoked in subsequent failure branches.
    As a result, refcount leakage occurs.
    To fix it, add calling nfc_llcp_local_put().
    
    fix CVE-2020-25670
    Fixes: c7aa12252f51 ("NFC: Take a reference on the LLCP local pointer when creating a socket")
    Reported-by: "kiyin(尹亮)" <kiyin@tencent.com>
    Link: https://www.openwall.com/lists/oss-security/2020/11/01/1
    Cc: <stable@vger.kernel.org> #v3.6
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ed311a1d1c135ea9fd6ab5020f985dd6636d72c
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Mar 24 14:27:10 2021 +0100

    ASoC: intel: atom: Stop advertising non working S24LE support
    
    commit aa65bacdb70e549a81de03ec72338e1047842883 upstream.
    
    The SST firmware's media and deep-buffer inputs are hardcoded to
    S16LE, the corresponding DAIs don't have a hw_params callback and
    their prepare callback also does not take the format into account.
    
    So far the advertising of non working S24LE support has not caused
    issues because pulseaudio defaults to S16LE, but changing pulse-audio's
    config to use S24LE will result in broken sound.
    
    Pipewire is replacing pulse now and pipewire prefers S24LE over S16LE
    when available, causing the problem of the broken S24LE support to
    come to the surface now.
    
    Cc: stable@vger.kernel.org
    BugLink: https://gitlab.freedesktop.org/pipewire/pipewire/-/issues/866
    Fixes: 098c2cd281409 ("ASoC: Intel: Atom: add 24-bit support for media playback and capture")
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20210324132711.216152-2-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5fa35e57848fce78a9f902b99fd8c5e18d43e2b
Author: Jonas Holmberg <jonashg@axis.com>
Date:   Wed Apr 7 09:54:28 2021 +0200

    ALSA: aloop: Fix initialization of controls
    
    commit 168632a495f49f33a18c2d502fc249d7610375e9 upstream.
    
    Add a control to the card before copying the id so that the numid field
    is initialized in the copy. Otherwise the numid field of active_id,
    format_id, rate_id and channels_id will be the same (0) and
    snd_ctl_notify() will not queue the events properly.
    
    Signed-off-by: Jonas Holmberg <jonashg@axis.com>
    Reviewed-by: Jaroslav Kysela <perex@perex.cz>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210407075428.2666787-1-jonashg@axis.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69a67c0286844e3a8cb7698b3d3b5a1a82e8faaa
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Apr 10 13:20:12 2021 +0200

    Linux 4.14.230
    
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20210409095300.391558233@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed2be73fc56e56724ae2c3a666db3eba6cf822b2
Author: Angelo Dureghello <angelo@kernel-space.org>
Date:   Tue Mar 16 00:15:10 2021 +0100

    can: flexcan: flexcan_chip_freeze(): fix chip freeze for missing bitrate
    
    commit 47c5e474bc1e1061fb037d13b5000b38967eb070 upstream.
    
    For cases when flexcan is built-in, bitrate is still not set at
    registering. So flexcan_chip_freeze() generates:
    
    [    1.860000] *** ZERO DIVIDE ***   FORMAT=4
    [    1.860000] Current process id is 1
    [    1.860000] BAD KERNEL TRAP: 00000000
    [    1.860000] PC: [<402e70c8>] flexcan_chip_freeze+0x1a/0xa8
    
    To allow chip freeze, using an hardcoded timeout when bitrate is still
    not set.
    
    Fixes: ec15e27cc890 ("can: flexcan: enable RX FIFO after FRZ/HALT valid")
    Link: https://lore.kernel.org/r/20210315231510.650593-1-angelo@kernel-space.org
    Signed-off-by: Angelo Dureghello <angelo@kernel-space.org>
    [mkl: use if instead of ? operator]
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Cc: Koen Vandeputte <koen.vandeputte@citymesh.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 842ea849bf7233ecbec5a5e007511cd4d6b5ab26
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Fri Mar 12 21:07:08 2021 -0800

    init/Kconfig: make COMPILE_TEST depend on HAS_IOMEM
    
    commit ea29b20a828511de3348334e529a3d046a180416 upstream.
    
    I read the commit log of the following two:
    
    - bc083a64b6c0 ("init/Kconfig: make COMPILE_TEST depend on !UML")
    - 334ef6ed06fa ("init/Kconfig: make COMPILE_TEST depend on !S390")
    
    Both are talking about HAS_IOMEM dependency missing in many drivers.
    
    So, 'depends on HAS_IOMEM' seems the direct, sensible solution to me.
    
    This does not change the behavior of UML. UML still cannot enable
    COMPILE_TEST because it does not provide HAS_IOMEM.
    
    The current dependency for S390 is too strong. Under the condition of
    CONFIG_PCI=y, S390 provides HAS_IOMEM, hence can enable COMPILE_TEST.
    
    I also removed the meaningless 'default n'.
    
    Link: https://lkml.kernel.org/r/20210224140809.1067582-1-masahiroy@kernel.org
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: Arnd Bergmann <arnd@kernel.org>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: KP Singh <kpsingh@google.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Nick Terrell <terrelln@fb.com>
    Cc: Quentin Perret <qperret@google.com>
    Cc: Valentin Schneider <valentin.schneider@arm.com>
    Cc: "Enrico Weigelt, metux IT consult" <lkml@metux.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5559ccd9756d04af0d8e1415faeccfc601ca0601
Author: Heiko Carstens <hca@linux.ibm.com>
Date:   Wed Nov 18 21:32:33 2020 +0100

    init/Kconfig: make COMPILE_TEST depend on !S390
    
    commit 334ef6ed06fa1a54e35296b77b693bcf6d63ee9e upstream.
    
    While allmodconfig and allyesconfig build for s390 there are also
    various bots running compile tests with randconfig, where PCI is
    disabled. This reveals that a lot of drivers should actually depend on
    HAS_IOMEM.
    Adding this to each device driver would be a never ending story,
    therefore just disable COMPILE_TEST for s390.
    
    The reasoning is more or less the same as described in
    commit bc083a64b6c0 ("init/Kconfig: make COMPILE_TEST depend on !UML").
    
    Reported-by: kernel test robot <lkp@intel.com>
    Suggested-by: Arnd Bergmann <arnd@kernel.org>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96722b0835fd5b9e41873133f5c47206899bf56c
Author: Piotr Krysiuk <piotras@gmail.com>
Date:   Mon Apr 5 22:52:15 2021 +0100

    bpf, x86: Validate computation of branch displacements for x86-64
    
    commit e4d4d456436bfb2fe412ee2cd489f7658449b098 upstream.
    
    The branch displacement logic in the BPF JIT compilers for x86 assumes
    that, for any generated branch instruction, the distance cannot
    increase between optimization passes.
    
    But this assumption can be violated due to how the distances are
    computed. Specifically, whenever a backward branch is processed in
    do_jit(), the distance is computed by subtracting the positions in the
    machine code from different optimization passes. This is because part
    of addrs[] is already updated for the current optimization pass, before
    the branch instruction is visited.
    
    And so the optimizer can expand blocks of machine code in some cases.
    
    This can confuse the optimizer logic, where it assumes that a fixed
    point has been reached for all machine code blocks once the total
    program size stops changing. And then the JIT compiler can output
    abnormal machine code containing incorrect branch displacements.
    
    To mitigate this issue, we assert that a fixed point is reached while
    populating the output image. This rejects any problematic programs.
    The issue affects both x86-32 and x86-64. We mitigate separately to
    ease backporting.
    
    Signed-off-by: Piotr Krysiuk <piotras@gmail.com>
    Reviewed-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 590ba28178e34ffa8e787750485766d5f2335b95
Author: Vincent Whitchurch <vincent.whitchurch@axis.com>
Date:   Fri Mar 19 14:57:11 2021 +0100

    cifs: Silently ignore unknown oplock break handle
    
    [ Upstream commit 219481a8f90ec3a5eed9638fb35609e4b1aeece7 ]
    
    Make SMB2 not print out an error when an oplock break is received for an
    unknown handle, similar to SMB1.  The debug message which is printed for
    these unknown handles may also be misleading, so fix that too.
    
    The SMB2 lease break path is not affected by this patch.
    
    Without this, a program which writes to a file from one thread, and
    opens, reads, and writes the same file from another thread triggers the
    below errors several times a minute when run against a Samba server
    configured with "smb2 leases = no".
    
     CIFS: VFS: \\192.168.0.1 No task to wake, unknown frame received! NumMids 2
     00000000: 424d53fe 00000040 00000000 00000012  .SMB@...........
     00000010: 00000001 00000000 ffffffff ffffffff  ................
     00000020: 00000000 00000000 00000000 00000000  ................
     00000030: 00000000 00000000 00000000 00000000  ................
    
    Signed-off-by: Vincent Whitchurch <vincent.whitchurch@axis.com>
    Reviewed-by: Tom Talpey <tom@talpey.com>
    Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 796a6753d63d1efa41efdd6ea88328a1b5a6e663
Author: Ronnie Sahlberg <lsahlber@redhat.com>
Date:   Thu Mar 25 16:26:35 2021 +1000

    cifs: revalidate mapping when we open files for SMB1 POSIX
    
    [ Upstream commit cee8f4f6fcabfdf229542926128e9874d19016d5 ]
    
    RHBZ: 1933527
    
    Under SMB1 + POSIX, if an inode is reused on a server after we have read and
    cached a part of a file, when we then open the new file with the
    re-cycled inode there is a chance that we may serve the old data out of cache
    to the application.
    This only happens for SMB1 (deprecated) and when posix are used.
    The simplest solution to avoid this race is to force a revalidate
    on smb1-posix open.
    
    Signed-off-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64e7eb5d9658e50aadaf7aadabdbe6b96c676144
Author: Sergei Trofimovich <slyfox@gentoo.org>
Date:   Wed Mar 24 21:37:38 2021 -0700

    ia64: mca: allocate early mca with GFP_ATOMIC
    
    [ Upstream commit f2a419cf495f95cac49ea289318b833477e1a0e2 ]
    
    The sleep warning happens at early boot right at secondary CPU
    activation bootup:
    
        smp: Bringing up secondary CPUs ...
        BUG: sleeping function called from invalid context at mm/page_alloc.c:4942
        in_atomic(): 0, irqs_disabled(): 1, non_block: 0, pid: 0, name: swapper/1
        CPU: 1 PID: 0 Comm: swapper/1 Not tainted 5.12.0-rc2-00007-g79e228d0b611-dirty #99
        ..
        Call Trace:
          show_stack+0x90/0xc0
          dump_stack+0x150/0x1c0
          ___might_sleep+0x1c0/0x2a0
          __might_sleep+0xa0/0x160
          __alloc_pages_nodemask+0x1a0/0x600
          alloc_page_interleave+0x30/0x1c0
          alloc_pages_current+0x2c0/0x340
          __get_free_pages+0x30/0xa0
          ia64_mca_cpu_init+0x2d0/0x3a0
          cpu_init+0x8b0/0x1440
          start_secondary+0x60/0x700
          start_ap+0x750/0x780
        Fixed BSP b0 value from CPU 1
    
    As I understand interrupts are not enabled yet and system has a lot of
    memory.  There is little chance to sleep and switch to GFP_ATOMIC should
    be a no-op.
    
    Link: https://lkml.kernel.org/r/20210315085045.204414-1-slyfox@gentoo.org
    Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68b6e5f4624fb6287ee087ecd5a93d2a7281cbab
Author: Martin Wilck <mwilck@suse.com>
Date:   Tue Mar 23 22:24:31 2021 +0100

    scsi: target: pscsi: Clean up after failure in pscsi_map_sg()
    
    [ Upstream commit 36fa766faa0c822c860e636fe82b1affcd022974 ]
    
    If pscsi_map_sg() fails, make sure to drop references to already allocated
    bios.
    
    Link: https://lore.kernel.org/r/20210323212431.15306-2-mwilck@suse.com
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Martin Wilck <mwilck@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 262b73c19f941b7f6ee46040bd35734c30dca362
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Mar 23 13:48:36 2021 +0100

    x86/build: Turn off -fcf-protection for realmode targets
    
    [ Upstream commit 9fcb51c14da2953de585c5c6e50697b8a6e91a7b ]
    
    The new Ubuntu GCC packages turn on -fcf-protection globally,
    which causes a build failure in the x86 realmode code:
    
      cc1: error: ‘-fcf-protection’ is not compatible with this target
    
    Turn it off explicitly on compilers that understand this option.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Link: https://lore.kernel.org/r/20210323124846.1584944-1-arnd@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit deab0044169565da9b26b56f4dec12d21daa99a7
Author: Esteve Varela Colominas <esteve.varela@gmail.com>
Date:   Mon Mar 15 20:58:24 2021 +0100

    platform/x86: thinkpad_acpi: Allow the FnLock LED to change state
    
    [ Upstream commit 3d677f12ea3a2097a16ded570623567403dea959 ]
    
    On many recent ThinkPad laptops, there's a new LED next to the ESC key,
    that indicates the FnLock status.
    When the Fn+ESC combo is pressed, FnLock is toggled, which causes the
    Media Key functionality to change, making it so that the media keys
    either perform their media key function, or function as an F-key by
    default. The Fn key can be used the access the alternate function at any
    time.
    
    With the current linux kernel, the LED doens't change state if you press
    the Fn+ESC key combo. However, the media key functionality *does*
    change. This is annoying, since the LED will stay on if it was on during
    bootup, and it makes it hard to keep track what the current state of the
    FnLock is.
    
    This patch calls an ACPI function, that gets the current media key
    state, when the Fn+ESC key combo is pressed. Through testing it was
    discovered that this function causes the LED to update correctly to
    reflect the current state when this function is called.
    
    The relevant ACPI calls are the following:
    \_SB_.PCI0.LPC0.EC0_.HKEY.GMKS: Get media key state, returns 0x603 if the FnLock mode is enabled, and 0x602 if it's disabled.
    \_SB_.PCI0.LPC0.EC0_.HKEY.SMKS: Set media key state, sending a 1 will enable FnLock mode, and a 0 will disable it.
    
    Relevant discussion:
    https://bugzilla.kernel.org/show_bug.cgi?id=207841
    https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1881015
    
    Signed-off-by: Esteve Varela Colominas <esteve.varela@gmail.com>
    Link: https://lore.kernel.org/r/20210315195823.23212-1-esteve.varela@gmail.com
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2cc65e3eb4cc2c0a1658e5fa6594f3664567e940
Author: Rob Clark <robdclark@chromium.org>
Date:   Wed Mar 17 09:40:38 2021 -0700

    drm/msm: Ratelimit invalid-fence message
    
    [ Upstream commit 7ad48d27a2846bfda29214fb454d001c3e02b9e7 ]
    
    We have seen a couple cases where low memory situations cause something
    bad to happen, followed by a flood of these messages obscuring the root
    cause.  Lets ratelimit the dmesg spam so that next time it happens we
    don't lose the kernel traces leading up to this.
    
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da1001d6452e76642a5d5cab953c4195a4af3dd1
Author: Karthikeyan Kathirvel <kathirve@codeaurora.org>
Date:   Thu Mar 11 10:59:07 2021 +0530

    mac80211: choose first enabled channel for monitor
    
    [ Upstream commit 041c881a0ba8a75f71118bd9766b78f04beed469 ]
    
    Even if the first channel from sband channel list is invalid
    or disabled mac80211 ends up choosing it as the default channel
    for monitor interfaces, making them not usable.
    
    Fix this by assigning the first available valid or enabled
    channel instead.
    
    Signed-off-by: Karthikeyan Kathirvel <kathirve@codeaurora.org>
    Link: https://lore.kernel.org/r/1615440547-7661-1-git-send-email-kathirve@codeaurora.org
    [reword commit message, comment, code cleanups]
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 542ee8baac0ebbade33f2863b82ba6a87651e13b
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Wed Mar 10 23:27:35 2021 -0500

    mISDN: fix crash in fritzpci
    
    [ Upstream commit a9f81244d2e33e6dfcef120fefd30c96b3f7cdb0 ]
    
    setup_fritz() in avmfritz.c might fail with -EIO and in this case the
    isac.type and isac.write_reg is not initialized and remains 0(NULL).
    A subsequent call to isac_release() will dereference isac->write_reg and
    crash.
    
    [    1.737444] BUG: kernel NULL pointer dereference, address: 0000000000000000
    [    1.737809] #PF: supervisor instruction fetch in kernel mode
    [    1.738106] #PF: error_code(0x0010) - not-present page
    [    1.738378] PGD 0 P4D 0
    [    1.738515] Oops: 0010 [#1] SMP NOPTI
    [    1.738711] CPU: 0 PID: 180 Comm: systemd-udevd Not tainted 5.12.0-rc2+ #78
    [    1.739077] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-48-gd9c812dda519-p
    rebuilt.qemu.org 04/01/2014
    [    1.739664] RIP: 0010:0x0
    [    1.739807] Code: Unable to access opcode bytes at RIP 0xffffffffffffffd6.
    [    1.740200] RSP: 0018:ffffc9000027ba10 EFLAGS: 00010202
    [    1.740478] RAX: 0000000000000000 RBX: ffff888102f41840 RCX: 0000000000000027
    [    1.740853] RDX: 00000000000000ff RSI: 0000000000000020 RDI: ffff888102f41800
    [    1.741226] RBP: ffffc9000027ba20 R08: ffff88817bc18440 R09: ffffc9000027b808
    [    1.741600] R10: 0000000000000001 R11: 0000000000000001 R12: ffff888102f41840
    [    1.741976] R13: 00000000fffffffb R14: ffff888102f41800 R15: ffff8881008b0000
    [    1.742351] FS:  00007fda3a38a8c0(0000) GS:ffff88817bc00000(0000) knlGS:0000000000000000
    [    1.742774] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [    1.743076] CR2: ffffffffffffffd6 CR3: 00000001021ec000 CR4: 00000000000006f0
    [    1.743452] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [    1.743828] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [    1.744206] Call Trace:
    [    1.744339]  isac_release+0xcc/0xe0 [mISDNipac]
    [    1.744582]  fritzpci_probe.cold+0x282/0x739 [avmfritz]
    [    1.744861]  local_pci_probe+0x48/0x80
    [    1.745063]  pci_device_probe+0x10f/0x1c0
    [    1.745278]  really_probe+0xfb/0x420
    [    1.745471]  driver_probe_device+0xe9/0x160
    [    1.745693]  device_driver_attach+0x5d/0x70
    [    1.745917]  __driver_attach+0x8f/0x150
    [    1.746123]  ? device_driver_attach+0x70/0x70
    [    1.746354]  bus_for_each_dev+0x7e/0xc0
    [    1.746560]  driver_attach+0x1e/0x20
    [    1.746751]  bus_add_driver+0x152/0x1f0
    [    1.746957]  driver_register+0x74/0xd0
    [    1.747157]  ? 0xffffffffc00d8000
    [    1.747334]  __pci_register_driver+0x54/0x60
    [    1.747562]  AVM_init+0x36/0x1000 [avmfritz]
    [    1.747791]  do_one_initcall+0x48/0x1d0
    [    1.747997]  ? __cond_resched+0x19/0x30
    [    1.748206]  ? kmem_cache_alloc_trace+0x390/0x440
    [    1.748458]  ? do_init_module+0x28/0x250
    [    1.748669]  do_init_module+0x62/0x250
    [    1.748870]  load_module+0x23ee/0x26a0
    [    1.749073]  __do_sys_finit_module+0xc2/0x120
    [    1.749307]  ? __do_sys_finit_module+0xc2/0x120
    [    1.749549]  __x64_sys_finit_module+0x1a/0x20
    [    1.749782]  do_syscall_64+0x38/0x90
    
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d56cbe5c513fe3f76b6d893171bf416d688538d
Author: Pavel Andrianov <andrianov@ispras.ru>
Date:   Wed Mar 10 11:10:46 2021 +0300

    net: pxa168_eth: Fix a potential data race in pxa168_eth_remove
    
    [ Upstream commit 0571a753cb07982cc82f4a5115e0b321da89e1f3 ]
    
    pxa168_eth_remove() firstly calls unregister_netdev(),
    then cancels a timeout work. unregister_netdev() shuts down a device
    interface and removes it from the kernel tables. If the timeout occurs
    in parallel, the timeout work (pxa168_eth_tx_timeout_task) performs stop
    and open of the device. It may lead to an inconsistent state and memory
    leaks.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Pavel Andrianov <andrianov@ispras.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b4bb8234870c4e236faaf7e52b5d357f788a394
Author: Mans Rullgard <mans@mansr.com>
Date:   Thu Jan 28 15:56:44 2021 +0000

    ARM: dts: am33xx: add aliases for mmc interfaces
    
    [ Upstream commit 9bbce32a20d6a72c767a7f85fd6127babd1410ac ]
    
    Without DT aliases, the numbering of mmc interfaces is unpredictable.
    Adding them makes it possible to refer to devices consistently.  The
    popular suggestion to use UUIDs obviously doesn't work with a blank
    device fresh from the factory.
    
    See commit fa2d0aa96941 ("mmc: core: Allow setting slot index via
    device tree alias") for more discussion.
    
    Signed-off-by: Mans Rullgard <mans@mansr.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ee55464a44a2a9deb3d11a920a7ca2fba3ef818
Author: idkwhoiam322 <idkwhoiam322@raphielgang.org>
Date:   Thu Oct 15 01:34:42 2020 +0530

    Revert previous drm changes from LA.UM.8.1.r1-15900-sm8150.0
    
    Some drm/msm changes from CAF's LA.UM.8.1.r1-15900-sm8150.0 merge have resulted in
    stutters in certain situations, reproduced mainly in app transition. Revert the entire
    set to prevent any issues by partial patchset reversal.
    
    This reverts the following commits:
    e7fa7a65a4f8 drm/msm/sde: trigger single frame_done evt for vid encoder
    8215d24c78c6 drm/msm/sde: avoid frame_done event trigger for idle scenario
    0985a882bd37 drm/msm/sde: initialize sde_encoder_wait_info before usage
    135b653de9a1 disp: msm: sde: avoid multiple frame-done encoder events
    ad18f17b3a1a disp: msm: sde: signal retire fence in wr_ptr timeout
    d8ba1b1072a6 disp: msm: sde: handle another case for lost pp-done interrupt
    98316bf11251 disp: msm: sde: avoid encoder power-collapse with pending frames
    354291b18d89 disp: msm: sde: fix handling the missing pp-done interrupt cases
    8f0dde931bba disp: msm: sde: wait for specific pp_done instead of zero
    aa8c9096d089 disp: msm: sde: fix release fence signaling in error cases
    b7bf59a2e313 disp: msm: sde: reset ctl during wr_ptr_irq timeout
    0edba2e03b27 disp: msm: sde: use wr_ptr interrupt instead of ctl_start
    7fa9ad4fbb7c drm/msm/sde: trigger frame done if ctl is idle
    d1f2c76f0f4c drm/msm/sde: avoid frame done event during autorefresh
    3e588c3b32dc drm/msm/sde: add connector property for frame trigger mode
    71e67aaa4409 drm/msm/sde: delay reset frame by a frame for posted trigger
    48327dbe3369 drm/msm/sde: support posted frame trigger for cmd mode
    0a1dfc99e528 drm/msm/sde: use atomic counter for pending frame done
    
    Signed-off-by: idkwhoiam322 <idkwhoiam322@raphielgang.org>
    Signed-off-by: Park Ju Hyung <qkrwngud825@gmail.com>

commit 0ed50d36fb729ab40d30f928c73ec213e1e2e59f
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 12:34:11 2021 +0200

    Revert "drm/msm/dsi-staging: update dsi clock calculations"
    
    This reverts commit 9c6317b23ea35825883bdb44612403311837b8e0.

commit 1f7dc4badbab43f1eef8bf8589f8770e37bcfa10
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 12:34:02 2021 +0200

    Revert "drm/msm/dsi-staging: update frame transfer time calculations"
    
    This reverts commit b693f3694b5f004060fcadc3614b8612695b1f2b.

commit dd65bb20e6cb81a4da34a10a4b25190dae104106
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 12:33:50 2021 +0200

    Revert "disp: msm: dsi: update dsi pclk in panel mode settings"
    
    This reverts commit 738b8add680d9fe421d287ae08f8237a71491a45.

commit 5ceb9161732810f07e04e8803a76152c9aec6575
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 12:32:00 2021 +0200

    Revert "msm: kgsl: Mark the scratch buffer as privileged"
    
    This reverts commit 1e322e1d6105d9f5fb697203a2d1f2486f2c6084.

commit 892af95585bca35658d40f044a285273d71388ef
Merge: 4ff43f1482ab 48b365d1ab81
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 12:29:40 2021 +0200

    Merge tag 'LA.UM.8.1.r1-15900-sm8150.0' of https://source.codeaurora.org/quic/la/kernel/msm-4.14 into lineage-18.1
    
    "LA.UM.8.1.r1-15900-sm8150.0"

commit 4ff43f1482ab38de2c34899808e0f1d94c25d64b
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 12:27:59 2021 +0200

    Revert "drm/msm/sde: Wait for ctl_start asynchronously on cmd mode panels"
    
    This reverts commit ecfceb0b283c58a69ce75a598bd245d15bf793d0.

commit e4fc632b3b2a650cc1529b23e92d13ccd0b6410f
Merge: 19a3fda3fe9f 5d5db956eb1c
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 11:44:45 2021 +0200

    Merge tag 'LA.UM.8.1.r1-16900-sm8150.0' of https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/fw-api into lineage-18.1
    
    "LA.UM.8.1.r1-16900-sm8150.0"

commit 19a3fda3fe9ff39dbc5c6b78d1dcb21911c0614a
Merge: 1d9d643b1a9a 97b8736f4da6
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 11:43:50 2021 +0200

    Merge tag 'LA.UM.8.1.r1-16900-sm8150.0' of https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/qca-wifi-host-cmn into lineage-18.1
    
    "LA.UM.8.1.r1-16900-sm8150.0"

commit 1d9d643b1a9a146a503b4d6bf8190f0a150f3eda
Merge: 308944041c9c 8dc8568ba1f8
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 11:42:50 2021 +0200

    Merge tag 'LA.UM.8.1.r1-16900-sm8150.0' of https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/qcacld-3.0 into lineage-18.1
    
    "LA.UM.8.1.r1-16900-sm8150.0"

commit 308944041c9c1e08595543c3cd9a530b0c4a7309
Merge: 2c0fd0364237 4ca4a098ac94
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 11:42:35 2021 +0200

    Merge tag 'LA.UM.8.1.r1-16600-sm8150.0' of https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/fw-api into lineage-18.1
    
    "LA.UM.8.1.r1-16600-sm8150.0"

commit 2c0fd036423727015700fd60844404f041d90ff8
Merge: 45526b20f6ab a3f1fc587ca2
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 11:41:55 2021 +0200

    Merge tag 'LA.UM.8.1.r1-16600-sm8150.0' of https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/qca-wifi-host-cmn into lineage-18.1
    
    "LA.UM.8.1.r1-16600-sm8150.0"

commit 45526b20f6ab89675fd38b83ecba5c5cb533c08e
Merge: 4a30385dc641 260bef52419d
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 11:40:57 2021 +0200

    Merge tag 'LA.UM.8.1.r1-16600-sm8150.0' of https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/qcacld-3.0 into lineage-18.1
    
    "LA.UM.8.1.r1-16600-sm8150.0"

commit 4a30385dc64178befa2903d8216ee09ef19651c0
Merge: 01862db4afcf 29e0a07e08ef
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 11:40:30 2021 +0200

    Merge tag 'LA.UM.8.1.r1-16300-sm8150.0' of https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/fw-api into lineage-18.1
    
    "LA.UM.8.1.r1-16300-sm8150.0"

commit 01862db4afcf5f8d9c8066b8ff5121890a10b865
Merge: 03257de0a596 911b2d0a0662
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 11:40:08 2021 +0200

    Merge tag 'LA.UM.8.1.r1-16300-sm8150.0' of https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/qca-wifi-host-cmn into lineage-18.1
    
    "LA.UM.8.1.r1-16300-sm8150.0"

commit 03257de0a596943b026bd3d33f7fd95114258b3a
Merge: b10c0838b8f9 e32c30fabcfe
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 11:39:15 2021 +0200

    Merge tag 'LA.UM.8.1.r1-16300-sm8150.0' of https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/qcacld-3.0 into lineage-18.1
    
    "LA.UM.8.1.r1-16300-sm8150.0"

commit b10c0838b8f9b35a51042d6d93ba87e68c167091
Merge: 6ce716fd20e4 37afb3d54d3f
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 11:38:42 2021 +0200

    Merge tag 'LA.UM.8.1.r1-16200-sm8150.0' of https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/fw-api into lineage-18.1
    
    "LA.UM.8.1.r1-16200-sm8150.0"

commit 6ce716fd20e43a46e6d5378d1ebc4f54bbaa96ca
Merge: cc0400fbe829 b267e323ce72
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 11:38:03 2021 +0200

    Merge tag 'LA.UM.8.1.r1-16200-sm8150.0' of https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/qca-wifi-host-cmn into lineage-18.1
    
    "LA.UM.8.1.r1-16200-sm8150.0"

commit cc0400fbe829d173fc78b2b83d565819468c2fb1
Merge: 0eedbf59e729 0e7868b6765e
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 11:37:02 2021 +0200

    Merge tag 'LA.UM.8.1.r1-16200-sm8150.0' of https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/qcacld-3.0 into lineage-18.1
    
    "LA.UM.8.1.r1-16200-sm8150.0"

commit 0eedbf59e7295022f35d67d0835dcafcfc5dc050
Merge: ba990d2c203d f90254af6070
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 11:36:30 2021 +0200

    Merge tag 'LA.UM.8.1.r1-16000-sm8150.0' of https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/fw-api into lineage-18.1
    
    "LA.UM.8.1.r1-16000-sm8150.0"

commit ba990d2c203d70b6a12d9dc2bdd1a535d1fbf596
Merge: 458b48c4d61f f3df74a56474
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 11:35:58 2021 +0200

    Merge tag 'LA.UM.8.1.r1-16000-sm8150.0' of https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/qca-wifi-host-cmn into lineage-18.1
    
    "LA.UM.8.1.r1-16000-sm8150.0"

commit 458b48c4d61f9c9d91ab1df058bf4e00313d3cc9
Merge: a31df2247d96 0b7fd89ef2d0
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 11:35:23 2021 +0200

    Merge tag 'LA.UM.8.1.r1-16000-sm8150.0' of https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/qcacld-3.0 into lineage-18.1
    
    "LA.UM.8.1.r1-16000-sm8150.0"

commit a31df2247d96ed2a9d8570c9a539a8d3f7679839
Merge: 418483ab01a5 d9a7b9f36207
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 11:34:32 2021 +0200

    Merge tag 'LA.UM.8.1.r1-15900-sm8150.0' of https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/fw-api into lineage-18.1
    
    "LA.UM.8.1.r1-15900-sm8150.0"

commit 418483ab01a5ab920c9ee683227a9309179d7a44
Merge: 114fac711e7f 4172593601dd
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 11:33:58 2021 +0200

    Merge tag 'LA.UM.8.1.r1-15900-sm8150.0' of https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/qca-wifi-host-cmn into lineage-18.1
    
    "LA.UM.8.1.r1-15900-sm8150.0"

commit 114fac711e7fffe978d6f7e372ecad54324633cd
Merge: 329a91ecbafa c042c8fb4d20
Author: SGCMarkus <markusornik@gmail.com>
Date:   Thu Apr 8 11:33:23 2021 +0200

    Merge tag 'LA.UM.8.1.r1-15900-sm8150.0' of https://source.codeaurora.org/quic/la/platform/vendor/qcom-opensource/wlan/qcacld-3.0 into lineage-18.1
    
    "LA.UM.8.1.r1-15900-sm8150.0"

commit 329a91ecbafa7857b9acfa182b3c82a19465024f
Author: Ram Muthiah <rammuthiah@google.com>
Date:   Tue Jan 26 20:27:32 2021 -0800

    ANDROID: Make vsock virtio packet buff size configurable
    
    When the android virtual device stays up for long periods of time, the
    SLAB sustains everincreasing fragmentation. Contributing to this
    fragmentation are the virtio packet buffer allocations which are a
    drain on 64Kb compound pages. Eventually these can't be allocated due to
    fragmentation.
    
    To enable successful allocations for this packet buffer, the packet
    buffer's size needs to be reduced.
    
    To enable a reduction without impacting other partners, this var is
    being exposed as a command line param.
    
    Bug: 149494272
    Test: atest ManagedProfileLifecycleStressTest#testCreateStartDelete on
    local cuttlefish device
    Signed-off-by: Ram Muthiah <rammuthiah@google.com>
    Change-Id: Ia4f9180025b64d61d9e2b882daa84460b8f08fd2

commit 8b5832fe2f7b743f9a08f1a062cfff18cef7a75f
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Apr 7 12:47:05 2021 +0200

    Linux 4.14.229
    
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Link: https://lore.kernel.org/r/20210405085021.996963957@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1369df8794511b58aea63c674f6a227b7291f86
Author: Du Cheng <ducheng2@gmail.com>
Date:   Fri Mar 12 16:14:21 2021 +0800

    drivers: video: fbcon: fix NULL dereference in fbcon_cursor()
    
    commit 01faae5193d6190b7b3aa93dae43f514e866d652 upstream.
    
    add null-check on function pointer before dereference on ops->cursor
    
    Reported-by: syzbot+b67aaae8d3a927f68d20@syzkaller.appspotmail.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Du Cheng <ducheng2@gmail.com>
    Link: https://lore.kernel.org/r/20210312081421.452405-1-ducheng2@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a22802550d6ec1b047851349d523a032dd738c19
Author: Atul Gopinathan <atulgopinathan@gmail.com>
Date:   Tue Mar 23 17:04:14 2021 +0530

    staging: rtl8192e: Change state information from u16 to u8
    
    commit e78836ae76d20f38eed8c8c67f21db97529949da upstream.
    
    The "u16 CcxRmState[2];" array field in struct "rtllib_network" has 4
    bytes in total while the operations performed on this array through-out
    the code base are only 2 bytes.
    
    The "CcxRmState" field is fed only 2 bytes of data using memcpy():
    
    (In rtllib_rx.c:1972)
            memcpy(network->CcxRmState, &info_element->data[4], 2)
    
    With "info_element->data[]" being a u8 array, if 2 bytes are written
    into "CcxRmState" (whose one element is u16 size), then the 2 u8
    elements from "data[]" gets squashed and written into the first element
    ("CcxRmState[0]") while the second element ("CcxRmState[1]") is never
    fed with any data.
    
    Same in file rtllib_rx.c:2522:
             memcpy(dst->CcxRmState, src->CcxRmState, 2);
    
    The above line duplicates "src" data to "dst" but only writes 2 bytes
    (and not 4, which is the actual size). Again, only 1st element gets the
    value while the 2nd element remains uninitialized.
    
    This later makes operations done with CcxRmState unpredictable in the
    following lines as the 1st element is having a squashed number while the
    2nd element is having an uninitialized random number.
    
    rtllib_rx.c:1973:    if (network->CcxRmState[0] != 0)
    rtllib_rx.c:1977:    network->MBssidMask = network->CcxRmState[1] & 0x07;
    
    network->MBssidMask is also of type u8 and not u16.
    
    Fix this by changing the type of "CcxRmState" from u16 to u8 so that the
    data written into this array and read from it make sense and are not
    random values.
    
    NOTE: The wrong initialization of "CcxRmState" can be seen in the
    following commit:
    
    commit ecdfa44610fa ("Staging: add Realtek 8192 PCI wireless driver")
    
    The above commit created a file `rtl8192e/ieee80211.h` which used to
    have the faulty line. The file has been deleted (or possibly renamed)
    with the contents copied in to a new file `rtl8192e/rtllib.h` along with
    additional code in the commit 94a799425eee (tagged in Fixes).
    
    Fixes: 94a799425eee ("From: wlanfae <wlanfae@realtek.com> [PATCH 1/8] rtl8192e: Import new version of driver from realtek")
    Cc: stable@vger.kernel.org
    Signed-off-by: Atul Gopinathan <atulgopinathan@gmail.com>
    Link: https://lore.kernel.org/r/20210323113413.29179-2-atulgopinathan@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f88c5c3c53a77b9b6747a1188c24d082f24d87f
Author: Atul Gopinathan <atulgopinathan@gmail.com>
Date:   Tue Mar 23 17:04:12 2021 +0530

    staging: rtl8192e: Fix incorrect source in memcpy()
    
    commit 72ad25fbbb78930f892b191637359ab5b94b3190 upstream.
    
    The variable "info_element" is of the following type:
    
            struct rtllib_info_element *info_element
    
    defined in drivers/staging/rtl8192e/rtllib.h:
    
            struct rtllib_info_element {
                    u8 id;
                    u8 len;
                    u8 data[];
            } __packed;
    
    The "len" field defines the size of the "data[]" array. The code is
    supposed to check if "info_element->len" is greater than 4 and later
    equal to 6. If this is satisfied then, the last two bytes (the 4th and
    5th element of u8 "data[]" array) are copied into "network->CcxRmState".
    
    Right now the code uses "memcpy()" with the source as "&info_element[4]"
    which would copy in wrong and unintended information. The struct
    "rtllib_info_element" has a size of 2 bytes for "id" and "len",
    therefore indexing will be done in interval of 2 bytes. So,
    "info_element[4]" would point to data which is beyond the memory
    allocated for this pointer (that is, at x+8, while "info_element" has
    been allocated only from x to x+7 (2 + 6 => 8 bytes)).
    
    This patch rectifies this error by using "&info_element->data[4]" which
    correctly copies the last two bytes of "data[]".
    
    NOTE: The faulty line of code came from the following commit:
    
    commit ecdfa44610fa ("Staging: add Realtek 8192 PCI wireless driver")
    
    The above commit created the file `rtl8192e/ieee80211/ieee80211_rx.c`
    which had the faulty line of code. This file has been deleted (or
    possibly renamed) with the contents copied in to a new file
    `rtl8192e/rtllib_rx.c` along with additional code in the commit
    94a799425eee (tagged in Fixes).
    
    Fixes: 94a799425eee ("From: wlanfae <wlanfae@realtek.com> [PATCH 1/8] rtl8192e: Import new version of driver from realtek")
    Cc: stable@vger.kernel.org
    Signed-off-by: Atul Gopinathan <atulgopinathan@gmail.com>
    Link: https://lore.kernel.org/r/20210323113413.29179-1-atulgopinathan@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bccce1565e4a0f3cee94a85c57cbbd3f230c08c9
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Wed Mar 17 19:04:00 2021 -0400

    usb: gadget: udc: amd5536udc_pci fix null-ptr-dereference
    
    commit 72035f4954f0bca2d8c47cf31b3629c42116f5b7 upstream.
    
    init_dma_pools() calls dma_pool_create(...dev->dev) to create dma pool.
    however, dev->dev is actually set after calling init_dma_pools(), which
    effectively makes dma_pool_create(..NULL) and cause crash.
    To fix this issue, init dma only after dev->dev is set.
    
    [    1.317993] RIP: 0010:dma_pool_create+0x83/0x290
    [    1.323257] Call Trace:
    [    1.323390]  ? pci_write_config_word+0x27/0x30
    [    1.323626]  init_dma_pools+0x41/0x1a0 [snps_udc_core]
    [    1.323899]  udc_pci_probe+0x202/0x2b1 [amd5536udc_pci]
    
    Fixes: 7c51247a1f62 (usb: gadget: udc: Provide correct arguments for 'dma_pool_create')
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Link: https://lore.kernel.org/r/20210317230400.357756-1-ztong0001@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df1417ab2dbe042014de21346f24ee482b3b00c5
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Mar 22 16:53:12 2021 +0100

    USB: cdc-acm: fix use-after-free after probe failure
    
    commit 4e49bf376c0451ad2eae2592e093659cde12be9a upstream.
    
    If tty-device registration fails the driver would fail to release the
    data interface. When the device is later disconnected, the disconnect
    callback would still be called for the data interface and would go about
    releasing already freed resources.
    
    Fixes: c93d81955005 ("usb: cdc-acm: fix error handling in acm_probe()")
    Cc: stable@vger.kernel.org      # 3.9
    Cc: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210322155318.9837-3-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b209f4d22df206d5a503fd1284dae0a954f5ce7
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Mar 11 14:01:26 2021 +0100

    USB: cdc-acm: downgrade message to debug
    
    commit e4c77070ad45fc940af1d7fb1e637c349e848951 upstream.
    
    This failure is so common that logging an error here amounts
    to spamming log files.
    
    Reviewed-by: Bruno Thomsen <bruno.thomsen@gmail.com>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210311130126.15972-2-oneukum@suse.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1511eda7f0d1909d7c1a6fa2ecc496ecc3112c3
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Mar 11 14:01:25 2021 +0100

    USB: cdc-acm: untangle a circular dependency between callback and softint
    
    commit 6069e3e927c8fb3a1947b07d1a561644ea960248 upstream.
    
    We have a cycle of callbacks scheduling works which submit
    URBs with thos callbacks. This needs to be blocked, stopped
    and unblocked to untangle the circle.
    
    The issue leads to faults like:
    
    [   55.068392] Unable to handle kernel paging request at virtual address 6b6b6c03
    [   55.075624] pgd = be866494
    [   55.078335] [6b6b6c03] *pgd=00000000
    [   55.081924] Internal error: Oops: 5 [#1] PREEMPT SMP ARM
    [   55.087238] Modules linked in: ppp_async crc_ccitt ppp_generic slhc
    xt_TCPMSS xt_tcpmss xt_hl nf_log_ipv6 nf_log_ipv4 nf_log_common
    xt_policy xt_limit xt_conntrack xt_tcpudp xt_pkttype ip6table_mangle
    iptable_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4
    iptable_mangle ip6table_filter ip6_tables iptable_filter ip_tables
    des_generic md5 sch_fq_codel cdc_mbim cdc_wdm cdc_ncm usbnet mii
    cdc_acm usb_storage ip_tunnel xfrm_user xfrm6_tunnel tunnel6
    xfrm4_tunnel tunnel4 esp6 esp4 ah6 ah4 xfrm_algo xt_LOG xt_LED
    xt_comment x_tables ipv6
    [   55.134954] CPU: 0 PID: 82 Comm: kworker/0:2 Tainted: G
       T 5.8.17 #1
    [   55.142526] Hardware name: Freescale i.MX7 Dual (Device Tree)
    [   55.148304] Workqueue: events acm_softint [cdc_acm]
    [   55.153196] PC is at kobject_get+0x10/0xa4
    [   55.157302] LR is at usb_get_dev+0x14/0x1c
    [   55.161402] pc : [<8047c06c>]    lr : [<80560448>]    psr: 20000193
    [   55.167671] sp : bca39ea8  ip : 00007374  fp : bf6cbd80
    [   55.172899] r10: 00000000  r9 : bdd92284  r8 : bdd92008
    [   55.178128] r7 : 6b6b6b6b  r6 : fffffffe  r5 : 60000113  r4 : 6b6b6be3
    [   55.184658] r3 : 6b6b6b6b  r2 : 00000111  r1 : 00000000  r0 : 6b6b6be3
    [   55.191191] Flags: nzCv  IRQs off  FIQs on  Mode SVC_32  ISA ARM Segment none
    [   55.198417] Control: 10c5387d  Table: bcf0c06a  DAC: 00000051
    [   55.204168] Process kworker/0:2 (pid: 82, stack limit = 0x9bdd2a89)
    [   55.210439] Stack: (0xbca39ea8 to 0xbca3a000)
    [   55.214805] 9ea0:                   bf6cbd80 80769a50 6b6b6b6b 80560448 bdeb0500 8056bfe8
    [   55.222991] 9ec0: 00000002 b76da000 00000000 bdeb0500 bdd92448 bca38000 bdeb0510 8056d69c
    [   55.231177] 9ee0: bca38000 00000000 80c050fc 00000000 bca39f44 09d42015 00000000 00000001
    [   55.239363] 9f00: bdd92448 bdd92438 bdd92000 7f1158c4 bdd92448 bca2ee00 bf6cbd80 bf6cef00
    [   55.247549] 9f20: 00000000 00000000 00000000 801412d8 bf6cbd98 80c03d00 bca2ee00 bf6cbd80
    [   55.255735] 9f40: bca2ee14 bf6cbd98 80c03d00 00000008 bca38000 80141568 00000000 80c446ae
    [   55.263921] 9f60: 00000000 bc9ed880 bc9f0700 bca38000 bc117eb4 80141524 bca2ee00 bc9ed8a4
    [   55.272107] 9f80: 00000000 80147cc8 00000000 bc9f0700 80147b84 00000000 00000000 00000000
    [   55.280292] 9fa0: 00000000 00000000 00000000 80100148 00000000 00000000 00000000 00000000
    [   55.288477] 9fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [   55.296662] 9fe0: 00000000 00000000 00000000 00000000 00000013 00000000 00000000 00000000
    [   55.304860] [<8047c06c>] (kobject_get) from [<80560448>] (usb_get_dev+0x14/0x1c)
    [   55.312271] [<80560448>] (usb_get_dev) from [<8056bfe8>] (usb_hcd_unlink_urb+0x50/0xd8)
    [   55.320286] [<8056bfe8>] (usb_hcd_unlink_urb) from [<8056d69c>] (usb_kill_urb.part.0+0x44/0xd0)
    [   55.329004] [<8056d69c>] (usb_kill_urb.part.0) from [<7f1158c4>] (acm_softint+0x4c/0x10c [cdc_acm])
    [   55.338082] [<7f1158c4>] (acm_softint [cdc_acm]) from [<801412d8>] (process_one_work+0x19c/0x3e8)
    [   55.346969] [<801412d8>] (process_one_work) from [<80141568>] (worker_thread+0x44/0x4dc)
    [   55.355072] [<80141568>] (worker_thread) from [<80147cc8>] (kthread+0x144/0x180)
    [   55.362481] [<80147cc8>] (kthread) from [<80100148>] (ret_from_fork+0x14/0x2c)
    [   55.369706] Exception stack(0xbca39fb0 to 0xbca39ff8)
    
    Tested-by: Bruno Thomsen <bruno.thomsen@gmail.com>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210311130126.15972-1-oneukum@suse.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5cadba3eabfa2b8d4e521f7d722ccca60a22b4ff
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Mar 11 14:37:14 2021 +0100

    cdc-acm: fix BREAK rx code path adding necessary calls
    
    commit 08dff274edda54310d6f1cf27b62fddf0f8d146e upstream.
    
    Counting break events is nice but we should actually report them to
    the tty layer.
    
    Fixes: 5a6a62bdb9257 ("cdc-acm: add TIOCMIWAIT")
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Link: https://lore.kernel.org/r/20210311133714.31881-1-oneukum@suse.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b019c5468acd9377427d179492bc7492428079a3
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Tue Mar 23 15:02:46 2021 +0800

    usb: xhci-mtk: fix broken streams issue on 0.96 xHCI
    
    commit 6f978a30c9bb12dab1302d0f06951ee290f5e600 upstream.
    
    The MediaTek 0.96 xHCI controller on some platforms does not
    support bulk stream even HCCPARAMS says supporting, due to MaxPSASize
    is set a default value 1 by mistake, here use XHCI_BROKEN_STREAMS
    quirk to fix it.
    
    Fixes: 94a631d91ad3 ("usb: xhci-mtk: check hcc_params after adding primary hcd")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Link: https://lore.kernel.org/r/1616482975-17841-4-git-send-email-chunfeng.yun@mediatek.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcc78150a3f0115ac008b9befa3bafe52b889a4e
Author: Tony Lindgren <tony@atomide.com>
Date:   Wed Mar 24 09:11:41 2021 +0200

    usb: musb: Fix suspend with devices connected for a64
    
    commit 92af4fc6ec331228aca322ca37c8aea7b150a151 upstream.
    
    Pinephone running on Allwinner A64 fails to suspend with USB devices
    connected as reported by Bhushan Shah <bshah@kde.org>. Reverting
    commit 5fbf7a253470 ("usb: musb: fix idling for suspend after
    disconnect interrupt") fixes the issue.
    
    Let's add suspend checks also for suspend after disconnect interrupt
    quirk handling like we already do elsewhere.
    
    Fixes: 5fbf7a253470 ("usb: musb: fix idling for suspend after disconnect interrupt")
    Reported-by: Bhushan Shah <bshah@kde.org>
    Tested-by: Bhushan Shah <bshah@kde.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Link: https://lore.kernel.org/r/20210324071142.42264-1-tony@atomide.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f23625831ca1c87f754ca757a1be2ddfff934a47
Author: Vincent Palatin <vpalatin@chromium.org>
Date:   Fri Mar 19 13:48:02 2021 +0100

    USB: quirks: ignore remote wake-up on Fibocom L850-GL LTE modem
    
    commit 0bd860493f81eb2a46173f6f5e44cc38331c8dbd upstream.
    
    This LTE modem (M.2 card) has a bug in its power management:
    there is some kind of race condition for U3 wake-up between the host and
    the device. The modem firmware sometimes crashes/locks when both events
    happen at the same time and the modem fully drops off the USB bus (and
    sometimes re-enumerates, sometimes just gets stuck until the next
    reboot).
    
    Tested with the modem wired to the XHCI controller on an AMD 3015Ce
    platform. Without the patch, the modem dropped of the USB bus 5 times in
    3 days. With the quirk, it stayed connected for a week while the
    'runtime_suspended_time' counter incremented as excepted.
    
    Signed-off-by: Vincent Palatin <vpalatin@chromium.org>
    Link: https://lore.kernel.org/r/20210319124802.2315195-1-vpalatin@chromium.org
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82c3bf5762922adf2f92caba410a89c718124443
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Wed Mar 24 17:06:54 2021 -0600

    usbip: vhci_hcd fix shift out-of-bounds in vhci_hub_control()
    
    commit 1cc5ed25bdade86de2650a82b2730108a76de20c upstream.
    
    Fix shift out-of-bounds in vhci_hub_control() SetPortFeature handling.
    
    UBSAN: shift-out-of-bounds in drivers/usb/usbip/vhci_hcd.c:605:42
    shift exponent 768 is too large for 32-bit type 'int'
    
    Reported-by: syzbot+3dea30b047f41084de66@syzkaller.appspotmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20210324230654.34798-1-skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4042ab9daa98952b20f5b9d649839f7d84192567
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Sat Apr 3 06:58:36 2021 +0000

    firewire: nosy: Fix a use-after-free bug in nosy_ioctl()
    
    [ Upstream commit 829933ef05a951c8ff140e814656d73e74915faf ]
    
    For each device, the nosy driver allocates a pcilynx structure.
    A use-after-free might happen in the following scenario:
    
     1. Open nosy device for the first time and call ioctl with command
        NOSY_IOC_START, then a new client A will be malloced and added to
        doubly linked list.
     2. Open nosy device for the second time and call ioctl with command
        NOSY_IOC_START, then a new client B will be malloced and added to
        doubly linked list.
     3. Call ioctl with command NOSY_IOC_START for client A, then client A
        will be readded to the doubly linked list. Now the doubly linked
        list is messed up.
     4. Close the first nosy device and nosy_release will be called. In
        nosy_release, client A will be unlinked and freed.
     5. Close the second nosy device, and client A will be referenced,
        resulting in UAF.
    
    The root cause of this bug is that the element in the doubly linked list
    is reentered into the list.
    
    Fix this bug by adding a check before inserting a client.  If a client
    is already in the linked list, don't insert it.
    
    The following KASAN report reveals it:
    
       BUG: KASAN: use-after-free in nosy_release+0x1ea/0x210
       Write of size 8 at addr ffff888102ad7360 by task poc
       CPU: 3 PID: 337 Comm: poc Not tainted 5.12.0-rc5+ #6
       Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014
       Call Trace:
         nosy_release+0x1ea/0x210
         __fput+0x1e2/0x840
         task_work_run+0xe8/0x180
         exit_to_user_mode_prepare+0x114/0x120
         syscall_exit_to_user_mode+0x1d/0x40
         entry_SYSCALL_64_after_hwframe+0x44/0xae
    
       Allocated by task 337:
         nosy_open+0x154/0x4d0
         misc_open+0x2ec/0x410
         chrdev_open+0x20d/0x5a0
         do_dentry_open+0x40f/0xe80
         path_openat+0x1cf9/0x37b0
         do_filp_open+0x16d/0x390
         do_sys_openat2+0x11d/0x360
         __x64_sys_open+0xfd/0x1a0
         do_syscall_64+0x33/0x40
         entry_SYSCALL_64_after_hwframe+0x44/0xae
    
       Freed by task 337:
         kfree+0x8f/0x210
         nosy_release+0x158/0x210
         __fput+0x1e2/0x840
         task_work_run+0xe8/0x180
         exit_to_user_mode_prepare+0x114/0x120
         syscall_exit_to_user_mode+0x1d/0x40
         entry_SYSCALL_64_after_hwframe+0x44/0xae
    
       The buggy address belongs to the object at ffff888102ad7300 which belongs to the cache kmalloc-128 of size 128
       The buggy address is located 96 bytes inside of 128-byte region [ffff888102ad7300, ffff888102ad7380)
    
    [ Modified to use 'list_empty()' inside proper lock  - Linus ]
    
    Link: https://lore.kernel.org/lkml/1617433116-5930-1-git-send-email-zheyuma97@gmail.com/
    Reported-and-tested-by: 马哲宇 (Zheyu Ma) <zheyuma97@gmail.com>
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Cc: Greg Kroah-Hartman <greg@kroah.com>
    Cc: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90b9b8c2b67479b6a15e8de1be728b9228207a4c
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Tue Jan 19 16:10:55 2021 +0800

    extcon: Fix error handling in extcon_dev_register
    
    [ Upstream commit d3bdd1c3140724967ca4136755538fa7c05c2b4e ]
    
    When devm_kcalloc() fails, we should execute device_unregister()
    to unregister edev->dev from system.
    
    Fixes: 046050f6e623e ("extcon: Update the prototype of extcon_register_notifier() with enum extcon")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b0b6e9839d3c0dac801ced8d99c2e5888cc9ca5
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Dec 31 09:52:52 2020 +0100

    extcon: Add stubs for extcon_register_notifier_all() functions
    
    [ Upstream commit c9570d4a5efd04479b3cd09c39b571eb031d94f4 ]
    
    Add stubs for extcon_register_notifier_all() function for !CONFIG_EXTCON
    case.  This is useful for compile testing and for drivers which use
    EXTCON but do not require it (therefore do not depend on CONFIG_EXTCON).
    
    Fixes: 815429b39d94 ("extcon: Add new extcon_register_notifier_all() to monitor all external connectors")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4877f6e2c00873051395965b139e935abe99407f
Author: Wang Panzhenzhuan <randy.wang@rock-chips.com>
Date:   Tue Feb 23 18:07:25 2021 +0800

    pinctrl: rockchip: fix restore error in resume
    
    commit c971af25cda94afe71617790826a86253e88eab0 upstream.
    
    The restore in resume should match to suspend which only set for RK3288
    SoCs pinctrl.
    
    Fixes: 8dca933127024 ("pinctrl: rockchip: save and restore gpio6_c6 pinmux in suspend/resume")
    Reviewed-by: Jianqun Xu <jay.xu@rock-chips.com>
    Reviewed-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Wang Panzhenzhuan <randy.wang@rock-chips.com>
    Signed-off-by: Jianqun Xu <jay.xu@rock-chips.com>
    Link: https://lore.kernel.org/r/20210223100725.269240-1-jay.xu@rock-chips.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 819e47063fc8504fde2197d9e7c5447f3346e495
Author: Greg Thelen <gthelen@google.com>
Date:   Tue Mar 30 18:19:10 2021 +0000

    mm: writeback: use exact memcg dirty counts
    
    commit 0b3d6e6f2dd0a7b697b1aa8c167265908940624b upstream.
    
    Since commit a983b5ebee57 ("mm: memcontrol: fix excessive complexity in
    memory.stat reporting") memcg dirty and writeback counters are managed
    as:
    
     1) per-memcg per-cpu values in range of [-32..32]
    
     2) per-memcg atomic counter
    
    When a per-cpu counter cannot fit in [-32..32] it's flushed to the
    atomic.  Stat readers only check the atomic.  Thus readers such as
    balance_dirty_pages() may see a nontrivial error margin: 32 pages per
    cpu.
    
    Assuming 100 cpus:
       4k x86 page_size:  13 MiB error per memcg
      64k ppc page_size: 200 MiB error per memcg
    
    Considering that dirty+writeback are used together for some decisions the
    errors double.
    
    This inaccuracy can lead to undeserved oom kills.  One nasty case is
    when all per-cpu counters hold positive values offsetting an atomic
    negative value (i.e.  per_cpu[*]=32, atomic=n_cpu*-32).
    balance_dirty_pages() only consults the atomic and does not consider
    throttling the next n_cpu*32 dirty pages.  If the file_lru is in the
    13..200 MiB range then there's absolutely no dirty throttling, which
    burdens vmscan with only dirty+writeback pages thus resorting to oom
    kill.
    
    It could be argued that tiny containers are not supported, but it's more
    subtle.  It's the amount the space available for file lru that matters.
    If a container has memory.max-200MiB of non reclaimable memory, then it
    will also suffer such oom kills on a 100 cpu machine.
    
    The following test reliably ooms without this patch.  This patch avoids
    oom kills.
    
      $ cat test
      mount -t cgroup2 none /dev/cgroup
      cd /dev/cgroup
      echo +io +memory > cgroup.subtree_control
      mkdir test
      cd test
      echo 10M > memory.max
      (echo $BASHPID > cgroup.procs && exec /memcg-writeback-stress /foo)
      (echo $BASHPID > cgroup.procs && exec dd if=/dev/zero of=/foo bs=2M count=100)
    
      $ cat memcg-writeback-stress.c
      /*
       * Dirty pages from all but one cpu.
       * Clean pages from the non dirtying cpu.
       * This is to stress per cpu counter imbalance.
       * On a 100 cpu machine:
       * - per memcg per cpu dirty count is 32 pages for each of 99 cpus
       * - per memcg atomic is -99*32 pages
       * - thus the complete dirty limit: sum of all counters 0
       * - balance_dirty_pages() only sees atomic count -99*32 pages, which
       *   it max()s to 0.
       * - So a workload can dirty -99*32 pages before balance_dirty_pages()
       *   cares.
       */
      #define _GNU_SOURCE
      #include <err.h>
      #include <fcntl.h>
      #include <sched.h>
      #include <stdlib.h>
      #include <stdio.h>
      #include <sys/stat.h>
      #include <sys/sysinfo.h>
      #include <sys/types.h>
      #include <unistd.h>
    
      static char *buf;
      static int bufSize;
    
      static void set_affinity(int cpu)
      {
            cpu_set_t affinity;
    
            CPU_ZERO(&affinity);
            CPU_SET(cpu, &affinity);
            if (sched_setaffinity(0, sizeof(affinity), &affinity))
                    err(1, "sched_setaffinity");
      }
    
      static void dirty_on(int output_fd, int cpu)
      {
            int i, wrote;
    
            set_affinity(cpu);
            for (i = 0; i < 32; i++) {
                    for (wrote = 0; wrote < bufSize; ) {
                            int ret = write(output_fd, buf+wrote, bufSize-wrote);
                            if (ret == -1)
                                    err(1, "write");
                            wrote += ret;
                    }
            }
      }
    
      int main(int argc, char **argv)
      {
            int cpu, flush_cpu = 1, output_fd;
            const char *output;
    
            if (argc != 2)
                    errx(1, "usage: output_file");
    
            output = argv[1];
            bufSize = getpagesize();
            buf = malloc(getpagesize());
            if (buf == NULL)
                    errx(1, "malloc failed");
    
            output_fd = open(output, O_CREAT|O_RDWR);
            if (output_fd == -1)
                    err(1, "open(%s)", output);
    
            for (cpu = 0; cpu < get_nprocs(); cpu++) {
                    if (cpu != flush_cpu)
                            dirty_on(output_fd, cpu);
            }
    
            set_affinity(flush_cpu);
            if (fsync(output_fd))
                    err(1, "fsync(%s)", output);
            if (close(output_fd))
                    err(1, "close(%s)", output);
            free(buf);
      }
    
    Make balance_dirty_pages() and wb_over_bg_thresh() work harder to
    collect exact per memcg counters.  This avoids the aforementioned oom
    kills.
    
    This does not affect the overhead of memory.stat, which still reads the
    single atomic counter.
    
    Why not use percpu_counter? memcg already handles cpus going offline, so
    no need for that overhead from percpu_counter.  And the percpu_counter
    spinlocks are more heavyweight than is required.
    
    It probably also makes sense to use exact dirty and writeback counters
    in memcg oom reports.  But that is saved for later.
    
    Link: http://lkml.kernel.org/r/20190329174609.164344-1-gthelen@google.com
    Signed-off-by: Greg Thelen <gthelen@google.com>
    Reviewed-by: Roman Gushchin <guro@fb.com>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: <stable@vger.kernel.org>    [4.16+]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 13d66d3c4362312fbd118b88014416e32a346584
Author: Roman Gushchin <guro@fb.com>
Date:   Tue Mar 30 18:19:09 2021 +0000

    mm: fix oom_kill event handling
    
    commit fe6bdfc8e1e131720abbe77a2eb990c94c9024cb upstream.
    
    Commit e27be240df53 ("mm: memcg: make sure memory.events is uptodate
    when waking pollers") converted most of memcg event counters to
    per-memcg atomics, which made them less confusing for a user.  The
    "oom_kill" counter remained untouched, so now it behaves differently
    than other counters (including "oom").  This adds nothing but confusion.
    
    Let's fix this by adding the MEMCG_OOM_KILL event, and follow the
    MEMCG_OOM approach.
    
    This also removes a hack from count_memcg_event_mm(), introduced earlier
    specially for the OOM_KILL counter.
    
    [akpm@linux-foundation.org: fix for droppage of memcg-replace-mm-owner-with-mm-memcg.patch]
    Link: http://lkml.kernel.org/r/20180508124637.29984-1-guro@fb.com
    Signed-off-by: Roman Gushchin <guro@fb.com>
    Acked-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [fllinden@amazon.com: backport to 4.14, minor contextual changes]
    Signed-off-by: Frank van der Linden <fllinden@amazon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 108abe333b28cc4fca65d18d28bbe5a9ac61ea2f
Author: Aaron Lu <aaron.lu@intel.com>
Date:   Tue Mar 30 18:19:08 2021 +0000

    mem_cgroup: make sure moving_account, move_lock_task and stat_cpu in the same cacheline
    
    commit e81bf9793b1861d74953ef041b4f6c7faecc2dbd upstream.
    
    The LKP robot found a 27% will-it-scale/page_fault3 performance
    regression regarding commit e27be240df53("mm: memcg: make sure
    memory.events is uptodate when waking pollers").
    
    What the test does is:
     1 mkstemp() a 128M file on a tmpfs;
     2 start $nr_cpu processes, each to loop the following:
       2.1 mmap() this file in shared write mode;
       2.2 write 0 to this file in a PAGE_SIZE step till the end of the file;
       2.3 unmap() this file and repeat this process.
     3 After 5 minutes, check how many loops they managed to complete, the
       higher the better.
    
    The commit itself looks innocent enough as it merely changed some event
    counting mechanism and this test didn't trigger those events at all.
    Perf shows increased cycles spent on accessing root_mem_cgroup->stat_cpu
    in count_memcg_event_mm()(called by handle_mm_fault()) and in
    __mod_memcg_state() called by page_add_file_rmap().  So it's likely due
    to the changed layout of 'struct mem_cgroup' that either make stat_cpu
    falling into a constantly modifying cacheline or some hot fields stop
    being in the same cacheline.
    
    I verified this by moving memory_events[] back to where it was:
    
    : --- a/include/linux/memcontrol.h
    : +++ b/include/linux/memcontrol.h
    : @@ -205,7 +205,6 @@ struct mem_cgroup {
    :       int             oom_kill_disable;
    :
    :       /* memory.events */
    : -     atomic_long_t memory_events[MEMCG_NR_MEMORY_EVENTS];
    :       struct cgroup_file events_file;
    :
    :       /* protect arrays of thresholds */
    : @@ -238,6 +237,7 @@ struct mem_cgroup {
    :       struct mem_cgroup_stat_cpu __percpu *stat_cpu;
    :       atomic_long_t           stat[MEMCG_NR_STAT];
    :       atomic_long_t           events[NR_VM_EVENT_ITEMS];
    : +     atomic_long_t memory_events[MEMCG_NR_MEMORY_EVENTS];
    :
    :       unsigned long           socket_pressure;
    
    And performance restored.
    
    Later investigation found that as long as the following 3 fields
    moving_account, move_lock_task and stat_cpu are in the same cacheline,
    performance will be good.  To avoid future performance surprise by other
    commits changing the layout of 'struct mem_cgroup', this patch makes
    sure the 3 fields stay in the same cacheline.
    
    One concern of this approach is, moving_account and move_lock_task could
    be modified when a process changes memory cgroup while stat_cpu is a
    always read field, it might hurt to place them in the same cacheline.  I
    assume it is rare for a process to change memory cgroup so this should
    be OK.
    
    Link: https://lkml.kernel.org/r/20180528114019.GF9904@yexl-desktop
    Link: http://lkml.kernel.org/r/20180601071115.GA27302@intel.com
    Signed-off-by: Aaron Lu <aaron.lu@intel.com>
    Reported-by: kernel test robot <xiaolong.ye@intel.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Tejun Heo <tj@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a1efde55cb97dc217ab78e9511922dd8001ab42
Author: Johannes Weiner <hannes@cmpxchg.org>
Date:   Tue Mar 30 18:19:07 2021 +0000

    mm: memcg: make sure memory.events is uptodate when waking pollers
    
    commit e27be240df53f1a20c659168e722b5d9f16cc7f4 upstream.
    
    Commit a983b5ebee57 ("mm: memcontrol: fix excessive complexity in
    memory.stat reporting") added per-cpu drift to all memory cgroup stats
    and events shown in memory.stat and memory.events.
    
    For memory.stat this is acceptable.  But memory.events issues file
    notifications, and somebody polling the file for changes will be
    confused when the counters in it are unchanged after a wakeup.
    
    Luckily, the events in memory.events - MEMCG_LOW, MEMCG_HIGH, MEMCG_MAX,
    MEMCG_OOM - are sufficiently rare and high-level that we don't need
    per-cpu buffering for them: MEMCG_HIGH and MEMCG_MAX would be the most
    frequent, but they're counting invocations of reclaim, which is a
    complex operation that touches many shared cachelines.
    
    This splits memory.events from the generic VM events and tracks them in
    their own, unbuffered atomic counters.  That's also cleaner, as it
    eliminates the ugly enum nesting of VM and cgroup events.
    
    [hannes@cmpxchg.org: "array subscript is above array bounds"]
      Link: http://lkml.kernel.org/r/20180406155441.GA20806@cmpxchg.org
    Link: http://lkml.kernel.org/r/20180405175507.GA24817@cmpxchg.org
    Fixes: a983b5ebee57 ("mm: memcontrol: fix excessive complexity in memory.stat reporting")
    Signed-off-by: Johannes Weiner <hannes@cmpxchg.org>
    Reported-by: Tejun Heo <tj@kernel.org>
    Acked-by: Tejun Heo <tj@kernel.org>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Roman Gushchin <guro@fb.com>
    Cc: Rik van Riel <riel@surriel.com>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0908e98052e0d324cc079009e610f5e9f40f2dfc
Author: Johannes Weiner <hannes@cmpxchg.org>
Date:   Tue Mar 30 18:19:06 2021 +0000

    mm: memcontrol: fix NR_WRITEBACK leak in memcg and system stats
    
    commit c3cc39118c3610eb6ab4711bc624af7fc48a35fe upstream.
    
    After commit a983b5ebee57 ("mm: memcontrol: fix excessive complexity in
    memory.stat reporting"), we observed slowly upward creeping NR_WRITEBACK
    counts over the course of several days, both the per-memcg stats as well
    as the system counter in e.g.  /proc/meminfo.
    
    The conversion from full per-cpu stat counts to per-cpu cached atomic
    stat counts introduced an irq-unsafe RMW operation into the updates.
    
    Most stat updates come from process context, but one notable exception
    is the NR_WRITEBACK counter.  While writebacks are issued from process
    context, they are retired from (soft)irq context.
    
    When writeback completions interrupt the RMW counter updates of new
    writebacks being issued, the decs from the completions are lost.
    
    Since the global updates are routed through the joint lruvec API, both
    the memcg counters as well as the system counters are affected.
    
    This patch makes the joint stat and event API irq safe.
    
    Link: http://lkml.kernel.org/r/20180203082353.17284-1-hannes@cmpxchg.org
    Fixes: a983b5ebee57 ("mm: memcontrol: fix excessive complexity in memory.stat reporting")
    Signed-off-by: Johannes Weiner <hannes@cmpxchg.org>
    Debugged-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Rik van Riel <riel@surriel.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a55d5e6926b38d6b1f2f89837258c93f3c91c8a
Author: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
Date:   Sun Mar 21 23:37:49 2021 +0900

    reiserfs: update reiserfs_xattrs_initialized() condition
    
    commit 5e46d1b78a03d52306f21f77a4e4a144b6d31486 upstream.
    
    syzbot is reporting NULL pointer dereference at reiserfs_security_init()
    [1], for commit ab17c4f02156c4f7 ("reiserfs: fixup xattr_root caching")
    is assuming that REISERFS_SB(s)->xattr_root != NULL in
    reiserfs_xattr_jcreate_nblocks() despite that commit made
    REISERFS_SB(sb)->priv_root != NULL && REISERFS_SB(s)->xattr_root == NULL
    case possible.
    
    I guess that commit 6cb4aff0a77cc0e6 ("reiserfs: fix oops while creating
    privroot with selinux enabled") wanted to check xattr_root != NULL
    before reiserfs_xattr_jcreate_nblocks(), for the changelog is talking
    about the xattr root.
    
      The issue is that while creating the privroot during mount
      reiserfs_security_init calls reiserfs_xattr_jcreate_nblocks which
      dereferences the xattr root. The xattr root doesn't exist, so we get
      an oops.
    
    Therefore, update reiserfs_xattrs_initialized() to check both the
    privroot and the xattr root.
    
    Link: https://syzkaller.appspot.com/bug?id=8abaedbdeb32c861dc5340544284167dd0e46cde # [1]
    Reported-and-tested-by: syzbot <syzbot+690cb1e51970435f9775@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Fixes: 6cb4aff0a77c ("reiserfs: fix oops while creating privroot with selinux enabled")
    Acked-by: Jeff Mahoney <jeffm@suse.com>
    Acked-by: Jan Kara <jack@suse.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31c4700efe60d9808ef0b862c5158ce8a760feb3
Author: Xℹ Ruoyao <xry111@mengyan1223.wang>
Date:   Tue Mar 30 23:33:34 2021 +0800

    drm/amdgpu: check alignment on CPU page for bo map
    
    commit e3512fb67093fabdf27af303066627b921ee9bd8 upstream.
    
    The page table of AMDGPU requires an alignment to CPU page so we should
    check ioctl parameters for it.  Return -EINVAL if some parameter is
    unaligned to CPU page, instead of corrupt the page table sliently.
    
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Xi Ruoyao <xry111@mengyan1223.wang>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ed03b9e52f90703eafc5a0ab651ba9d94033b01
Author: Nirmoy Das <nirmoy.das@amd.com>
Date:   Fri Mar 26 16:08:10 2021 +0100

    drm/amdgpu: fix offset calculation in amdgpu_vm_bo_clear_mappings()
    
    commit 5e61b84f9d3ddfba73091f9fbc940caae1c9eb22 upstream.
    
    Offset calculation wasn't correct as start addresses are in pfn
    not in bytes.
    
    CC: stable@vger.kernel.org
    Signed-off-by: Nirmoy Das <nirmoy.das@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba1ee0432db9d2c2617b816b4c7659317c08ad69
Author: Ilya Lipnitskiy <ilya.lipnitskiy@gmail.com>
Date:   Mon Mar 29 21:42:08 2021 -0700

    mm: fix race by making init_zero_pfn() early_initcall
    
    commit e720e7d0e983bf05de80b231bccc39f1487f0f16 upstream.
    
    There are code paths that rely on zero_pfn to be fully initialized
    before core_initcall.  For example, wq_sysfs_init() is a core_initcall
    function that eventually results in a call to kernel_execve, which
    causes a page fault with a subsequent mmput.  If zero_pfn is not
    initialized by then it may not get cleaned up properly and result in an
    error:
    
      BUG: Bad rss-counter state mm:(ptrval) type:MM_ANONPAGES val:1
    
    Here is an analysis of the race as seen on a MIPS device. On this
    particular MT7621 device (Ubiquiti ER-X), zero_pfn is PFN 0 until
    initialized, at which point it becomes PFN 5120:
    
      1. wq_sysfs_init calls into kobject_uevent_env at core_initcall:
           kobject_uevent_env+0x7e4/0x7ec
           kset_register+0x68/0x88
           bus_register+0xdc/0x34c
           subsys_virtual_register+0x34/0x78
           wq_sysfs_init+0x1c/0x4c
           do_one_initcall+0x50/0x1a8
           kernel_init_freeable+0x230/0x2c8
           kernel_init+0x10/0x100
           ret_from_kernel_thread+0x14/0x1c
    
      2. kobject_uevent_env() calls call_usermodehelper_exec() which executes
         kernel_execve asynchronously.
    
      3. Memory allocations in kernel_execve cause a page fault, bumping the
         MM reference counter:
           add_mm_counter_fast+0xb4/0xc0
           handle_mm_fault+0x6e4/0xea0
           __get_user_pages.part.78+0x190/0x37c
           __get_user_pages_remote+0x128/0x360
           get_arg_page+0x34/0xa0
           copy_string_kernel+0x194/0x2a4
           kernel_execve+0x11c/0x298
           call_usermodehelper_exec_async+0x114/0x194
    
      4. In case zero_pfn has not been initialized yet, zap_pte_range does
         not decrement the MM_ANONPAGES RSS counter and the BUG message is
         triggered shortly afterwards when __mmdrop checks the ref counters:
           __mmdrop+0x98/0x1d0
           free_bprm+0x44/0x118
           kernel_execve+0x160/0x1d8
           call_usermodehelper_exec_async+0x114/0x194
           ret_from_kernel_thread+0x14/0x1c
    
    To avoid races such as described above, initialize init_zero_pfn at
    early_initcall level.  Depending on the architecture, ZERO_PAGE is
    either constant or gets initialized even earlier, at paging_init, so
    there is no issue with initializing zero_pfn earlier.
    
    Link: https://lkml.kernel.org/r/CALCv0x2YqOXEAy2Q=hafjhHCtTHVodChv1qpM=niAXOpqEbt7w@mail.gmail.com
    Signed-off-by: Ilya Lipnitskiy <ilya.lipnitskiy@gmail.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: "Eric W. Biederman" <ebiederm@xmission.com>
    Cc: stable@vger.kernel.org
    Tested-by: 周琰杰 (Zhou Yanjie) <zhouyanjie@wanyeetech.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23cfde113b16193fa20a67e2cbe464e6e7e9f5fc
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Thu Apr 1 13:54:40 2021 -0400

    tracing: Fix stack trace event size
    
    commit 9deb193af69d3fd6dd8e47f292b67c805a787010 upstream.
    
    Commit cbc3b92ce037 fixed an issue to modify the macros of the stack trace
    event so that user space could parse it properly. Originally the stack
    trace format to user space showed that the called stack was a dynamic
    array. But it is not actually a dynamic array, in the way that other
    dynamic event arrays worked, and this broke user space parsing for it. The
    update was to make the array look to have 8 entries in it. Helper
    functions were added to make it parse it correctly, as the stack was
    dynamic, but was determined by the size of the event stored.
    
    Although this fixed user space on how it read the event, it changed the
    internal structure used for the stack trace event. It changed the array
    size from [0] to [8] (added 8 entries). This increased the size of the
    stack trace event by 8 words. The size reserved on the ring buffer was the
    size of the stack trace event plus the number of stack entries found in
    the stack trace. That commit caused the amount to be 8 more than what was
    needed because it did not expect the caller field to have any size. This
    produced 8 entries of garbage (and reading random data) from the stack
    trace event:
    
              <idle>-0       [002] d... 1976396.837549: <stack trace>
     => trace_event_raw_event_sched_switch
     => __traceiter_sched_switch
     => __schedule
     => schedule_idle
     => do_idle
     => cpu_startup_entry
     => secondary_startup_64_no_verify
     => 0xc8c5e150ffff93de
     => 0xffff93de
     => 0
     => 0
     => 0xc8c5e17800000000
     => 0x1f30affff93de
     => 0x00000004
     => 0x200000000
    
    Instead, subtract the size of the caller field from the size of the event
    to make sure that only the amount needed to store the stack trace is
    reserved.
    
    Link: https://lore.kernel.org/lkml/your-ad-here.call-01617191565-ext-9692@work.hours/
    
    Cc: stable@vger.kernel.org
    Fixes: cbc3b92ce037 ("tracing: Set kernel_stack's caller size properly")
    Reported-by: Vasily Gorbik <gor@linux.ibm.com>
    Tested-by: Vasily Gorbik <gor@linux.ibm.com>
    Acked-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b27245e4c6cd5afb00dc4b759971bc181bd5036c
Author: Hui Wang <hui.wang@canonical.com>
Date:   Sat Mar 20 17:15:42 2021 +0800

    ALSA: hda/realtek: call alc_update_headset_mode() in hp_automute_hook
    
    commit e54f30befa7990b897189b44a56c1138c6bfdbb5 upstream.
    
    We found the alc_update_headset_mode() is not called on some machines
    when unplugging the headset, as a result, the mode of the
    ALC_HEADSET_MODE_UNPLUGGED can't be set, then the current_headset_type
    is not cleared, if users plug a differnt type of headset next time,
    the determine_headset_type() will not be called and the audio jack is
    set to the headset type of previous time.
    
    On the Dell machines which connect the dmic to the PCH, if we open
    the gnome-sound-setting and unplug the headset, this issue will
    happen. Those machines disable the auto-mute by ucm and has no
    internal mic in the input source, so the update_headset_mode() will
    not be called by cap_sync_hook or automute_hook when unplugging, and
    because the gnome-sound-setting is opened, the codec will not enter
    the runtime_suspend state, so the update_headset_mode() will not be
    called by alc_resume when unplugging. In this case the
    hp_automute_hook is called when unplugging, so add
    update_headset_mode() calling to this function.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Link: https://lore.kernel.org/r/20210320091542.6748-2-hui.wang@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d734f6439f415eb337e66b73050b90bb7d49392f
Author: Hui Wang <hui.wang@canonical.com>
Date:   Sat Mar 20 17:15:41 2021 +0800

    ALSA: hda/realtek: fix a determine_headset_type issue for a Dell AIO
    
    commit febf22565549ea7111e7d45e8f2d64373cc66b11 upstream.
    
    We found a recording issue on a Dell AIO, users plug a headset-mic and
    select headset-mic from UI, but can't record any sound from
    headset-mic. The root cause is the determine_headset_type() returns a
    wrong type, e.g. users plug a ctia type headset, but that function
    returns omtp type.
    
    On this machine, the internal mic is not connected to the codec, the
    "Input Source" is headset mic by default. And when users plug a
    headset, the determine_headset_type() will be called immediately, the
    codec on this AIO is alc274, the delay time for this codec in the
    determine_headset_type() is only 80ms, the delay is too short to
    correctly determine the headset type, the fail rate is nearly 99% when
    users plug the headset with the normal speed.
    
    Other codecs set several hundred ms delay time, so here I change the
    delay time to 850ms for alc2x4 series, after this change, the fail
    rate is zero unless users plug the headset slowly on purpose.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Link: https://lore.kernel.org/r/20210320091542.6748-1-hui.wang@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c11f2d2d6d9ff31ccc7878875bd070eed0951967
Author: Ikjoon Jang <ikjn@chromium.org>
Date:   Wed Mar 24 18:51:52 2021 +0800

    ALSA: usb-audio: Apply sample rate quirk to Logitech Connect
    
    commit 625bd5a616ceda4840cd28f82e957c8ced394b6a upstream.
    
    Logitech ConferenceCam Connect is a compound USB device with UVC and
    UAC. Not 100% reproducible but sometimes it keeps responding STALL to
    every control transfer once it receives get_freq request.
    
    This patch adds 046d:0x084c to a snd_usb_get_sample_rate_quirk list.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=203419
    Signed-off-by: Ikjoon Jang <ikjn@chromium.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210324105153.2322881-1-ikjn@chromium.org
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d60b79271910380fa42e4fb6316d6b47ce46b4f0
Author: Jesper Dangaard Brouer <brouer@redhat.com>
Date:   Tue Feb 9 14:38:09 2021 +0100

    bpf: Remove MTU check in __bpf_skb_max_len
    
    commit 6306c1189e77a513bf02720450bb43bd4ba5d8ae upstream.
    
    Multiple BPF-helpers that can manipulate/increase the size of the SKB uses
    __bpf_skb_max_len() as the max-length. This function limit size against
    the current net_device MTU (skb->dev->mtu).
    
    When a BPF-prog grow the packet size, then it should not be limited to the
    MTU. The MTU is a transmit limitation, and software receiving this packet
    should be allowed to increase the size. Further more, current MTU check in
    __bpf_skb_max_len uses the MTU from ingress/current net_device, which in
    case of redirects uses the wrong net_device.
    
    This patch keeps a sanity max limit of SKB_MAX_ALLOC (16KiB). The real limit
    is elsewhere in the system. Jesper's testing[1] showed it was not possible
    to exceed 8KiB when expanding the SKB size via BPF-helper. The limiting
    factor is the define KMALLOC_MAX_CACHE_SIZE which is 8192 for
    SLUB-allocator (CONFIG_SLUB) in-case PAGE_SIZE is 4096. This define is
    in-effect due to this being called from softirq context see code
    __gfp_pfmemalloc_flags() and __do_kmalloc_node(). Jakub's testing showed
    that frames above 16KiB can cause NICs to reset (but not crash). Keep this
    sanity limit at this level as memory layer can differ based on kernel
    config.
    
    [1] https://github.com/xdp-project/bpf-examples/tree/master/MTU-tests
    
    Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/bpf/161287788936.790810.2937823995775097177.stgit@firesoul
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18d124f93040489c2cc4d7e0ae2d9b563249c55d
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Mon Feb 15 14:17:56 2021 -0500

    net: wan/lmc: unregister device when no matching device is found
    
    [ Upstream commit 62e69bc419772638369eff8ff81340bde8aceb61 ]
    
    lmc set sc->lmc_media pointer when there is a matching device.
    However, when no matching device is found, this pointer is NULL
    and the following dereference will result in a null-ptr-deref.
    
    To fix this issue, unregister the hdlc device and return an error.
    
    [    4.569359] BUG: KASAN: null-ptr-deref in lmc_init_one.cold+0x2b6/0x55d [lmc]
    [    4.569748] Read of size 8 at addr 0000000000000008 by task modprobe/95
    [    4.570102]
    [    4.570187] CPU: 0 PID: 95 Comm: modprobe Not tainted 5.11.0-rc7 #94
    [    4.570527] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-48-gd9c812dda519-preb4
    [    4.571125] Call Trace:
    [    4.571261]  dump_stack+0x7d/0xa3
    [    4.571445]  kasan_report.cold+0x10c/0x10e
    [    4.571667]  ? lmc_init_one.cold+0x2b6/0x55d [lmc]
    [    4.571932]  lmc_init_one.cold+0x2b6/0x55d [lmc]
    [    4.572186]  ? lmc_mii_readreg+0xa0/0xa0 [lmc]
    [    4.572432]  local_pci_probe+0x6f/0xb0
    [    4.572639]  pci_device_probe+0x171/0x240
    [    4.572857]  ? pci_device_remove+0xe0/0xe0
    [    4.573080]  ? kernfs_create_link+0xb6/0x110
    [    4.573315]  ? sysfs_do_create_link_sd.isra.0+0x76/0xe0
    [    4.573598]  really_probe+0x161/0x420
    [    4.573799]  driver_probe_device+0x6d/0xd0
    [    4.574022]  device_driver_attach+0x82/0x90
    [    4.574249]  ? device_driver_attach+0x90/0x90
    [    4.574485]  __driver_attach+0x60/0x100
    [    4.574694]  ? device_driver_attach+0x90/0x90
    [    4.574931]  bus_for_each_dev+0xe1/0x140
    [    4.575146]  ? subsys_dev_iter_exit+0x10/0x10
    [    4.575387]  ? klist_node_init+0x61/0x80
    [    4.575602]  bus_add_driver+0x254/0x2a0
    [    4.575812]  driver_register+0xd3/0x150
    [    4.576021]  ? 0xffffffffc0018000
    [    4.576202]  do_one_initcall+0x84/0x250
    [    4.576411]  ? trace_event_raw_event_initcall_finish+0x150/0x150
    [    4.576733]  ? unpoison_range+0xf/0x30
    [    4.576938]  ? ____kasan_kmalloc.constprop.0+0x84/0xa0
    [    4.577219]  ? unpoison_range+0xf/0x30
    [    4.577423]  ? unpoison_range+0xf/0x30
    [    4.577628]  do_init_module+0xf8/0x350
    [    4.577833]  load_module+0x3fe6/0x4340
    [    4.578038]  ? vm_unmap_ram+0x1d0/0x1d0
    [    4.578247]  ? ____kasan_kmalloc.constprop.0+0x84/0xa0
    [    4.578526]  ? module_frob_arch_sections+0x20/0x20
    [    4.578787]  ? __do_sys_finit_module+0x108/0x170
    [    4.579037]  __do_sys_finit_module+0x108/0x170
    [    4.579278]  ? __ia32_sys_init_module+0x40/0x40
    [    4.579523]  ? file_open_root+0x200/0x200
    [    4.579742]  ? do_sys_open+0x85/0xe0
    [    4.579938]  ? filp_open+0x50/0x50
    [    4.580125]  ? exit_to_user_mode_prepare+0xfc/0x130
    [    4.580390]  do_syscall_64+0x33/0x40
    [    4.580586]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [    4.580859] RIP: 0033:0x7f1a724c3cf7
    [    4.581054] Code: 48 89 57 30 48 8b 04 24 48 89 47 38 e9 1d a0 02 00 48 89 f8 48 89 f7 48 89 d6 48 891
    [    4.582043] RSP: 002b:00007fff44941c68 EFLAGS: 00000246 ORIG_RAX: 0000000000000139
    [    4.582447] RAX: ffffffffffffffda RBX: 00000000012ada70 RCX: 00007f1a724c3cf7
    [    4.582827] RDX: 0000000000000000 RSI: 00000000012ac9e0 RDI: 0000000000000003
    [    4.583207] RBP: 0000000000000003 R08: 0000000000000000 R09: 0000000000000001
    [    4.583587] R10: 00007f1a72527300 R11: 0000000000000246 R12: 00000000012ac9e0
    [    4.583968] R13: 0000000000000000 R14: 00000000012acc90 R15: 0000000000000001
    [    4.584349] ==================================================================
    
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit efd8b12850567914f99c666fc84ff6af577cd98c
Author: Doug Brown <doug@schmorgal.com>
Date:   Thu Feb 11 21:27:54 2021 -0800

    appletalk: Fix skb allocation size in loopback case
    
    [ Upstream commit 39935dccb21c60f9bbf1bb72d22ab6fd14ae7705 ]
    
    If a DDP broadcast packet is sent out to a non-gateway target, it is
    also looped back. There is a potential for the loopback device to have a
    longer hardware header length than the original target route's device,
    which can result in the skb not being created with enough room for the
    loopback device's hardware header. This patch fixes the issue by
    determining that a loopback will be necessary prior to allocating the
    skb, and if so, ensuring the skb has enough room.
    
    This was discovered while testing a new driver that creates a LocalTalk
    network interface (LTALK_HLEN = 1). It caused an skb_under_panic.
    
    Signed-off-by: Doug Brown <doug@schmorgal.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53f8d960a96a85b979d7449a68f8baed5e9b03d1
Author: Nathan Rossi <nathan.rossi@digi.com>
Date:   Thu Feb 11 05:17:57 2021 +0000

    net: ethernet: aquantia: Handle error cleanup of start on open
    
    [ Upstream commit 8a28af7a3e85ddf358f8c41e401a33002f7a9587 ]
    
    The aq_nic_start function can fail in a variety of cases which leaves
    the device in broken state.
    
    An example case where the start function fails is the
    request_threaded_irq which can be interrupted, resulting in a EINTR
    result. This can be manually triggered by bringing the link up (e.g. ip
    link set up) and triggering a SIGINT on the initiating process (e.g.
    Ctrl+C). This would put the device into a half configured state.
    Subsequently bringing the link up again would cause the napi_enable to
    BUG.
    
    In order to correctly clean up the failed attempt to start a device call
    aq_nic_stop.
    
    Signed-off-by: Nathan Rossi <nathan.rossi@digi.com>
    Reviewed-by: Igor Russkikh <irusskikh@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bba946c0de6ae96a3704701f40c7dbc042337c66
Author: Luca Pesce <luca.pesce@vimar.com>
Date:   Thu Dec 24 11:51:59 2020 +0100

    brcmfmac: clear EAP/association status bits on linkdown events
    
    [ Upstream commit e862a3e4088070de352fdafe9bd9e3ae0a95a33c ]
    
    This ensure that previous association attempts do not leave stale statuses
    on subsequent attempts.
    
    This fixes the WARN_ON(!cr->bss)) from __cfg80211_connect_result() when
    connecting to an AP after a previous connection failure (e.g. where EAP fails
    due to incorrect psk but association succeeded). In some scenarios, indeed,
    brcmf_is_linkup() was reporting a link up event too early due to stale
    BRCMF_VIF_STATUS_ASSOC_SUCCESS bit, thus reporting to cfg80211 a connection
    result with a zeroed bssid (vif->profile.bssid is still empty), causing the
    WARN_ON due to the call to cfg80211_get_bss() with the empty bssid.
    
    Signed-off-by: Luca Pesce <luca.pesce@vimar.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1608807119-21785-1-git-send-email-luca.pesce@vimar.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8cf5282f0a847bad54bcb3f9017497efce7aade7
Author: zhangyi (F) <yi.zhang@huawei.com>
Date:   Wed Mar 3 21:17:03 2021 +0800

    ext4: do not iput inode under running transaction in ext4_rename()
    
    [ Upstream commit 5dccdc5a1916d4266edd251f20bbbb113a5c495f ]
    
    In ext4_rename(), when RENAME_WHITEOUT failed to add new entry into
    directory, it ends up dropping new created whiteout inode under the
    running transaction. After commit <9b88f9fb0d2> ("ext4: Do not iput inode
    under running transaction"), we follow the assumptions that evict() does
    not get called from a transaction context but in ext4_rename() it breaks
    this suggestion. Although it's not a real problem, better to obey it, so
    this patch add inode to orphan list and stop transaction before final
    iput().
    
    Signed-off-by: zhangyi (F) <yi.zhang@huawei.com>
    Link: https://lore.kernel.org/r/20210303131703.330415-2-yi.zhang@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a15d1532ed3c6d505e6f48703f20386840af15d7
Author: Sameer Pujar <spujar@nvidia.com>
Date:   Mon Mar 15 23:01:32 2021 +0530

    ASoC: rt5659: Update MCLK rate in set_sysclk()
    
    [ Upstream commit dbf54a9534350d6aebbb34f5c1c606b81a4f35dd ]
    
    Simple-card/audio-graph-card drivers do not handle MCLK clock when it
    is specified in the codec device node. The expectation here is that,
    the codec should actually own up the MCLK clock and do necessary setup
    in the driver.
    
    Suggested-by: Mark Brown <broonie@kernel.org>
    Suggested-by: Michael Walle <michael@walle.cc>
    Signed-off-by: Sameer Pujar <spujar@nvidia.com>
    Link: https://lore.kernel.org/r/1615829492-8972-3-git-send-email-spujar@nvidia.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d7dae6d39e733b67f8672f245a75ad835b11d816
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Mon Mar 15 15:58:12 2021 -0400

    staging: comedi: cb_pcidas64: fix request_irq() warn
    
    [ Upstream commit d2d106fe3badfc3bf0dd3899d1c3f210c7203eab ]
    
    request_irq() wont accept a name which contains slash so we need to
    repalce it with something else -- otherwise it will trigger a warning
    and the entry in /proc/irq/ will not be created
    since the .name might be used by userspace and we don't want to break
    userspace, so we are changing the parameters passed to request_irq()
    
    [    1.565966] name 'pci-das6402/16'
    [    1.566149] WARNING: CPU: 0 PID: 184 at fs/proc/generic.c:180 __xlate_proc_name+0x93/0xb0
    [    1.568923] RIP: 0010:__xlate_proc_name+0x93/0xb0
    [    1.574200] Call Trace:
    [    1.574722]  proc_mkdir+0x18/0x20
    [    1.576629]  request_threaded_irq+0xfe/0x160
    [    1.576859]  auto_attach+0x60a/0xc40 [cb_pcidas64]
    
    Suggested-by: Ian Abbott <abbotti@mev.co.uk>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Link: https://lore.kernel.org/r/20210315195814.4692-1-ztong0001@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4fc5b3dd6c153f9c799963799b3071c47bc52108
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Mon Mar 15 15:59:14 2021 -0400

    staging: comedi: cb_pcidas: fix request_irq() warn
    
    [ Upstream commit 2e5848a3d86f03024ae096478bdb892ab3d79131 ]
    
    request_irq() wont accept a name which contains slash so we need to
    repalce it with something else -- otherwise it will trigger a warning
    and the entry in /proc/irq/ will not be created
    since the .name might be used by userspace and we don't want to break
    userspace, so we are changing the parameters passed to request_irq()
    
    [    1.630764] name 'pci-das1602/16'
    [    1.630950] WARNING: CPU: 0 PID: 181 at fs/proc/generic.c:180 __xlate_proc_name+0x93/0xb0
    [    1.634009] RIP: 0010:__xlate_proc_name+0x93/0xb0
    [    1.639441] Call Trace:
    [    1.639976]  proc_mkdir+0x18/0x20
    [    1.641946]  request_threaded_irq+0xfe/0x160
    [    1.642186]  cb_pcidas_auto_attach+0xf4/0x610 [cb_pcidas]
    
    Suggested-by: Ian Abbott <abbotti@mev.co.uk>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Link: https://lore.kernel.org/r/20210315195914.4801-1-ztong0001@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 446cc97d0abea443d592c518630ffcfedb52f7b1
Author: Alexey Dobriyan <adobriyan@gmail.com>
Date:   Sun Mar 14 18:32:46 2021 +0300

    scsi: qla2xxx: Fix broken #endif placement
    
    [ Upstream commit 5999b9e5b1f8a2f5417b755130919b3ac96f5550 ]
    
    Only half of the file is under include guard because terminating #endif
    is placed too early.
    
    Link: https://lore.kernel.org/r/YE4snvoW1SuwcXAn@localhost.localdomain
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9cb3546256196c490a6fb9e40348b65a60a7a7da
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Wed Mar 10 22:46:36 2021 -0800

    scsi: st: Fix a use after free in st_open()
    
    [ Upstream commit c8c165dea4c8f5ad67b1240861e4f6c5395fa4ac ]
    
    In st_open(), if STp->in_use is true, STp will be freed by
    scsi_tape_put(). However, STp is still used by DEBC_printk() after. It is
    better to DEBC_printk() before scsi_tape_put().
    
    Link: https://lore.kernel.org/r/20210311064636.10522-1-lyl2019@mail.ustc.edu.cn
    Acked-by: Kai Mäkisara <kai.makisara@kolumbus.fi>
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 61de1f7ec6f9b8e3c8e5610b16954b35409f7662
Author: Laurent Vivier <lvivier@redhat.com>
Date:   Fri Mar 12 15:09:13 2021 +0100

    vhost: Fix vhost_vq_reset()
    
    [ Upstream commit beb691e69f4dec7bfe8b81b509848acfd1f0dbf9 ]
    
    vhost_reset_is_le() is vhost_init_is_le(), and in the case of
    cross-endian legacy, vhost_init_is_le() depends on vq->user_be.
    
    vq->user_be is set by vhost_disable_cross_endian().
    
    But in vhost_vq_reset(), we have:
    
        vhost_reset_is_le(vq);
        vhost_disable_cross_endian(vq);
    
    And so user_be is used before being set.
    
    To fix that, reverse the lines order as there is no other dependency
    between them.
    
    Signed-off-by: Laurent Vivier <lvivier@redhat.com>
    Link: https://lore.kernel.org/r/20210312140913.788592-1-lvivier@redhat.com
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 912ad45f1d2f012e26cc997506f8637ea347050a
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Wed Mar 10 12:10:34 2021 +0000

    powerpc: Force inlining of cpu_has_feature() to avoid build failure
    
    [ Upstream commit eed5fae00593ab9d261a0c1ffc1bdb786a87a55a ]
    
    The code relies on constant folding of cpu_has_feature() based
    on possible and always true values as defined per
    CPU_FTRS_ALWAYS and CPU_FTRS_POSSIBLE.
    
    Build failure is encountered with for instance
    book3e_all_defconfig on kisskb in the AMDGPU driver which uses
    cpu_has_feature(CPU_FTR_VSX_COMP) to decide whether calling
    kernel_enable_vsx() or not.
    
    The failure is due to cpu_has_feature() not being inlined with
    that configuration with gcc 4.9.
    
    In the same way as commit acdad8fb4a15 ("powerpc: Force inlining of
    mmu_has_feature to fix build failure"), for inlining of
    cpu_has_feature().
    
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/b231dfa040ce4cc37f702f5c3a595fdeabfe0462.1615378209.git.christophe.leroy@csgroup.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a63823f858fa849075b4c30325dfb39b84d0c832
Author: Lucas Tanure <tanureal@opensource.cirrus.com>
Date:   Fri Mar 5 17:34:32 2021 +0000

    ASoC: cs42l42: Always wait at least 3ms after reset
    
    [ Upstream commit 19325cfea04446bc79b36bffd4978af15f46a00e ]
    
    This delay is part of the power-up sequence defined in the datasheet.
    A runtime_resume is a power-up so must also include the delay.
    
    Signed-off-by: Lucas Tanure <tanureal@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20210305173442.195740-6-tanureal@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ea6fd6b2557648cae7ed6e823201034728114b8
Author: Lucas Tanure <tanureal@opensource.cirrus.com>
Date:   Fri Mar 5 17:34:30 2021 +0000

    ASoC: cs42l42: Fix mixer volume control
    
    [ Upstream commit 72d904763ae6a8576e7ad034f9da4f0e3c44bf24 ]
    
    The minimum value is 0x3f (-63dB), which also is mute
    
    Signed-off-by: Lucas Tanure <tanureal@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20210305173442.195740-4-tanureal@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 74c2df5c35e26c3e547e6c46cc0eb48d10f0ed60
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Feb 28 17:04:41 2021 +0100

    ASoC: es8316: Simplify adc_pga_gain_tlv table
    
    [ Upstream commit bb18c678754ce1514100fb4c0bf6113b5af36c48 ]
    
    Most steps in this table are steps of 3dB (300 centi-dB), so we can
    simplify the table.
    
    This not only reduces the amount of space it takes inside the kernel,
    this also makes alsa-lib's mixer code actually accept the table, where
    as before this change alsa-lib saw the "ADC PGA Gain" control as a
    control without a dB scale.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20210228160441.241110-1-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 466d48af59cbba31dc7c2cd6c33a01922a62fbd2
Author: Benjamin Rood <benjaminjrood@gmail.com>
Date:   Fri Feb 19 13:33:08 2021 -0500

    ASoC: sgtl5000: set DAP_AVC_CTRL register to correct default value on probe
    
    [ Upstream commit f86f58e3594fb0ab1993d833d3b9a2496f3c928c ]
    
    According to the SGTL5000 datasheet [1], the DAP_AVC_CTRL register has
    the following bit field definitions:
    
    | BITS  | FIELD       | RW | RESET | DEFINITION                        |
    | 15    | RSVD        | RO | 0x0   | Reserved                          |
    | 14    | RSVD        | RW | 0x1   | Reserved                          |
    | 13:12 | MAX_GAIN    | RW | 0x1   | Max Gain of AVC in expander mode  |
    | 11:10 | RSVD        | RO | 0x0   | Reserved                          |
    | 9:8   | LBI_RESP    | RW | 0x1   | Integrator Response               |
    | 7:6   | RSVD        | RO | 0x0   | Reserved                          |
    | 5     | HARD_LMT_EN | RW | 0x0   | Enable hard limiter mode          |
    | 4:1   | RSVD        | RO | 0x0   | Reserved                          |
    | 0     | EN          | RW | 0x0   | Enable/Disable AVC                |
    
    The original default value written to the DAP_AVC_CTRL register during
    sgtl5000_i2c_probe() was 0x0510.  This would incorrectly write values to
    bits 4 and 10, which are defined as RESERVED.  It would also not set
    bits 12 and 14 to their correct RESET values of 0x1, and instead set
    them to 0x0.  While the DAP_AVC module is effectively disabled because
    the EN bit is 0, this default value is still writing invalid values to
    registers that are marked as read-only and RESERVED as well as not
    setting bits 12 and 14 to their correct default values as defined by the
    datasheet.
    
    The correct value that should be written to the DAP_AVC_CTRL register is
    0x5100, which configures the register bits to the default values defined
    by the datasheet, and prevents any writes to bits defined as
    'read-only'.  Generally speaking, it is best practice to NOT attempt to
    write values to registers/bits defined as RESERVED, as it generally
    produces unwanted/undefined behavior, or errors.
    
    Also, all credit for this patch should go to my colleague Dan MacDonald
    <dmacdonald@curbellmedical.com> for finding this error in the first
    place.
    
    [1] https://www.nxp.com/docs/en/data-sheet/SGTL5000.pdf
    
    Signed-off-by: Benjamin Rood <benjaminjrood@gmail.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Link: https://lore.kernel.org/r/20210219183308.GA2117@ubuntu-dev
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 669715f7532b87e6c7959a30a28b7c6fe0a0da71
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Feb 26 15:38:14 2021 +0100

    ASoC: rt5651: Fix dac- and adc- vol-tlv values being off by a factor of 10
    
    [ Upstream commit eee51df776bd6cac10a76b2779a9fdee3f622b2b ]
    
    The adc_vol_tlv volume-control has a range from -17.625 dB to +30 dB,
    not -176.25 dB to + 300 dB. This wrong scale is esp. a problem in userspace
    apps which translate the dB scale to a linear scale. With the logarithmic
    dB scale being of by a factor of 10 we loose all precision in the lower
    area of the range when apps translate things to a linear scale.
    
    E.g. the 0 dB default, which corresponds with a value of 47 of the
    0 - 127 range for the control, would be shown as 0/100 in alsa-mixer.
    
    Since the centi-dB values used in the TLV struct cannot represent the
    0.375 dB step size used by these controls, change the TLV definition
    for them to specify a min and max value instead of min + stepsize.
    
    Note this mirrors commit 3f31f7d9b540 ("ASoC: rt5670: Fix dac- and adc-
    vol-tlv values being off by a factor of 10") which made the exact same
    change to the rt5670 codec driver.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20210226143817.84287-3-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 305b95b4ec28aedffd6774d64d228398ef859436
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Feb 26 15:38:13 2021 +0100

    ASoC: rt5640: Fix dac- and adc- vol-tlv values being off by a factor of 10
    
    [ Upstream commit cfa26ed1f9f885c2fd8f53ca492989d1e16d0199 ]
    
    The adc_vol_tlv volume-control has a range from -17.625 dB to +30 dB,
    not -176.25 dB to + 300 dB. This wrong scale is esp. a problem in userspace
    apps which translate the dB scale to a linear scale. With the logarithmic
    dB scale being of by a factor of 10 we loose all precision in the lower
    area of the range when apps translate things to a linear scale.
    
    E.g. the 0 dB default, which corresponds with a value of 47 of the
    0 - 127 range for the control, would be shown as 0/100 in alsa-mixer.
    
    Since the centi-dB values used in the TLV struct cannot represent the
    0.375 dB step size used by these controls, change the TLV definition
    for them to specify a min and max value instead of min + stepsize.
    
    Note this mirrors commit 3f31f7d9b540 ("ASoC: rt5670: Fix dac- and adc-
    vol-tlv values being off by a factor of 10") which made the exact same
    change to the rt5670 codec driver.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20210226143817.84287-2-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f3b72084f62877c5dba9644e8bdc60a78709915
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Tue Mar 2 10:48:38 2021 -0500

    rpc: fix NULL dereference on kmalloc failure
    
    [ Upstream commit 0ddc942394013f08992fc379ca04cffacbbe3dae ]
    
    I think this is unlikely but possible:
    
    svc_authenticate sets rq_authop and calls svcauth_gss_accept.  The
    kmalloc(sizeof(*svcdata), GFP_KERNEL) fails, leaving rq_auth_data NULL,
    and returning SVC_DENIED.
    
    This causes svc_process_common to go to err_bad_auth, and eventually
    call svc_authorise.  That calls ->release == svcauth_gss_release, which
    tries to dereference rq_auth_data.
    
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Link: https://lore.kernel.org/linux-nfs/3F1B347F-B809-478F-A1E9-0BE98E22B0F0@oracle.com/T/#t
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8006ba58ae5258607d6d8901c62b8b892f308aaa
Author: Zhaolong Zhang <zhangzl2013@126.com>
Date:   Tue Mar 2 17:42:31 2021 +0800

    ext4: fix bh ref count on error paths
    
    [ Upstream commit c915fb80eaa6194fa9bd0a4487705cd5b0dda2f1 ]
    
    __ext4_journalled_writepage should drop bhs' ref count on error paths
    
    Signed-off-by: Zhaolong Zhang <zhangzl2013@126.com>
    Link: https://lore.kernel.org/r/1614678151-70481-1-git-send-email-zhangzl2013@126.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98c9eb139fb7933f9e1297c433a362f608019ff3
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Mar 17 09:55:15 2021 -0700

    ipv6: weaken the v4mapped source check
    
    [ Upstream commit dcc32f4f183ab8479041b23a1525d48233df1d43 ]
    
    This reverts commit 6af1799aaf3f1bc8defedddfa00df3192445bbf3.
    
    Commit 6af1799aaf3f ("ipv6: drop incoming packets having a v4mapped
    source address") introduced an input check against v4mapped addresses.
    Use of such addresses on the wire is indeed questionable and not
    allowed on public Internet. As the commit pointed out
    
      https://tools.ietf.org/html/draft-itojun-v6ops-v4mapped-harmful-02
    
    lists potential issues.
    
    Unfortunately there are applications which use v4mapped addresses,
    and breaking them is a clear regression. For example v4mapped
    addresses (or any semi-valid addresses, really) may be used
    for uni-direction event streams or packet export.
    
    Since the issue which sparked the addition of the check was with
    TCP and request_socks in particular push the check down to TCPv6
    and DCCP. This restores the ability to receive UDPv6 packets with
    v4mapped address as the source.
    
    Keep using the IPSTATS_MIB_INHDRERRORS statistic to minimize the
    user-visible changes.
    
    Fixes: 6af1799aaf3f ("ipv6: drop incoming packets having a v4mapped source address")
    Reported-by: Sunyi Shao <sunyishao@fb.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Acked-by: Mat Martineau <mathew.j.martineau@linux.intel.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 24e21c05394c1d34f3c4e1cece07adeadeb4c485
Author: David Brazdil <dbrazdil@google.com>
Date:   Mon Mar 29 18:24:43 2021 +0000

    selinux: vsock: Set SID for socket returned by accept()
    
    [ Upstream commit 1f935e8e72ec28dddb2dc0650b3b6626a293d94b ]
    
    For AF_VSOCK, accept() currently returns sockets that are unlabelled.
    Other socket families derive the child's SID from the SID of the parent
    and the SID of the incoming packet. This is typically done as the
    connected socket is placed in the queue that accept() removes from.
    
    Reuse the existing 'security_sk_clone' hook to copy the SID from the
    parent (server) socket to the child. There is no packet SID in this
    case.
    
    Fixes: d021c344051a ("VSOCK: Introduce VM Sockets")
    Signed-off-by: David Brazdil <dbrazdil@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fbe5f2045bc14fe9df133d64d88c5bcdbc98e675
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Mar 30 14:40:13 2021 +0200

    Linux 4.14.228
    
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Link: https://lore.kernel.org/r/20210329075608.898173317@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 107bfed96ff765158ce066d66eb7a197f44e1c55
Author: Jan Beulich <jbeulich@suse.com>
Date:   Fri Mar 26 16:28:57 2021 +0100

    xen-blkback: don't leak persistent grants from xen_blkbk_map()
    
    commit a846738f8c3788d846ed1f587270d2f2e3d32432 upstream.
    
    The fix for XSA-365 zapped too many of the ->persistent_gnt[] entries.
    Ones successfully obtained should not be overwritten, but instead left
    for xen_blkbk_unmap_prepare() to pick up and put.
    
    This is XSA-371.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Wei Liu <wl@xen.org>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3acc800e32c92718875e8f1996562df9ad2cd630
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Sat Mar 20 20:21:54 2021 +0100

    can: peak_usb: Revert "can: peak_usb: add forgotten supported devices"
    
    commit 5d7047ed6b7214fbabc16d8712a822e256b1aa44 upstream.
    
    In commit 6417f03132a6 ("module: remove never implemented
    MODULE_SUPPORTED_DEVICE") the MODULE_SUPPORTED_DEVICE macro was
    removed from the kerne entirely. Shortly before this patch was applied
    mainline the commit 59ec7b89ed3e ("can: peak_usb: add forgotten
    supported devices") was added to net/master. As this would result in a
    merge conflict, let's revert this patch.
    
    Fixes: 59ec7b89ed3e ("can: peak_usb: add forgotten supported devices")
    Link: https://lore.kernel.org/r/20210320192649.341832-1-mkl@pengutronix.de
    Suggested-by: Leon Romanovsky <leon@kernel.org>
    Cc: Stephane Grosjean <s.grosjean@peak-system.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63ee286a65a5679b25b80bc4cea0f868ed0b4277
Author: Jan Kara <jack@suse.cz>
Date:   Mon Feb 22 18:16:26 2021 +0100

    ext4: add reclaim checks to xattr code
    
    commit 163f0ec1df33cf468509ff38cbcbb5eb0d7fac60 upstream.
    
    Syzbot is reporting that ext4 can enter fs reclaim from kvmalloc() while
    the transaction is started like:
    
      fs_reclaim_acquire+0x117/0x150 mm/page_alloc.c:4340
      might_alloc include/linux/sched/mm.h:193 [inline]
      slab_pre_alloc_hook mm/slab.h:493 [inline]
      slab_alloc_node mm/slub.c:2817 [inline]
      __kmalloc_node+0x5f/0x430 mm/slub.c:4015
      kmalloc_node include/linux/slab.h:575 [inline]
      kvmalloc_node+0x61/0xf0 mm/util.c:587
      kvmalloc include/linux/mm.h:781 [inline]
      ext4_xattr_inode_cache_find fs/ext4/xattr.c:1465 [inline]
      ext4_xattr_inode_lookup_create fs/ext4/xattr.c:1508 [inline]
      ext4_xattr_set_entry+0x1ce6/0x3780 fs/ext4/xattr.c:1649
      ext4_xattr_ibody_set+0x78/0x2b0 fs/ext4/xattr.c:2224
      ext4_xattr_set_handle+0x8f4/0x13e0 fs/ext4/xattr.c:2380
      ext4_xattr_set+0x13a/0x340 fs/ext4/xattr.c:2493
    
    This should be impossible since transaction start sets PF_MEMALLOC_NOFS.
    Add some assertions to the code to catch if something isn't working as
    expected early.
    
    Link: https://lore.kernel.org/linux-ext4/000000000000563a0205bafb7970@google.com/
    Signed-off-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20210222171626.21884-1-jack@suse.cz
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b70a226e063a1adeb19fdc812ec41a53dfdb1efd
Author: Markus Theil <markus.theil@tu-ilmenau.de>
Date:   Sat Feb 13 14:36:53 2021 +0100

    mac80211: fix double free in ibss_leave
    
    commit 3bd801b14e0c5d29eeddc7336558beb3344efaa3 upstream.
    
    Clear beacon ie pointer and ie length after free
    in order to prevent double free.
    
    ==================================================================
    BUG: KASAN: double-free or invalid-free \
    in ieee80211_ibss_leave+0x83/0xe0 net/mac80211/ibss.c:1876
    
    CPU: 0 PID: 8472 Comm: syz-executor100 Not tainted 5.11.0-rc6-syzkaller #0
    Call Trace:
     __dump_stack lib/dump_stack.c:79 [inline]
     dump_stack+0x107/0x163 lib/dump_stack.c:120
     print_address_description.constprop.0.cold+0x5b/0x2c6 mm/kasan/report.c:230
     kasan_report_invalid_free+0x51/0x80 mm/kasan/report.c:355
     ____kasan_slab_free+0xcc/0xe0 mm/kasan/common.c:341
     kasan_slab_free include/linux/kasan.h:192 [inline]
     __cache_free mm/slab.c:3424 [inline]
     kfree+0xed/0x270 mm/slab.c:3760
     ieee80211_ibss_leave+0x83/0xe0 net/mac80211/ibss.c:1876
     rdev_leave_ibss net/wireless/rdev-ops.h:545 [inline]
     __cfg80211_leave_ibss+0x19a/0x4c0 net/wireless/ibss.c:212
     __cfg80211_leave+0x327/0x430 net/wireless/core.c:1172
     cfg80211_leave net/wireless/core.c:1221 [inline]
     cfg80211_netdev_notifier_call+0x9e8/0x12c0 net/wireless/core.c:1335
     notifier_call_chain+0xb5/0x200 kernel/notifier.c:83
     call_netdevice_notifiers_info+0xb5/0x130 net/core/dev.c:2040
     call_netdevice_notifiers_extack net/core/dev.c:2052 [inline]
     call_netdevice_notifiers net/core/dev.c:2066 [inline]
     __dev_close_many+0xee/0x2e0 net/core/dev.c:1586
     __dev_close net/core/dev.c:1624 [inline]
     __dev_change_flags+0x2cb/0x730 net/core/dev.c:8476
     dev_change_flags+0x8a/0x160 net/core/dev.c:8549
     dev_ifsioc+0x210/0xa70 net/core/dev_ioctl.c:265
     dev_ioctl+0x1b1/0xc40 net/core/dev_ioctl.c:511
     sock_do_ioctl+0x148/0x2d0 net/socket.c:1060
     sock_ioctl+0x477/0x6a0 net/socket.c:1177
     vfs_ioctl fs/ioctl.c:48 [inline]
     __do_sys_ioctl fs/ioctl.c:753 [inline]
     __se_sys_ioctl fs/ioctl.c:739 [inline]
     __x64_sys_ioctl+0x193/0x200 fs/ioctl.c:739
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Reported-by: syzbot+93976391bf299d425f44@syzkaller.appspotmail.com
    Signed-off-by: Markus Theil <markus.theil@tu-ilmenau.de>
    Link: https://lore.kernel.org/r/20210213133653.367130-1-markus.theil@tu-ilmenau.de
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fabc2920a090c5584fa059dd4589e9f078292ceb
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Mar 12 08:59:48 2021 -0800

    net: qrtr: fix a kernel-infoleak in qrtr_recvmsg()
    
    commit 50535249f624d0072cd885bcdce4e4b6fb770160 upstream.
    
    struct sockaddr_qrtr has a 2-byte hole, and qrtr_recvmsg() currently
    does not clear it before copying kernel data to user space.
    
    It might be too late to name the hole since sockaddr_qrtr structure is uapi.
    
    BUG: KMSAN: kernel-infoleak in kmsan_copy_to_user+0x9c/0xb0 mm/kmsan/kmsan_hooks.c:249
    CPU: 0 PID: 29705 Comm: syz-executor.3 Not tainted 5.11.0-rc7-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:79 [inline]
     dump_stack+0x21c/0x280 lib/dump_stack.c:120
     kmsan_report+0xfb/0x1e0 mm/kmsan/kmsan_report.c:118
     kmsan_internal_check_memory+0x202/0x520 mm/kmsan/kmsan.c:402
     kmsan_copy_to_user+0x9c/0xb0 mm/kmsan/kmsan_hooks.c:249
     instrument_copy_to_user include/linux/instrumented.h:121 [inline]
     _copy_to_user+0x1ac/0x270 lib/usercopy.c:33
     copy_to_user include/linux/uaccess.h:209 [inline]
     move_addr_to_user+0x3a2/0x640 net/socket.c:237
     ____sys_recvmsg+0x696/0xd50 net/socket.c:2575
     ___sys_recvmsg net/socket.c:2610 [inline]
     do_recvmmsg+0xa97/0x22d0 net/socket.c:2710
     __sys_recvmmsg net/socket.c:2789 [inline]
     __do_sys_recvmmsg net/socket.c:2812 [inline]
     __se_sys_recvmmsg+0x24a/0x410 net/socket.c:2805
     __x64_sys_recvmmsg+0x62/0x80 net/socket.c:2805
     do_syscall_64+0x9f/0x140 arch/x86/entry/common.c:48
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    RIP: 0033:0x465f69
    Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48
    RSP: 002b:00007f43659d6188 EFLAGS: 00000246 ORIG_RAX: 000000000000012b
    RAX: ffffffffffffffda RBX: 000000000056bf60 RCX: 0000000000465f69
    RDX: 0000000000000008 RSI: 0000000020003e40 RDI: 0000000000000003
    RBP: 00000000004bfa8f R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000010060 R11: 0000000000000246 R12: 000000000056bf60
    R13: 0000000000a9fb1f R14: 00007f43659d6300 R15: 0000000000022000
    
    Local variable ----addr@____sys_recvmsg created at:
     ____sys_recvmsg+0x168/0xd50 net/socket.c:2550
     ____sys_recvmsg+0x168/0xd50 net/socket.c:2550
    
    Bytes 2-3 of 12 are uninitialized
    Memory access of size 12 starts at ffff88817c627b40
    Data copied to user address 0000000020000140
    
    Fixes: bdabad3e363d ("net: Add Qualcomm IPC router")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Courtney Cavin <courtney.cavin@sonymobile.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9f8b95b5a32522334a32a394b07a195090e0a71
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Mar 10 08:26:41 2021 -0800

    net: sched: validate stab values
    
    commit e323d865b36134e8c5c82c834df89109a5c60dab upstream.
    
    iproute2 package is well behaved, but malicious user space can
    provide illegal shift values and trigger UBSAN reports.
    
    Add stab parameter to red_check_params() to validate user input.
    
    syzbot reported:
    
    UBSAN: shift-out-of-bounds in ./include/net/red.h:312:18
    shift exponent 111 is too large for 64-bit type 'long unsigned int'
    CPU: 1 PID: 14662 Comm: syz-executor.3 Not tainted 5.12.0-rc2-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:79 [inline]
     dump_stack+0x141/0x1d7 lib/dump_stack.c:120
     ubsan_epilogue+0xb/0x5a lib/ubsan.c:148
     __ubsan_handle_shift_out_of_bounds.cold+0xb1/0x181 lib/ubsan.c:327
     red_calc_qavg_from_idle_time include/net/red.h:312 [inline]
     red_calc_qavg include/net/red.h:353 [inline]
     choke_enqueue.cold+0x18/0x3dd net/sched/sch_choke.c:221
     __dev_xmit_skb net/core/dev.c:3837 [inline]
     __dev_queue_xmit+0x1943/0x2e00 net/core/dev.c:4150
     neigh_hh_output include/net/neighbour.h:499 [inline]
     neigh_output include/net/neighbour.h:508 [inline]
     ip6_finish_output2+0x911/0x1700 net/ipv6/ip6_output.c:117
     __ip6_finish_output net/ipv6/ip6_output.c:182 [inline]
     __ip6_finish_output+0x4c1/0xe10 net/ipv6/ip6_output.c:161
     ip6_finish_output+0x35/0x200 net/ipv6/ip6_output.c:192
     NF_HOOK_COND include/linux/netfilter.h:290 [inline]
     ip6_output+0x1e4/0x530 net/ipv6/ip6_output.c:215
     dst_output include/net/dst.h:448 [inline]
     NF_HOOK include/linux/netfilter.h:301 [inline]
     NF_HOOK include/linux/netfilter.h:295 [inline]
     ip6_xmit+0x127e/0x1eb0 net/ipv6/ip6_output.c:320
     inet6_csk_xmit+0x358/0x630 net/ipv6/inet6_connection_sock.c:135
     dccp_transmit_skb+0x973/0x12c0 net/dccp/output.c:138
     dccp_send_reset+0x21b/0x2b0 net/dccp/output.c:535
     dccp_finish_passive_close net/dccp/proto.c:123 [inline]
     dccp_finish_passive_close+0xed/0x140 net/dccp/proto.c:118
     dccp_terminate_connection net/dccp/proto.c:958 [inline]
     dccp_close+0xb3c/0xe60 net/dccp/proto.c:1028
     inet_release+0x12e/0x280 net/ipv4/af_inet.c:431
     inet6_release+0x4c/0x70 net/ipv6/af_inet6.c:478
     __sock_release+0xcd/0x280 net/socket.c:599
     sock_close+0x18/0x20 net/socket.c:1258
     __fput+0x288/0x920 fs/file_table.c:280
     task_work_run+0xdd/0x1a0 kernel/task_work.c:140
     tracehook_notify_resume include/linux/tracehook.h:189 [inline]
    
    Fixes: 8afa10cbe281 ("net_sched: red: Avoid illegal values")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8978db4df14d933380bfa6610edb7234c752668a
Author: Martin Willi <martin@strongswan.org>
Date:   Tue Mar 2 13:24:23 2021 +0100

    can: dev: Move device back to init netns on owning netns delete
    
    commit 3a5ca857079ea022e0b1b17fc154f7ad7dbc150f upstream.
    
    When a non-initial netns is destroyed, the usual policy is to delete
    all virtual network interfaces contained, but move physical interfaces
    back to the initial netns. This keeps the physical interface visible
    on the system.
    
    CAN devices are somewhat special, as they define rtnl_link_ops even
    if they are physical devices. If a CAN interface is moved into a
    non-initial netns, destroying that netns lets the interface vanish
    instead of moving it back to the initial netns. default_device_exit()
    skips CAN interfaces due to having rtnl_link_ops set. Reproducer:
    
      ip netns add foo
      ip link set can0 netns foo
      ip netns delete foo
    
    WARNING: CPU: 1 PID: 84 at net/core/dev.c:11030 ops_exit_list+0x38/0x60
    CPU: 1 PID: 84 Comm: kworker/u4:2 Not tainted 5.10.19 #1
    Workqueue: netns cleanup_net
    [<c010e700>] (unwind_backtrace) from [<c010a1d8>] (show_stack+0x10/0x14)
    [<c010a1d8>] (show_stack) from [<c086dc10>] (dump_stack+0x94/0xa8)
    [<c086dc10>] (dump_stack) from [<c086b938>] (__warn+0xb8/0x114)
    [<c086b938>] (__warn) from [<c086ba10>] (warn_slowpath_fmt+0x7c/0xac)
    [<c086ba10>] (warn_slowpath_fmt) from [<c0629f20>] (ops_exit_list+0x38/0x60)
    [<c0629f20>] (ops_exit_list) from [<c062a5c4>] (cleanup_net+0x230/0x380)
    [<c062a5c4>] (cleanup_net) from [<c0142c20>] (process_one_work+0x1d8/0x438)
    [<c0142c20>] (process_one_work) from [<c0142ee4>] (worker_thread+0x64/0x5a8)
    [<c0142ee4>] (worker_thread) from [<c0148a98>] (kthread+0x148/0x14c)
    [<c0148a98>] (kthread) from [<c0100148>] (ret_from_fork+0x14/0x2c)
    
    To properly restore physical CAN devices to the initial netns on owning
    netns exit, introduce a flag on rtnl_link_ops that can be set by drivers.
    For CAN devices setting this flag, default_device_exit() considers them
    non-virtual, applying the usual namespace move.
    
    The issue was introduced in the commit mentioned below, as at that time
    CAN devices did not have a dellink() operation.
    
    Fixes: e008b5fc8dc7 ("net: Simplfy default_device_exit and improve batching.")
    Link: https://lore.kernel.org/r/20210302122423.872326-1-martin@strongswan.org
    Signed-off-by: Martin Willi <martin@strongswan.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77e281326ac916ef7af5acef4dbab9dd861f5ff2
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Mar 22 09:46:13 2021 +0100

    locking/mutex: Fix non debug version of mutex_lock_io_nested()
    
    commit 291da9d4a9eb3a1cb0610b7f4480f5b52b1825e7 upstream.
    
    If CONFIG_DEBUG_LOCK_ALLOC=n then mutex_lock_io_nested() maps to
    mutex_lock() which is clearly wrong because mutex_lock() lacks the
    io_schedule_prepare()/finish() invocations.
    
    Map it to mutex_lock_io().
    
    Fixes: f21860bac05b ("locking/mutex, sched/wait: Fix the mutex_lock_io_nested() define")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/878s6fshii.fsf@nanos.tec.linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02693dc3af627dd6ae7249661b459252f090b760
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Sun Mar 7 19:52:41 2021 -0800

    scsi: mpt3sas: Fix error return code of mpt3sas_base_attach()
    
    [ Upstream commit 3401ecf7fc1b9458a19d42c0e26a228f18ac7dda ]
    
    When kzalloc() returns NULL, no error return code of mpt3sas_base_attach()
    is assigned. To fix this bug, r is assigned with -ENOMEM in this case.
    
    Link: https://lore.kernel.org/r/20210308035241.3288-1-baijiaju1990@gmail.com
    Fixes: c696f7b83ede ("scsi: mpt3sas: Implement device_remove_in_progress check in IOCTL path")
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59dc0677ba400f8857e664209e7438a0eb33f730
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Sun Mar 7 19:30:24 2021 -0800

    scsi: qedi: Fix error return code of qedi_alloc_global_queues()
    
    [ Upstream commit f69953837ca5d98aa983a138dc0b90a411e9c763 ]
    
    When kzalloc() returns NULL to qedi->global_queues[i], no error return code
    of qedi_alloc_global_queues() is assigned.  To fix this bug, status is
    assigned with -ENOMEM in this case.
    
    Link: https://lore.kernel.org/r/20210308033024.27147-1-baijiaju1990@gmail.com
    Fixes: ace7f46ba5fd ("scsi: qedi: Add QLogic FastLinQ offload iSCSI driver framework.")
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Acked-by: Manish Rangankar <mrangankar@marvell.com>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 83b3213bbcbbbe113307e302d8bb4f557e741a3e
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Mon Mar 8 17:11:43 2021 +0200

    perf auxtrace: Fix auxtrace queue conflict
    
    [ Upstream commit b410ed2a8572d41c68bd9208555610e4b07d0703 ]
    
    The only requirement of an auxtrace queue is that the buffers are in
    time order.  That is achieved by making separate queues for separate
    perf buffer or AUX area buffer mmaps.
    
    That generally means a separate queue per cpu for per-cpu contexts, and
    a separate queue per thread for per-task contexts.
    
    When buffers are added to a queue, perf checks that the buffer cpu and
    thread id (tid) match the queue cpu and thread id.
    
    However, generally, that need not be true, and perf will queue buffers
    correctly anyway, so the check is not needed.
    
    In addition, the check gets erroneously hit when using sample mode to
    trace multiple threads.
    
    Consequently, fix that case by removing the check.
    
    Fixes: e502789302a6 ("perf auxtrace: Add helpers for queuing AUX area tracing data")
    Reported-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Reviewed-by: Andi Kleen <ak@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Link: http://lore.kernel.org/lkml/20210308151143.18338-1-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit abcedfe3e77c39e5c1ef6cbec6aad62cb44c1b04
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Mon Mar 22 18:31:00 2021 +0200

    ACPI: scan: Use unique number for instance_no
    
    [ Upstream commit eb50aaf960e3bedfef79063411ffd670da94b84b ]
    
    The decrementation of acpi_device_bus_id->instance_no
    in acpi_device_del() is incorrect, because it may cause
    a duplicate instance number to be allocated next time
    a device with the same acpi_device_bus_id is added.
    
    Replace above mentioned approach by using IDA framework.
    
    While at it, define the instance range to be [0, 4096).
    
    Fixes: e49bd2dd5a50 ("ACPI: use PNPID:instance_no as bus_id of ACPI device")
    Fixes: ca9dc8d42b30 ("ACPI / scan: Fix acpi_bus_id_list bookkeeping")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: 4.10+ <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7000bd8d8d815a988afdb820903ebd5a51eb0c5e
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Jan 14 19:46:47 2021 +0100

    ACPI: scan: Rearrange memory allocation in acpi_device_add()
    
    [ Upstream commit c1013ff7a5472db637c56bb6237f8343398c03a7 ]
    
    The upfront allocation of new_bus_id is done to avoid allocating
    memory under acpi_device_lock, but it doesn't really help,
    because (1) it leads to many unnecessary memory allocations for
    _ADR devices, (2) kstrdup_const() is run under that lock anyway and
    (3) it complicates the code.
    
    Rearrange acpi_device_add() to allocate memory for a new struct
    acpi_device_bus_id instance only when necessary, eliminate a redundant
    local variable from it and reduce the number of labels in there.
    
    No intentional functional impact.
    
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d3be19568e530984b17e03723ad352fff1ffd40b
Author: Potnuri Bharat Teja <bharat@chelsio.com>
Date:   Thu Mar 25 00:34:53 2021 +0530

    RDMA/cxgb4: Fix adapter LE hash errors while destroying ipv6 listening server
    
    [ Upstream commit 3408be145a5d6418ff955fe5badde652be90e700 ]
    
    Not setting the ipv6 bit while destroying ipv6 listening servers may
    result in potential fatal adapter errors due to lookup engine memory hash
    errors. Therefore always set ipv6 field while destroying ipv6 listening
    servers.
    
    Fixes: 830662f6f032 ("RDMA/cxgb4: Add support for active and passive open connection with IPv6 address")
    Link: https://lore.kernel.org/r/20210324190453.8171-1-bharat@chelsio.com
    Signed-off-by: Potnuri Bharat Teja <bharat@chelsio.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b43fcc35ab94ecfdcc53ab8a985b98f298b400c4
Author: Aya Levin <ayal@nvidia.com>
Date:   Thu Mar 11 17:46:35 2021 +0200

    net/mlx5e: Fix error path for ethtool set-priv-flag
    
    [ Upstream commit 4eacfe72e3e037e3fc019113df32c39a705148c2 ]
    
    Expose error value when failing to comply to command:
    $ ethtool --set-priv-flags eth2 rx_cqe_compress [on/off]
    
    Fixes: be7e87f92b58 ("net/mlx5e: Fail safe cqe compressing/moderation mode setting")
    Signed-off-by: Aya Levin <ayal@nvidia.com>
    Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cfb565d2e5a168e93dac674068364d167c5449fe
Author: Pavel Tatashin <pasha.tatashin@soleen.com>
Date:   Fri Mar 19 16:50:54 2021 -0400

    arm64: kdump: update ppos when reading elfcorehdr
    
    [ Upstream commit 141f8202cfa4192c3af79b6cbd68e7760bb01b5a ]
    
    The ppos points to a position in the old kernel memory (and in case of
    arm64 in the crash kernel since elfcorehdr is passed as a segment). The
    function should update the ppos by the amount that was read. This bug is
    not exposed by accident, but other platforms update this value properly.
    So, fix it in ARM64 version of elfcorehdr_read() as well.
    
    Signed-off-by: Pavel Tatashin <pasha.tatashin@soleen.com>
    Fixes: e62aaeac426a ("arm64: kdump: provide /proc/vmcore file")
    Reviewed-by: Tyler Hicks <tyhicks@linux.microsoft.com>
    Link: https://lore.kernel.org/r/20210319205054.743368-1-pasha.tatashin@soleen.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d07895d290f31d893cb05f0c0fd35a0f517f197
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Fri Mar 19 13:44:22 2021 +0000

    net: stmmac: dwmac-sun8i: Provide TX and RX fifo sizes
    
    [ Upstream commit 014dfa26ce1c647af09bf506285ef67e0e3f0a6b ]
    
    MTU cannot be changed on dwmac-sun8i. (ip link set eth0 mtu xxx returning EINVAL)
    This is due to tx_fifo_size being 0, since this value is used to compute valid
    MTU range.
    Like dwmac-sunxi (with commit 806fd188ce2a ("net: stmmac: dwmac-sunxi: Provide TX and RX fifo sizes"))
    dwmac-sun8i need to have tx and rx fifo sizes set.
    I have used values from datasheets.
    After this patch, setting a non-default MTU (like 1000) value works and network is still useable.
    
    Tested-on: sun8i-h3-orangepi-pc
    Tested-on: sun8i-r40-bananapi-m2-ultra
    Tested-on: sun50i-a64-bananapi-m64
    Tested-on: sun50i-h5-nanopi-neo-plus2
    Tested-on: sun50i-h6-pine-h64
    Fixes: 9f93ac8d408 ("net-next: stmmac: Add dwmac-sun8i")
    Reported-by: Belisko Marek <marek.belisko@gmail.com>
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 209af7c86c45269ac7f249c2a46d4840cceec63c
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Mar 18 16:57:49 2021 +0100

    net: cdc-phonet: fix data-interface release on probe failure
    
    [ Upstream commit c79a707072fe3fea0e3c92edee6ca85c1e53c29f ]
    
    Set the disconnected flag before releasing the data interface in case
    netdev registration fails to avoid having the disconnect callback try to
    deregister the never registered netdev (and trigger a WARN_ON()).
    
    Fixes: 87cf65601e17 ("USB host CDC Phonet network interface driver")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9597e3a5b3bf3daf7d2db471117f0df46593601a
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Feb 12 11:22:14 2021 +0100

    mac80211: fix rate mask reset
    
    [ Upstream commit 1944015fe9c1d9fa5e9eb7ffbbb5ef8954d6753b ]
    
    Coverity reported the strange "if (~...)" condition that's
    always true. It suggested that ! was intended instead of ~,
    but upon further analysis I'm convinced that what really was
    intended was a comparison to 0xff/0xffff (in HT/VHT cases
    respectively), since this indicates that all of the rates
    are enabled.
    
    Change the comparison accordingly.
    
    I'm guessing this never really mattered because a reset to
    not having a rate mask is basically equivalent to having a
    mask that enables all rates.
    
    Reported-by: Colin Ian King <colin.king@canonical.com>
    Fixes: 2ffbe6d33366 ("mac80211: fix and optimize MCS mask handling")
    Fixes: b119ad6e726c ("mac80211: add rate mask logic for vht rates")
    Reviewed-by: Colin Ian King <colin.king@canonical.com>
    Link: https://lore.kernel.org/r/20210212112213.36b38078f569.I8546a20c80bc1669058eb453e213630b846e107b@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b5841ff69cac81fe38887ce49ebe7ed039f2f71a
Author: Torin Cooper-Bennun <torin@maxiluxsystems.com>
Date:   Wed Mar 3 10:31:52 2021 +0000

    can: m_can: m_can_do_rx_poll(): fix extraneous msg loss warning
    
    [ Upstream commit c0e399f3baf42279f48991554240af8c457535d1 ]
    
    Message loss from RX FIFO 0 is already handled in
    m_can_handle_lost_msg(), with netdev output included.
    
    Removing this warning also improves driver performance under heavy
    load, where m_can_do_rx_poll() may be called many times before this
    interrupt is cleared, causing this message to be output many
    times (thanks Mariusz Madej for this report).
    
    Fixes: e0d1f4816f2a ("can: m_can: add Bosch M_CAN controller support")
    Link: https://lore.kernel.org/r/20210303103151.3760532-1-torin@maxiluxsystems.com
    Reported-by: Mariusz Madej <mariusz.madej@xtrack.com>
    Signed-off-by: Torin Cooper-Bennun <torin@maxiluxsystems.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fcc9831e190abdb5564e6d33d435e09766dff7d0
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Mon Mar 1 21:55:40 2021 -0500

    can: c_can: move runtime PM enable/disable to c_can_platform
    
    [ Upstream commit 6e2fe01dd6f98da6cae8b07cd5cfa67abc70d97d ]
    
    Currently doing modprobe c_can_pci will make the kernel complain:
    
        Unbalanced pm_runtime_enable!
    
    this is caused by pm_runtime_enable() called before pm is initialized.
    
    This fix is similar to 227619c3ff7c, move those pm_enable/disable code
    to c_can_platform.
    
    Fixes: 4cdd34b26826 ("can: c_can: Add runtime PM support to Bosch C_CAN/D_CAN controller")
    Link: http://lore.kernel.org/r/20210302025542.987600-1-ztong0001@gmail.com
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Tested-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d0cde43f0aa7a4361aad2ef1fc6ec821c6af700
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Sun Feb 28 21:45:11 2021 -0500

    can: c_can_pci: c_can_pci_remove(): fix use-after-free
    
    [ Upstream commit 0429d6d89f97ebff4f17f13f5b5069c66bde8138 ]
    
    There is a UAF in c_can_pci_remove(). dev is released by
    free_c_can_dev() and is used by pci_iounmap(pdev, priv->base) later.
    To fix this issue, save the mmio address before releasing dev.
    
    Fixes: 5b92da0443c2 ("c_can_pci: generic module for C_CAN/D_CAN on PCI")
    Link: https://lore.kernel.org/r/20210301024512.539039-1-ztong0001@gmail.com
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19e109d32ec908f03f3c8f6f75e099f0306702a5
Author: Stephane Grosjean <s.grosjean@peak-system.com>
Date:   Tue Mar 9 09:21:27 2021 +0100

    can: peak_usb: add forgotten supported devices
    
    [ Upstream commit 59ec7b89ed3e921cd0625a8c83f31a30d485fdf8 ]
    
    Since the peak_usb driver also supports the CAN-USB interfaces
    "PCAN-USB X6" and "PCAN-Chip USB" from PEAK-System GmbH, this patch adds
    their names to the list of explicitly supported devices.
    
    Fixes: ea8b65b596d7 ("can: usb: Add support of PCAN-Chip USB stamp module")
    Fixes: f00b534ded60 ("can: peak: Add support for PCAN-USB X6 USB interface")
    Link: https://lore.kernel.org/r/20210309082128.23125-3-s.grosjean@peak-system.com
    Signed-off-by: Stephane Grosjean <s.grosjean@peak-system.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc8f69295cd31c2bb1d9bed0b2f387ffd69e4514
Author: Dylan Hung <dylan_hung@aspeedtech.com>
Date:   Fri Mar 12 11:04:05 2021 +1030

    ftgmac100: Restart MAC HW once
    
    [ Upstream commit 6897087323a2fde46df32917462750c069668b2f ]
    
    The interrupt handler may set the flag to reset the mac in the future,
    but that flag is not cleared once the reset has occurred.
    
    Fixes: 10cbd6407609 ("ftgmac100: Rework NAPI & interrupts handling")
    Signed-off-by: Dylan Hung <dylan_hung@aspeedtech.com>
    Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Reviewed-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93897f10e17370690e1f1d6713c1d2c5ae32f14a
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Wed Mar 10 20:01:40 2021 -0800

    net/qlcnic: Fix a use after free in qlcnic_83xx_get_minidump_template
    
    [ Upstream commit db74623a3850db99cb9692fda9e836a56b74198d ]
    
    In qlcnic_83xx_get_minidump_template, fw_dump->tmpl_hdr was freed by
    vfree(). But unfortunately, it is used when extended is true.
    
    Fixes: 7061b2bdd620e ("qlogic: Deletion of unnecessary checks before two function calls")
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0cb9e24ec0b144faf7193996bf90f2a6b1be4f4
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Sun Feb 28 17:44:23 2021 +0800

    e1000e: Fix error handling in e1000_set_d0_lplu_state_82571
    
    [ Upstream commit b52912b8293f2c496f42583e65599aee606a0c18 ]
    
    There is one e1e_wphy() call in e1000_set_d0_lplu_state_82571
    that we have caught its return value but lack further handling.
    Check and terminate the execution flow just like other e1e_wphy()
    in this function.
    
    Fixes: bc7f75fa9788 ("[E1000E]: New pci-express e1000 driver (currently for ICH9 devices only)")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Acked-by: Sasha Neftin <sasha.neftin@intel.com>
    Tested-by: Dvora Fuxbrumer <dvorax.fuxbrumer@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9b81d3b39976c3947f495f55e77ac8ef6ded131
Author: Vitaly Lifshits <vitaly.lifshits@intel.com>
Date:   Wed Oct 21 14:59:37 2020 +0300

    e1000e: add rtnl_lock() to e1000_reset_task
    
    [ Upstream commit 21f857f0321d0d0ea9b1a758bd55dc63d1cb2437 ]
    
    A possible race condition was found in e1000_reset_task,
    after discovering a similar issue in igb driver via
    commit 024a8168b749 ("igb: reinit_locked() should be called
    with rtnl_lock").
    
    Added rtnl_lock() and rtnl_unlock() to avoid this.
    
    Fixes: bc7f75fa9788 ("[E1000E]: New pci-express e1000 driver (currently for ICH9 devices only)")
    Suggested-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Vitaly Lifshits <vitaly.lifshits@intel.com>
    Tested-by: Dvora Fuxbrumer <dvorax.fuxbrumer@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0025218005d3b7c07a3098c646f56baf4446854c
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Wed Mar 10 14:17:58 2021 -0800

    net: dsa: bcm_sf2: Qualify phydev->dev_flags based on port
    
    [ Upstream commit 47142ed6c34d544ae9f0463e58d482289cbe0d46 ]
    
    Similar to commit 92696286f3bb37ba50e4bd8d1beb24afb759a799 ("net:
    bcmgenet: Set phydev->dev_flags only for internal PHYs") we need to
    qualify the phydev->dev_flags based on whether the port is connected to
    an internal or external PHY otherwise we risk having a flags collision
    with a completely different interpretation depending on the driver.
    
    Fixes: aa9aef77c761 ("net: dsa: bcm_sf2: communicate integrated PHY revision to PHY driver")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 291a553ae7fb660c7b8be30c673294c1dc69e11f
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Mar 10 01:56:36 2021 -0800

    macvlan: macvlan_count_rx() needs to be aware of preemption
    
    [ Upstream commit dd4fa1dae9f4847cc1fd78ca468ad69e16e5db3e ]
    
    macvlan_count_rx() can be called from process context, it is thus
    necessary to disable preemption before calling u64_stats_update_begin()
    
    syzbot was able to spot this on 32bit arch:
    
    WARNING: CPU: 1 PID: 4632 at include/linux/seqlock.h:271 __seqprop_assert include/linux/seqlock.h:271 [inline]
    WARNING: CPU: 1 PID: 4632 at include/linux/seqlock.h:271 __seqprop_assert.constprop.0+0xf0/0x11c include/linux/seqlock.h:269
    Modules linked in:
    Kernel panic - not syncing: panic_on_warn set ...
    CPU: 1 PID: 4632 Comm: kworker/1:3 Not tainted 5.12.0-rc2-syzkaller #0
    Hardware name: ARM-Versatile Express
    Workqueue: events macvlan_process_broadcast
    Backtrace:
    [<82740468>] (dump_backtrace) from [<827406dc>] (show_stack+0x18/0x1c arch/arm/kernel/traps.c:252)
     r7:00000080 r6:60000093 r5:00000000 r4:8422a3c4
    [<827406c4>] (show_stack) from [<82751b58>] (__dump_stack lib/dump_stack.c:79 [inline])
    [<827406c4>] (show_stack) from [<82751b58>] (dump_stack+0xb8/0xe8 lib/dump_stack.c:120)
    [<82751aa0>] (dump_stack) from [<82741270>] (panic+0x130/0x378 kernel/panic.c:231)
     r7:830209b4 r6:84069ea4 r5:00000000 r4:844350d0
    [<82741140>] (panic) from [<80244924>] (__warn+0xb0/0x164 kernel/panic.c:605)
     r3:8404ec8c r2:00000000 r1:00000000 r0:830209b4
     r7:0000010f
    [<80244874>] (__warn) from [<82741520>] (warn_slowpath_fmt+0x68/0xd4 kernel/panic.c:628)
     r7:81363f70 r6:0000010f r5:83018e50 r4:00000000
    [<827414bc>] (warn_slowpath_fmt) from [<81363f70>] (__seqprop_assert include/linux/seqlock.h:271 [inline])
    [<827414bc>] (warn_slowpath_fmt) from [<81363f70>] (__seqprop_assert.constprop.0+0xf0/0x11c include/linux/seqlock.h:269)
     r8:5a109000 r7:0000000f r6:a568dac0 r5:89802300 r4:00000001
    [<81363e80>] (__seqprop_assert.constprop.0) from [<81364af0>] (u64_stats_update_begin include/linux/u64_stats_sync.h:128 [inline])
    [<81363e80>] (__seqprop_assert.constprop.0) from [<81364af0>] (macvlan_count_rx include/linux/if_macvlan.h:47 [inline])
    [<81363e80>] (__seqprop_assert.constprop.0) from [<81364af0>] (macvlan_broadcast+0x154/0x26c drivers/net/macvlan.c:291)
     r5:89802300 r4:8a927740
    [<8136499c>] (macvlan_broadcast) from [<81365020>] (macvlan_process_broadcast+0x258/0x2d0 drivers/net/macvlan.c:317)
     r10:81364f78 r9:8a86d000 r8:8a9c7e7c r7:8413aa5c r6:00000000 r5:00000000
     r4:89802840
    [<81364dc8>] (macvlan_process_broadcast) from [<802696a4>] (process_one_work+0x2d4/0x998 kernel/workqueue.c:2275)
     r10:00000008 r9:8404ec98 r8:84367a02 r7:ddfe6400 r6:ddfe2d40 r5:898dac80
     r4:8a86d43c
    [<802693d0>] (process_one_work) from [<80269dcc>] (worker_thread+0x64/0x54c kernel/workqueue.c:2421)
     r10:00000008 r9:8a9c6000 r8:84006d00 r7:ddfe2d78 r6:898dac94 r5:ddfe2d40
     r4:898dac80
    [<80269d68>] (worker_thread) from [<80271f40>] (kthread+0x184/0x1a4 kernel/kthread.c:292)
     r10:85247e64 r9:898dac80 r8:80269d68 r7:00000000 r6:8a9c6000 r5:89a2ee40
     r4:8a97bd00
    [<80271dbc>] (kthread) from [<80200114>] (ret_from_fork+0x14/0x20 arch/arm/kernel/entry-common.S:158)
    Exception stack(0x8a9c7fb0 to 0x8a9c7ff8)
    
    Fixes: 412ca1550cbe ("macvlan: Move broadcasts into a work queue")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80d4b8bdb0657a202f58764f92d525898988be19
Author: Georgi Valkov <gvalkov@abv.bg>
Date:   Mon Mar 8 10:30:38 2021 -0800

    libbpf: Fix INSTALL flag order
    
    [ Upstream commit e7fb6465d4c8e767e39cbee72464e0060ab3d20c ]
    
    It was reported ([0]) that having optional -m flag between source and
    destination arguments in install command breaks bpftools cross-build
    on MacOS. Move -m to the front to fix this issue.
    
      [0] https://github.com/openwrt/openwrt/pull/3959
    
    Fixes: 7110d80d53f4 ("libbpf: Makefile set specified permission mode")
    Signed-off-by: Georgi Valkov <gvalkov@abv.bg>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20210308183038.613432-1-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 769362a5b32b67178b8266d78c10d871c93ca584
Author: Grygorii Strashko <grygorii.strashko@ti.com>
Date:   Thu Jan 28 21:15:48 2021 +0200

    bus: omap_l3_noc: mark l3 irqs as IRQF_NO_THREAD
    
    [ Upstream commit 7d7275b3e866cf8092bd12553ec53ba26864f7bb ]
    
    The main purpose of l3 IRQs is to catch OCP bus access errors and identify
    corresponding code places by showing call stack, so it's important to
    handle L3 interconnect errors as fast as possible. On RT these IRQs will
    became threaded and will be scheduled much more late from the moment actual
    error occurred so showing completely useless information.
    
    Hence, mark l3 IRQs as IRQF_NO_THREAD so they will not be forced threaded
    on RT or if force_irqthreads = true.
    
    Fixes: 0ee7261c9212 ("drivers: bus: Move the OMAP interconnect driver to drivers/bus/")
    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b1ed2e9233a02bdf4fcd5899765e8540be7328cd
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Fri Mar 26 14:32:32 2021 -0400

    dm ioctl: fix out of bounds array access when no devices
    
    commit 4edbe1d7bcffcd6269f3b5eb63f710393ff2ec7a upstream.
    
    If there are not any dm devices, we need to zero the "dev" argument in
    the first structure dm_name_list. However, this can cause out of
    bounds write, because the "needed" variable is zero and len may be
    less than eight.
    
    Fix this bug by reporting DM_BUFFER_FULL_FLAG if the result buffer is
    too small to hold the "nl->dev" value.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ccc2ed15d2f6f5ec5060995641d29eb6b3e4425
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Wed Apr 11 19:05:03 2018 +0300

    ARM: dts: at91-sama5d27_som1: fix phy address to 7
    
    commit 221c3a09ddf70a0a51715e6c2878d8305e95c558 upstream.
    
    Fix the phy address to 7 for Ethernet PHY on SAMA5D27 SOM1. No
    connection established if phy address 0 is used.
    
    The board uses the 24 pins version of the KSZ8081RNA part, KSZ8081RNA
    pin 16 REFCLK as PHYAD bit [2] has weak internal pull-down.  But at
    reset, connected to PD09 of the MPU it's connected with an internal
    pull-up forming PHYAD[2:0] = 7.
    
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Fixes: 2f61929eb10a ("ARM: dts: at91: at91-sama5d27_som1: fix PHY ID")
    Cc: Ludovic Desroches <ludovic.desroches@microchip.com>
    Signed-off-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Cc: <stable@vger.kernel.org> # 4.14+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1acd2147d13100193b336076143bf63d67f2f50a
Author: Horia Geantă <horia.geanta@nxp.com>
Date:   Sun Mar 7 22:47:36 2021 +0200

    arm64: dts: ls1043a: mark crypto engine dma coherent
    
    commit 4fb3a074755b7737c4081cffe0ccfa08c2f2d29d upstream.
    
    Crypto engine (CAAM) on LS1043A platform is configured HW-coherent,
    mark accordingly the DT node.
    
    Lack of "dma-coherent" property for an IP that is configured HW-coherent
    can lead to problems, similar to what has been reported for LS1046A.
    
    Cc: <stable@vger.kernel.org> # v4.8+
    Fixes: 63dac35b58f4 ("arm64: dts: ls1043a: add crypto node")
    Link: https://lore.kernel.org/linux-crypto/fe6faa24-d8f7-d18f-adfa-44fa0caa1598@arm.com
    Signed-off-by: Horia Geantă <horia.geanta@nxp.com>
    Acked-by: Li Yang <leoyang.li@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a19eb9bc0032f7cc36fbf62e429eab8bae2340a7
Author: Horia Geantă <horia.geanta@nxp.com>
Date:   Sun Mar 7 22:47:37 2021 +0200

    arm64: dts: ls1012a: mark crypto engine dma coherent
    
    commit ba8da03fa7dff59d9400250aebd38f94cde3cb0f upstream.
    
    Crypto engine (CAAM) on LS1012A platform is configured HW-coherent,
    mark accordingly the DT node.
    
    Lack of "dma-coherent" property for an IP that is configured HW-coherent
    can lead to problems, similar to what has been reported for LS1046A.
    
    Cc: <stable@vger.kernel.org> # v4.12+
    Fixes: 85b85c569507 ("arm64: dts: ls1012a: add crypto node")
    Signed-off-by: Horia Geantă <horia.geanta@nxp.com>
    Acked-by: Li Yang <leoyang.li@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e93ac104eba85073794fdd53226f28d73b1b9b6
Author: Horia Geantă <horia.geanta@nxp.com>
Date:   Sun Mar 7 22:47:35 2021 +0200

    arm64: dts: ls1046a: mark crypto engine dma coherent
    
    commit 9c3a16f88385e671b63a0de7b82b85e604a80f42 upstream.
    
    Crypto engine (CAAM) on LS1046A platform is configured HW-coherent,
    mark accordingly the DT node.
    
    As reported by Greg and Sascha, and explained by Robin, lack of
    "dma-coherent" property for an IP that is configured HW-coherent
    can lead to problems, e.g. on v5.11:
    
    > kernel BUG at drivers/crypto/caam/jr.c:247!
    > Internal error: Oops - BUG: 0 [#1] PREEMPT SMP
    > Modules linked in:
    > CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.11.0-20210225-3-00039-g434215968816-dirty #12
    > Hardware name: TQ TQMLS1046A SoM on Arkona AT1130 (C300) board (DT)
    > pstate: 60000005 (nZCv daif -PAN -UAO -TCO BTYPE=--)
    > pc : caam_jr_dequeue+0x98/0x57c
    > lr : caam_jr_dequeue+0x98/0x57c
    > sp : ffff800010003d50
    > x29: ffff800010003d50 x28: ffff8000118d4000
    > x27: ffff8000118d4328 x26: 00000000000001f0
    > x25: ffff0008022be480 x24: ffff0008022c6410
    > x23: 00000000000001f1 x22: ffff8000118d4329
    > x21: 0000000000004d80 x20: 00000000000001f1
    > x19: 0000000000000001 x18: 0000000000000020
    > x17: 0000000000000000 x16: 0000000000000015
    > x15: ffff800011690230 x14: 2e2e2e2e2e2e2e2e
    > x13: 2e2e2e2e2e2e2020 x12: 3030303030303030
    > x11: ffff800011700a38 x10: 00000000fffff000
    > x9 : ffff8000100ada30 x8 : ffff8000116a8a38
    > x7 : 0000000000000001 x6 : 0000000000000000
    > x5 : 0000000000000000 x4 : 0000000000000000
    > x3 : 00000000ffffffff x2 : 0000000000000000
    > x1 : 0000000000000000 x0 : 0000000000001800
    > Call trace:
    >  caam_jr_dequeue+0x98/0x57c
    >  tasklet_action_common.constprop.0+0x164/0x18c
    >  tasklet_action+0x44/0x54
    >  __do_softirq+0x160/0x454
    >  __irq_exit_rcu+0x164/0x16c
    >  irq_exit+0x1c/0x30
    >  __handle_domain_irq+0xc0/0x13c
    >  gic_handle_irq+0x5c/0xf0
    >  el1_irq+0xb4/0x180
    >  arch_cpu_idle+0x18/0x30
    >  default_idle_call+0x3c/0x1c0
    >  do_idle+0x23c/0x274
    >  cpu_startup_entry+0x34/0x70
    >  rest_init+0xdc/0xec
    >  arch_call_rest_init+0x1c/0x28
    >  start_kernel+0x4ac/0x4e4
    > Code: 91392021 912c2000 d377d8c6 97f24d96 (d4210000)
    
    Cc: <stable@vger.kernel.org> # v4.10+
    Fixes: 8126d88162a5 ("arm64: dts: add QorIQ LS1046A SoC support")
    Link: https://lore.kernel.org/linux-crypto/fe6faa24-d8f7-d18f-adfa-44fa0caa1598@arm.com
    Reported-by: Greg Ungerer <gerg@kernel.org>
    Reported-by: Sascha Hauer <s.hauer@pengutronix.de>
    Tested-by: Sascha Hauer <s.hauer@pengutronix.de>
    Signed-off-by: Horia Geantă <horia.geanta@nxp.com>
    Acked-by: Greg Ungerer <gerg@kernel.org>
    Acked-by: Li Yang <leoyang.li@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc6d40eb1010b62197f01b56d4cd994b683eb79c
Author: Phillip Lougher <phillip@squashfs.org.uk>
Date:   Wed Mar 24 21:37:35 2021 -0700

    squashfs: fix xattr id and id lookup sanity checks
    
    commit 8b44ca2b634527151af07447a8090a5f3a043321 upstream.
    
    The checks for maximum metadata block size is missing
    SQUASHFS_BLOCK_OFFSET (the two byte length count).
    
    Link: https://lkml.kernel.org/r/2069685113.2081245.1614583677427@webmail.123-reg.co.uk
    Fixes: f37aa4c7366e23f ("squashfs: add more sanity checks in id lookup")
    Signed-off-by: Phillip Lougher <phillip@squashfs.org.uk>
    Cc: Sean Nyekjaer <sean@geanix.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eaeb7d212becf5b7f912d86e96923119873b1c19
Author: Sean Nyekjaer <sean@geanix.com>
Date:   Wed Mar 24 21:37:32 2021 -0700

    squashfs: fix inode lookup sanity checks
    
    commit c1b2028315c6b15e8d6725e0d5884b15887d3daa upstream.
    
    When mouting a squashfs image created without inode compression it fails
    with: "unable to read inode lookup table"
    
    It turns out that the BLOCK_OFFSET is missing when checking the
    SQUASHFS_METADATA_SIZE agaist the actual size.
    
    Link: https://lkml.kernel.org/r/20210226092903.1473545-1-sean@geanix.com
    Fixes: eabac19e40c0 ("squashfs: add more sanity checks in inode lookup")
    Signed-off-by: Sean Nyekjaer <sean@geanix.com>
    Acked-by: Phillip Lougher <phillip@squashfs.org.uk>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbf73a41a686b045e64f5e2c033cdd8f7cc7b552
Author: Sergei Trofimovich <slyfox@gentoo.org>
Date:   Fri Mar 12 21:08:27 2021 -0800

    ia64: fix ptrace(PTRACE_SYSCALL_INFO_EXIT) sign
    
    [ Upstream commit 61bf318eac2c13356f7bd1c6a05421ef504ccc8a ]
    
    In https://bugs.gentoo.org/769614 Dmitry noticed that
    `ptrace(PTRACE_GET_SYSCALL_INFO)` does not return error sign properly.
    
    The bug is in mismatch between get/set errors:
    
    static inline long syscall_get_error(struct task_struct *task,
                                         struct pt_regs *regs)
    {
            return regs->r10 == -1 ? regs->r8:0;
    }
    
    static inline long syscall_get_return_value(struct task_struct *task,
                                                struct pt_regs *regs)
    {
            return regs->r8;
    }
    
    static inline void syscall_set_return_value(struct task_struct *task,
                                                struct pt_regs *regs,
                                                int error, long val)
    {
            if (error) {
                    /* error < 0, but ia64 uses > 0 return value */
                    regs->r8 = -error;
                    regs->r10 = -1;
            } else {
                    regs->r8 = val;
                    regs->r10 = 0;
            }
    }
    
    Tested on v5.10 on rx3600 machine (ia64 9040 CPU).
    
    Link: https://lkml.kernel.org/r/20210221002554.333076-2-slyfox@gentoo.org
    Link: https://bugs.gentoo.org/769614
    Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
    Reported-by: Dmitry V. Levin <ldv@altlinux.org>
    Reviewed-by: Dmitry V. Levin <ldv@altlinux.org>
    Cc: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54a25e6d9ec626788d2eb2f284037ec3b54f4636
Author: Sergei Trofimovich <slyfox@gentoo.org>
Date:   Fri Mar 12 21:08:23 2021 -0800

    ia64: fix ia64_syscall_get_set_arguments() for break-based syscalls
    
    [ Upstream commit 0ceb1ace4a2778e34a5414e5349712ae4dc41d85 ]
    
    In https://bugs.gentoo.org/769614 Dmitry noticed that
    `ptrace(PTRACE_GET_SYSCALL_INFO)` does not work for syscalls called via
    glibc's syscall() wrapper.
    
    ia64 has two ways to call syscalls from userspace: via `break` and via
    `eps` instructions.
    
    The difference is in stack layout:
    
    1. `eps` creates simple stack frame: no locals, in{0..7} == out{0..8}
    2. `break` uses userspace stack frame: may be locals (glibc provides
       one), in{0..7} == out{0..8}.
    
    Both work fine in syscall handling cde itself.
    
    But `ptrace(PTRACE_GET_SYSCALL_INFO)` uses unwind mechanism to
    re-extract syscall arguments but it does not account for locals.
    
    The change always skips locals registers. It should not change `eps`
    path as kernel's handler already enforces locals=0 and fixes `break`.
    
    Tested on v5.10 on rx3600 machine (ia64 9040 CPU).
    
    Link: https://lkml.kernel.org/r/20210221002554.333076-1-slyfox@gentoo.org
    Link: https://bugs.gentoo.org/769614
    Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
    Reported-by: Dmitry V. Levin <ldv@altlinux.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a1336075888d538ae5dcfff4ecc29775c49f5e8
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Thu Jan 28 17:36:38 2021 -0500

    nfs: we don't support removing system.nfs4_acl
    
    [ Upstream commit 4f8be1f53bf615102d103c0509ffa9596f65b718 ]
    
    The NFSv4 protocol doesn't have any notion of reomoving an attribute, so
    removexattr(path,"system.nfs4_acl") doesn't make sense.
    
    There's no documented return value.  Arguably it could be EOPNOTSUPP but
    I'm a little worried an application might take that to mean that we
    don't support ACLs or xattrs.  How about EINVAL?
    
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb207598150ca901c9388daa169f86b5f051020d
Author: Christian König <christian.koenig@amd.com>
Date:   Mon Mar 8 19:22:13 2021 +0100

    drm/radeon: fix AGP dependency
    
    [ Upstream commit cba2afb65cb05c3d197d17323fee4e3c9edef9cd ]
    
    When AGP is compiled as module radeon must be compiled as module as
    well.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 193349ac6753ddf733e9656915dd520d9908d873
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Mon Mar 8 09:38:12 2021 +0100

    u64_stats,lockdep: Fix u64_stats_init() vs lockdep
    
    [ Upstream commit d5b0e0677bfd5efd17c5bbb00156931f0d41cb85 ]
    
    Jakub reported that:
    
        static struct net_device *rtl8139_init_board(struct pci_dev *pdev)
        {
                ...
                u64_stats_init(&tp->rx_stats.syncp);
                u64_stats_init(&tp->tx_stats.syncp);
                ...
        }
    
    results in lockdep getting confused between the RX and TX stats lock.
    This is because u64_stats_init() is an inline calling seqcount_init(),
    which is a macro using a static variable to generate a lockdep class.
    
    By wrapping that in an inline, we negate the effect of the macro and
    fold the static key variable, hence the confusion.
    
    Fix by also making u64_stats_init() a macro for the case where it
    matters, leaving the other case an inline for argument validation
    etc.
    
    Reported-by: Jakub Kicinski <kuba@kernel.org>
    Debugged-by: "Ahmed S. Darwish" <a.darwish@linutronix.de>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Tested-by: "Erhard F." <erhard_f@mailbox.org>
    Link: https://lkml.kernel.org/r/YEXicy6+9MksdLZh@hirez.programming.kicks-ass.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7c06204cf9b8f9612e95da7393bb9e340c2bfd8a
Author: Rob Gardner <rob.gardner@oracle.com>
Date:   Sun Feb 28 22:48:16 2021 -0700

    sparc64: Fix opcode filtering in handling of no fault loads
    
    [ Upstream commit e5e8b80d352ec999d2bba3ea584f541c83f4ca3f ]
    
    is_no_fault_exception() has two bugs which were discovered via random
    opcode testing with stress-ng. Both are caused by improper filtering
    of opcodes.
    
    The first bug can be triggered by a floating point store with a no-fault
    ASI, for instance "sta %f0, [%g0] #ASI_PNF", opcode C1A01040.
    
    The code first tests op3[5] (0x1000000), which denotes a floating
    point instruction, and then tests op3[2] (0x200000), which denotes a
    store instruction. But these bits are not mutually exclusive, and the
    above mentioned opcode has both bits set. The intent is to filter out
    stores, so the test for stores must be done first in order to have
    any effect.
    
    The second bug can be triggered by a floating point load with one of
    the invalid ASI values 0x8e or 0x8f, which pass this check in
    is_no_fault_exception():
         if ((asi & 0xf2) == ASI_PNF)
    
    An example instruction is "ldqa [%l7 + %o7] #ASI 0x8f, %f38",
    opcode CF95D1EF. Asi values greater than 0x8b (ASI_SNFL) are fatal
    in handle_ldf_stq(), and is_no_fault_exception() must not allow these
    invalid asi values to make it that far.
    
    In both of these cases, handle_ldf_stq() reacts by calling
    sun4v_data_access_exception() or spitfire_data_access_exception(),
    which call is_no_fault_exception() and results in an infinite
    recursion.
    
    Signed-off-by: Rob Gardner <rob.gardner@oracle.com>
    Tested-by: Anatoly Pugachev <matorola@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9dbcd97a2e77ed874da16cf098b1d0e7144ba8cb
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Sun Mar 7 22:25:30 2021 -0500

    atm: idt77252: fix null-ptr-dereference
    
    [ Upstream commit 4416e98594dc04590ebc498fc4e530009535c511 ]
    
    this one is similar to the phy_data allocation fix in uPD98402, the
    driver allocate the idt77105_priv and store to dev_data but later
    dereference using dev->dev_data, which will cause null-ptr-dereference.
    
    fix this issue by changing dev_data to phy_data so that PRIV(dev) can
    work correctly.
    
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 089de35c66ab574bcfb24b8cfc5920811f8cc12b
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Sun Mar 7 22:25:29 2021 -0500

    atm: uPD98402: fix incorrect allocation
    
    [ Upstream commit 3153724fc084d8ef640c611f269ddfb576d1dcb1 ]
    
    dev->dev_data is set in zatm.c, calling zatm_start() will overwrite this
    dev->dev_data in uPD98402_start() and a subsequent PRIV(dev)->lock
    (i.e dev->phy_data->lock) will result in a null-ptr-dereference.
    
    I believe this is a typo and what it actually want to do is to allocate
    phy_data instead of dev_data.
    
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0366e2b2f21cf6055fa737225ccef1e9e8ddc87
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Sun Mar 7 01:12:56 2021 -0800

    net: wan: fix error return code of uhdlc_init()
    
    [ Upstream commit 62765d39553cfd1ad340124fe1e280450e8c89e2 ]
    
    When priv->rx_skbuff or priv->tx_skbuff is NULL, no error return code of
    uhdlc_init() is assigned.
    To fix this bug, ret is assigned with -ENOMEM in these cases.
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f85d970e5a5645aa25ad3c4c7334a550a684664
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Sun Mar 7 00:40:12 2021 -0800

    net: hisilicon: hns: fix error return code of hns_nic_clear_all_rx_fetch()
    
    [ Upstream commit 143c253f42bad20357e7e4432087aca747c43384 ]
    
    When hns_assemble_skb() returns NULL to skb, no error return code of
    hns_nic_clear_all_rx_fetch() is assigned.
    To fix this bug, ret is assigned with -ENOMEM in this case.
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3e95ad19eca777b283a8eb04f607fbcf6ac3d17
Author: Frank Sorenson <sorenson@redhat.com>
Date:   Mon Mar 8 12:12:13 2021 -0600

    NFS: Correct size calculation for create reply length
    
    [ Upstream commit ad3dbe35c833c2d4d0bbf3f04c785d32f931e7c9 ]
    
    CREATE requests return a post_op_fh3, rather than nfs_fh3. The
    post_op_fh3 includes an extra word to indicate 'handle_follows'.
    
    Without that additional word, create fails when full 64-byte
    filehandles are in use.
    
    Add NFS3_post_op_fh_sz, and correct the size calculation for
    NFS3_createres_sz.
    
    Signed-off-by: Frank Sorenson <sorenson@redhat.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c0dddb638fa259a0662bbbef617f0430b8a7bce
Author: Timo Rothenpieler <timo@rothenpieler.org>
Date:   Tue Feb 23 15:19:01 2021 +0100

    nfs: fix PNFS_FLEXFILE_LAYOUT Kconfig default
    
    [ Upstream commit a0590473c5e6c4ef17c3132ad08fbad170f72d55 ]
    
    This follows what was done in 8c2fabc6542d9d0f8b16bd1045c2eda59bdcde13.
    With the default being m, it's impossible to build the module into the
    kernel.
    
    Signed-off-by: Timo Rothenpieler <timo@rothenpieler.org>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a0c552e87d9040406f071a175852c07afa6e270
Author: Yang Li <yang.lee@linux.alibaba.com>
Date:   Tue Feb 23 16:35:58 2021 +0800

    gpiolib: acpi: Add missing IRQF_ONESHOT
    
    [ Upstream commit 6e5d5791730b55a1f987e1db84b078b91eb49e99 ]
    
    fixed the following coccicheck:
    ./drivers/gpio/gpiolib-acpi.c:176:7-27: ERROR: Threaded IRQ with no
    primary handler requested without IRQF_ONESHOT
    
    Make sure threaded IRQs without a primary handler are always request
    with IRQF_ONESHOT
    
    Reported-by: Abaci Robot <abaci@linux.alibaba.com>
    Signed-off-by: Yang Li <yang.lee@linux.alibaba.com>
    Acked-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7693e6f8d33d937ac879adc2f8a74e7277dacb2
Author: Denis Efremov <efremov@linux.com>
Date:   Fri Mar 5 20:02:12 2021 +0300

    sun/niu: fix wrong RXMAC_BC_FRM_CNT_COUNT count
    
    [ Upstream commit 155b23e6e53475ca3b8c2a946299b4d4dd6a5a1e ]
    
    RXMAC_BC_FRM_CNT_COUNT added to mp->rx_bcasts twice in a row
    in niu_xmac_interrupt(). Remove the second addition.
    
    Signed-off-by: Denis Efremov <efremov@linux.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d75c6175d75d27553b84eab313d0db551aae2a2b
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Thu Mar 4 18:06:48 2021 -0800

    net: tehuti: fix error return code in bdx_probe()
    
    [ Upstream commit 38c26ff3048af50eee3fcd591921357ee5bfd9ee ]
    
    When bdx_read_mac() fails, no error return code of bdx_probe()
    is assigned.
    To fix this bug, err is assigned with -EFAULT as error return code.
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 925a83991304e82e11033d52d21b739bc87e4fb8
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Sun Jan 3 16:08:42 2021 +0800

    ixgbe: Fix memleak in ixgbe_configure_clsu32
    
    [ Upstream commit 7a766381634da19fc837619b0a34590498d9d29a ]
    
    When ixgbe_fdir_write_perfect_filter_82599() fails,
    input allocated by kzalloc() has not been freed,
    which leads to memleak.
    
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Tested-by: Tony Brelinski <tonyx.brelinski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6de742ee992c150e70f1c453fcf794ea7bbf284
Author: Hayes Wang <hayeswang@realtek.com>
Date:   Wed Mar 3 16:39:47 2021 +0800

    Revert "r8152: adjust the settings about MAC clock speed down for RTL8153"
    
    [ Upstream commit 4b5dc1a94d4f92b5845e98bd9ae344b26d933aad ]
    
    This reverts commit 134f98bcf1b898fb9d6f2b91bc85dd2e5478b4b8.
    
    The r8153_mac_clk_spd() is used for RTL8153A only, because the register
    table of RTL8153B is different from RTL8153A. However, this function would
    be called when RTL8153B calls r8153_first_init() and r8153_enter_oob().
    That causes RTL8153B becomes unstable when suspending and resuming. The
    worst case may let the device stop working.
    
    Besides, revert this commit to disable MAC clock speed down for RTL8153A.
    It would avoid the known issue when enabling U1. The data of the first
    control transfer may be wrong when exiting U1.
    
    Signed-off-by: Hayes Wang <hayeswang@realtek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8cb0a2dad389f84c4b530e35749f15e390d4096
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Sat Feb 27 22:55:50 2021 -0500

    atm: lanai: dont run lanai_dev_close if not open
    
    [ Upstream commit a2bd45834e83d6c5a04d397bde13d744a4812dfc ]
    
    lanai_dev_open() can fail. When it fail, lanai->base is unmapped and the
    pci device is disabled. The caller, lanai_init_one(), then tries to run
    atm_dev_deregister(). This will subsequently call lanai_dev_close() and
    use the already released MMIO area.
    
    To fix this issue, set the lanai->base to NULL if open fail,
    and test the flag in lanai_dev_close().
    
    [    8.324153] lanai: lanai_start() failed, err=19
    [    8.324819] lanai(itf 0): shutting down interface
    [    8.325211] BUG: unable to handle page fault for address: ffffc90000180024
    [    8.325781] #PF: supervisor write access in kernel mode
    [    8.326215] #PF: error_code(0x0002) - not-present page
    [    8.326641] PGD 100000067 P4D 100000067 PUD 100139067 PMD 10013a067 PTE 0
    [    8.327206] Oops: 0002 [#1] SMP KASAN NOPTI
    [    8.327557] CPU: 0 PID: 95 Comm: modprobe Not tainted 5.11.0-rc7-00090-gdcc0b49040c7 #12
    [    8.328229] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-48-gd9c812dda519-4
    [    8.329145] RIP: 0010:lanai_dev_close+0x4f/0xe5 [lanai]
    [    8.329587] Code: 00 48 c7 c7 00 d3 01 c0 e8 49 4e 0a c2 48 8d bd 08 02 00 00 e8 6e 52 14 c1 48 80
    [    8.330917] RSP: 0018:ffff8881029ef680 EFLAGS: 00010246
    [    8.331196] RAX: 000000000003fffe RBX: ffff888102fb4800 RCX: ffffffffc001a98a
    [    8.331572] RDX: ffffc90000180000 RSI: 0000000000000246 RDI: ffff888102fb4000
    [    8.331948] RBP: ffff888102fb4000 R08: ffffffff8115da8a R09: ffffed102053deaa
    [    8.332326] R10: 0000000000000003 R11: ffffed102053dea9 R12: ffff888102fb48a4
    [    8.332701] R13: ffffffffc00123c0 R14: ffff888102fb4b90 R15: ffff888102fb4b88
    [    8.333077] FS:  00007f08eb9056a0(0000) GS:ffff88815b400000(0000) knlGS:0000000000000000
    [    8.333502] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [    8.333806] CR2: ffffc90000180024 CR3: 0000000102a28000 CR4: 00000000000006f0
    [    8.334182] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [    8.334557] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [    8.334932] Call Trace:
    [    8.335066]  atm_dev_deregister+0x161/0x1a0 [atm]
    [    8.335324]  lanai_init_one.cold+0x20c/0x96d [lanai]
    [    8.335594]  ? lanai_send+0x2a0/0x2a0 [lanai]
    [    8.335831]  local_pci_probe+0x6f/0xb0
    [    8.336039]  pci_device_probe+0x171/0x240
    [    8.336255]  ? pci_device_remove+0xe0/0xe0
    [    8.336475]  ? kernfs_create_link+0xb6/0x110
    [    8.336704]  ? sysfs_do_create_link_sd.isra.0+0x76/0xe0
    [    8.336983]  really_probe+0x161/0x420
    [    8.337181]  driver_probe_device+0x6d/0xd0
    [    8.337401]  device_driver_attach+0x82/0x90
    [    8.337626]  ? device_driver_attach+0x90/0x90
    [    8.337859]  __driver_attach+0x60/0x100
    [    8.338065]  ? device_driver_attach+0x90/0x90
    [    8.338298]  bus_for_each_dev+0xe1/0x140
    [    8.338511]  ? subsys_dev_iter_exit+0x10/0x10
    [    8.338745]  ? klist_node_init+0x61/0x80
    [    8.338956]  bus_add_driver+0x254/0x2a0
    [    8.339164]  driver_register+0xd3/0x150
    [    8.339370]  ? 0xffffffffc0028000
    [    8.339550]  do_one_initcall+0x84/0x250
    [    8.339755]  ? trace_event_raw_event_initcall_finish+0x150/0x150
    [    8.340076]  ? free_vmap_area_noflush+0x1a5/0x5c0
    [    8.340329]  ? unpoison_range+0xf/0x30
    [    8.340532]  ? ____kasan_kmalloc.constprop.0+0x84/0xa0
    [    8.340806]  ? unpoison_range+0xf/0x30
    [    8.341014]  ? unpoison_range+0xf/0x30
    [    8.341217]  do_init_module+0xf8/0x350
    [    8.341419]  load_module+0x3fe6/0x4340
    [    8.341621]  ? vm_unmap_ram+0x1d0/0x1d0
    [    8.341826]  ? ____kasan_kmalloc.constprop.0+0x84/0xa0
    [    8.342101]  ? module_frob_arch_sections+0x20/0x20
    [    8.342358]  ? __do_sys_finit_module+0x108/0x170
    [    8.342604]  __do_sys_finit_module+0x108/0x170
    [    8.342841]  ? __ia32_sys_init_module+0x40/0x40
    [    8.343083]  ? file_open_root+0x200/0x200
    [    8.343298]  ? do_sys_open+0x85/0xe0
    [    8.343491]  ? filp_open+0x50/0x50
    [    8.343675]  ? exit_to_user_mode_prepare+0xfc/0x130
    [    8.343935]  do_syscall_64+0x33/0x40
    [    8.344132]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [    8.344401] RIP: 0033:0x7f08eb887cf7
    [    8.344594] Code: 48 89 57 30 48 8b 04 24 48 89 47 38 e9 1d a0 02 00 48 89 f8 48 89 f7 48 89 d6 41
    [    8.345565] RSP: 002b:00007ffcd5c98ad8 EFLAGS: 00000246 ORIG_RAX: 0000000000000139
    [    8.345962] RAX: ffffffffffffffda RBX: 00000000008fea70 RCX: 00007f08eb887cf7
    [    8.346336] RDX: 0000000000000000 RSI: 00000000008fd9e0 RDI: 0000000000000003
    [    8.346711] RBP: 0000000000000003 R08: 0000000000000000 R09: 0000000000000001
    [    8.347085] R10: 00007f08eb8eb300 R11: 0000000000000246 R12: 00000000008fd9e0
    [    8.347460] R13: 0000000000000000 R14: 00000000008fddd0 R15: 0000000000000001
    [    8.347836] Modules linked in: lanai(+) atm
    [    8.348065] CR2: ffffc90000180024
    [    8.348244] ---[ end trace 7fdc1c668f2003e5 ]---
    [    8.348490] RIP: 0010:lanai_dev_close+0x4f/0xe5 [lanai]
    [    8.348772] Code: 00 48 c7 c7 00 d3 01 c0 e8 49 4e 0a c2 48 8d bd 08 02 00 00 e8 6e 52 14 c1 48 80
    [    8.349745] RSP: 0018:ffff8881029ef680 EFLAGS: 00010246
    [    8.350022] RAX: 000000000003fffe RBX: ffff888102fb4800 RCX: ffffffffc001a98a
    [    8.350397] RDX: ffffc90000180000 RSI: 0000000000000246 RDI: ffff888102fb4000
    [    8.350772] RBP: ffff888102fb4000 R08: ffffffff8115da8a R09: ffffed102053deaa
    [    8.351151] R10: 0000000000000003 R11: ffffed102053dea9 R12: ffff888102fb48a4
    [    8.351525] R13: ffffffffc00123c0 R14: ffff888102fb4b90 R15: ffff888102fb4b88
    [    8.351918] FS:  00007f08eb9056a0(0000) GS:ffff88815b400000(0000) knlGS:0000000000000000
    [    8.352343] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [    8.352647] CR2: ffffc90000180024 CR3: 0000000102a28000 CR4: 00000000000006f0
    [    8.353022] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [    8.353397] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [    8.353958] modprobe (95) used greatest stack depth: 26216 bytes left
    
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 22710b5f204ded5dfe2d050a8aeab4e30f2be7cd
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Sat Feb 27 16:15:06 2021 -0500

    atm: eni: dont release is never initialized
    
    [ Upstream commit 4deb550bc3b698a1f03d0332cde3df154d1b6c1e ]
    
    label err_eni_release is reachable when eni_start() fail.
    In eni_start() it calls dev->phy->start() in the last step, if start()
    fail we don't need to call phy->stop(), if start() is never called, we
    neither need to call phy->stop(), otherwise null-ptr-deref will happen.
    
    In order to fix this issue, don't call phy->stop() in label err_eni_release
    
    [    4.875714] ==================================================================
    [    4.876091] BUG: KASAN: null-ptr-deref in suni_stop+0x47/0x100 [suni]
    [    4.876433] Read of size 8 at addr 0000000000000030 by task modprobe/95
    [    4.876778]
    [    4.876862] CPU: 0 PID: 95 Comm: modprobe Not tainted 5.11.0-rc7-00090-gdcc0b49040c7 #2
    [    4.877290] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-48-gd94
    [    4.877876] Call Trace:
    [    4.878009]  dump_stack+0x7d/0xa3
    [    4.878191]  kasan_report.cold+0x10c/0x10e
    [    4.878410]  ? __slab_free+0x2f0/0x340
    [    4.878612]  ? suni_stop+0x47/0x100 [suni]
    [    4.878832]  suni_stop+0x47/0x100 [suni]
    [    4.879043]  eni_do_release+0x3b/0x70 [eni]
    [    4.879269]  eni_init_one.cold+0x1152/0x1747 [eni]
    [    4.879528]  ? _raw_spin_lock_irqsave+0x7b/0xd0
    [    4.879768]  ? eni_ioctl+0x270/0x270 [eni]
    [    4.879990]  ? __mutex_lock_slowpath+0x10/0x10
    [    4.880226]  ? eni_ioctl+0x270/0x270 [eni]
    [    4.880448]  local_pci_probe+0x6f/0xb0
    [    4.880650]  pci_device_probe+0x171/0x240
    [    4.880864]  ? pci_device_remove+0xe0/0xe0
    [    4.881086]  ? kernfs_create_link+0xb6/0x110
    [    4.881315]  ? sysfs_do_create_link_sd.isra.0+0x76/0xe0
    [    4.881594]  really_probe+0x161/0x420
    [    4.881791]  driver_probe_device+0x6d/0xd0
    [    4.882010]  device_driver_attach+0x82/0x90
    [    4.882233]  ? device_driver_attach+0x90/0x90
    [    4.882465]  __driver_attach+0x60/0x100
    [    4.882671]  ? device_driver_attach+0x90/0x90
    [    4.882903]  bus_for_each_dev+0xe1/0x140
    [    4.883114]  ? subsys_dev_iter_exit+0x10/0x10
    [    4.883346]  ? klist_node_init+0x61/0x80
    [    4.883557]  bus_add_driver+0x254/0x2a0
    [    4.883764]  driver_register+0xd3/0x150
    [    4.883971]  ? 0xffffffffc0038000
    [    4.884149]  do_one_initcall+0x84/0x250
    [    4.884355]  ? trace_event_raw_event_initcall_finish+0x150/0x150
    [    4.884674]  ? unpoison_range+0xf/0x30
    [    4.884875]  ? ____kasan_kmalloc.constprop.0+0x84/0xa0
    [    4.885150]  ? unpoison_range+0xf/0x30
    [    4.885352]  ? unpoison_range+0xf/0x30
    [    4.885557]  do_init_module+0xf8/0x350
    [    4.885760]  load_module+0x3fe6/0x4340
    [    4.885960]  ? vm_unmap_ram+0x1d0/0x1d0
    [    4.886166]  ? ____kasan_kmalloc.constprop.0+0x84/0xa0
    [    4.886441]  ? module_frob_arch_sections+0x20/0x20
    [    4.886697]  ? __do_sys_finit_module+0x108/0x170
    [    4.886941]  __do_sys_finit_module+0x108/0x170
    [    4.887178]  ? __ia32_sys_init_module+0x40/0x40
    [    4.887419]  ? file_open_root+0x200/0x200
    [    4.887634]  ? do_sys_open+0x85/0xe0
    [    4.887826]  ? filp_open+0x50/0x50
    [    4.888009]  ? fpregs_assert_state_consistent+0x4d/0x60
    [    4.888287]  ? exit_to_user_mode_prepare+0x2f/0x130
    [    4.888547]  do_syscall_64+0x33/0x40
    [    4.888739]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [    4.889010] RIP: 0033:0x7ff62fcf1cf7
    [    4.889202] Code: 48 89 57 30 48 8b 04 24 48 89 47 38 e9 1d a0 02 00 48 89 f8 48 89 f71
    [    4.890172] RSP: 002b:00007ffe6644ade8 EFLAGS: 00000246 ORIG_RAX: 0000000000000139
    [    4.890570] RAX: ffffffffffffffda RBX: 0000000000f2ca70 RCX: 00007ff62fcf1cf7
    [    4.890944] RDX: 0000000000000000 RSI: 0000000000f2b9e0 RDI: 0000000000000003
    [    4.891318] RBP: 0000000000000003 R08: 0000000000000000 R09: 0000000000000001
    [    4.891691] R10: 00007ff62fd55300 R11: 0000000000000246 R12: 0000000000f2b9e0
    [    4.892064] R13: 0000000000000000 R14: 0000000000f2bdd0 R15: 0000000000000001
    [    4.892439] ==================================================================
    
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8fc411ba59c88c2ab8fbccd76dab7db4188a79bf
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Thu Feb 18 23:30:58 2021 +1100

    powerpc/4xx: Fix build errors from mfdcr()
    
    [ Upstream commit eead089311f4d935ab5d1d8fbb0c42ad44699ada ]
    
    lkp reported a build error in fsp2.o:
    
      CC      arch/powerpc/platforms/44x/fsp2.o
      {standard input}:577: Error: unsupported relocation against base
    
    Which comes from:
    
      pr_err("GESR0: 0x%08x\n", mfdcr(base + PLB4OPB_GESR0));
    
    Where our mfdcr() macro is stringifying "base + PLB4OPB_GESR0", and
    passing that to the assembler, which obviously doesn't work.
    
    The mfdcr() macro already checks that the argument is constant using
    __builtin_constant_p(), and if not calls the out-of-line version of
    mfdcr(). But in this case GCC is smart enough to notice that "base +
    PLB4OPB_GESR0" will be constant, even though it's not something we can
    immediately stringify into a register number.
    
    Segher pointed out that passing the register number to the inline asm
    as a constant would be better, and in fact it fixes the build error,
    presumably because it gives GCC a chance to resolve the value.
    
    While we're at it, change mtdcr() similarly.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Suggested-by: Segher Boessenkool <segher@kernel.crashing.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Acked-by: Feng Tang <feng.tang@intel.com>
    Link: https://lore.kernel.org/r/20210218123058.748882-1-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de315ac77d367221adc23dcec65cb2aa0ce7f426
Author: Heiko Thiery <heiko.thiery@gmail.com>
Date:   Thu Feb 25 22:15:16 2021 +0100

    net: fec: ptp: avoid register access when ipg clock is disabled
    
    [ Upstream commit 6a4d7234ae9a3bb31181f348ade9bbdb55aeb5c5 ]
    
    When accessing the timecounter register on an i.MX8MQ the kernel hangs.
    This is only the case when the interface is down. This can be reproduced
    by reading with 'phc_ctrl eth0 get'.
    
    Like described in the change in 91c0d987a9788dcc5fe26baafd73bf9242b68900
    the igp clock is disabled when the interface is down and leads to a
    system hang.
    
    So we check if the ptp clock status before reading the timecounter
    register.
    
    Signed-off-by: Heiko Thiery <heiko.thiery@gmail.com>
    Acked-by: Richard Cochran <richardcochran@gmail.com>
    Link: https://lore.kernel.org/r/20210225211514.9115-1-heiko.thiery@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cfa7b54be1eebffef52bc3a643093ddc2cd7150a
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Mar 24 11:05:06 2021 +0100

    Linux 4.14.227
    
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Link: https://lore.kernel.org/r/20210322121920.053255560@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 336d7276c062ec1debfcc11156e58c9a4a69c034
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Mar 17 15:38:52 2021 +0100

    genirq: Disable interrupts for force threaded handlers
    
    commit 81e2073c175b887398e5bca6c004efa89983f58d upstream.
    
    With interrupt force threading all device interrupt handlers are invoked
    from kernel threads. Contrary to hard interrupt context the invocation only
    disables bottom halfs, but not interrupts. This was an oversight back then
    because any code like this will have an issue:
    
    thread(irq_A)
      irq_handler(A)
        spin_lock(&foo->lock);
    
    interrupt(irq_B)
      irq_handler(B)
        spin_lock(&foo->lock);
    
    This has been triggered with networking (NAPI vs. hrtimers) and console
    drivers where printk() happens from an interrupt which interrupted the
    force threaded handler.
    
    Now people noticed and started to change the spin_lock() in the handler to
    spin_lock_irqsave() which affects performance or add IRQF_NOTHREAD to the
    interrupt request which in turn breaks RT.
    
    Fix the root cause and not the symptom and disable interrupts before
    invoking the force threaded handler which preserves the regular semantics
    and the usefulness of the interrupt force threading as a general debugging
    tool.
    
    For not RT this is not changing much, except that during the execution of
    the threaded handler interrupts are delayed until the handler
    returns. Vs. scheduling and softirq processing there is no difference.
    
    For RT kernels there is no issue.
    
    Fixes: 8d32a307e4fa ("genirq: Provide forced interrupt threading")
    Reported-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Johan Hovold <johan@kernel.org>
    Acked-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Link: https://lore.kernel.org/r/20210317143859.513307808@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e4eec1b37c8d88823856419f5714b3b02c98175
Author: Shijie Luo <luoshijie1@huawei.com>
Date:   Fri Mar 12 01:50:51 2021 -0500

    ext4: fix potential error in ext4_do_update_inode
    
    commit 7d8bd3c76da1d94b85e6c9b7007e20e980bfcfe6 upstream.
    
    If set_large_file = 1 and errors occur in ext4_handle_dirty_metadata(),
    the error code will be overridden, go to out_brelse to avoid this
    situation.
    
    Signed-off-by: Shijie Luo <luoshijie1@huawei.com>
    Link: https://lore.kernel.org/r/20210312065051.36314-1-luoshijie1@huawei.com
    Cc: stable@kernel.org
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b778c0747226fdec5543605bebcea88790c86ea8
Author: zhangyi (F) <yi.zhang@huawei.com>
Date:   Fri Mar 5 20:05:08 2021 +0800

    ext4: do not try to set xattr into ea_inode if value is empty
    
    commit 6b22489911b726eebbf169caee52fea52013fbdd upstream.
    
    Syzbot report a warning that ext4 may create an empty ea_inode if set
    an empty extent attribute to a file on the file system which is no free
    blocks left.
    
      WARNING: CPU: 6 PID: 10667 at fs/ext4/xattr.c:1640 ext4_xattr_set_entry+0x10f8/0x1114 fs/ext4/xattr.c:1640
      ...
      Call trace:
       ext4_xattr_set_entry+0x10f8/0x1114 fs/ext4/xattr.c:1640
       ext4_xattr_block_set+0x1d0/0x1b1c fs/ext4/xattr.c:1942
       ext4_xattr_set_handle+0x8a0/0xf1c fs/ext4/xattr.c:2390
       ext4_xattr_set+0x120/0x1f0 fs/ext4/xattr.c:2491
       ext4_xattr_trusted_set+0x48/0x5c fs/ext4/xattr_trusted.c:37
       __vfs_setxattr+0x208/0x23c fs/xattr.c:177
      ...
    
    Now, ext4 try to store extent attribute into an external inode if
    ext4_xattr_block_set() return -ENOSPC, but for the case of store an
    empty extent attribute, store the extent entry into the extent
    attribute block is enough. A simple reproduce below.
    
      fallocate test.img -l 1M
      mkfs.ext4 -F -b 2048 -O ea_inode test.img
      mount test.img /mnt
      dd if=/dev/zero of=/mnt/foo bs=2048 count=500
      setfattr -n "user.test" /mnt/foo
    
    Reported-by: syzbot+98b881fdd8ebf45ab4ae@syzkaller.appspotmail.com
    Fixes: 9c6e7853c531 ("ext4: reserve space for xattr entries/names")
    Cc: stable@kernel.org
    Signed-off-by: zhangyi (F) <yi.zhang@huawei.com>
    Link: https://lore.kernel.org/r/20210305120508.298465-1-yi.zhang@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8981095a04e62b3270a49dc0dcf27260c37fd3fd
Author: zhangyi (F) <yi.zhang@huawei.com>
Date:   Wed Mar 3 21:17:02 2021 +0800

    ext4: find old entry again if failed to rename whiteout
    
    commit b7ff91fd030dc9d72ed91b1aab36e445a003af4f upstream.
    
    If we failed to add new entry on rename whiteout, we cannot reset the
    old->de entry directly, because the old->de could have moved from under
    us during make indexed dir. So find the old entry again before reset is
    needed, otherwise it may corrupt the filesystem as below.
    
      /dev/sda: Entry '00000001' in ??? (12) has deleted/unused inode 15. CLEARED.
      /dev/sda: Unattached inode 75
      /dev/sda: UNEXPECTED INCONSISTENCY; RUN fsck MANUALLY.
    
    Fixes: 6b4b8e6b4ad ("ext4: fix bug for rename with RENAME_WHITEOUT")
    Cc: stable@vger.kernel.org
    Signed-off-by: zhangyi (F) <yi.zhang@huawei.com>
    Link: https://lore.kernel.org/r/20210303131703.330415-1-yi.zhang@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a8fc597468247e886651eba186036761c137ae1
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Mon Feb 1 18:47:09 2021 +0100

    x86: Introduce TS_COMPAT_RESTART to fix get_nr_restart_syscall()
    
    commit 8c150ba2fb5995c84a7a43848250d444a3329a7d upstream.
    
    The comment in get_nr_restart_syscall() says:
    
             * The problem is that we can get here when ptrace pokes
             * syscall-like values into regs even if we're not in a syscall
             * at all.
    
    Yes, but if not in a syscall then the
    
            status & (TS_COMPAT|TS_I386_REGS_POKED)
    
    check below can't really help:
    
            - TS_COMPAT can't be set
    
            - TS_I386_REGS_POKED is only set if regs->orig_ax was changed by
              32bit debugger; and even in this case get_nr_restart_syscall()
              is only correct if the tracee is 32bit too.
    
    Suppose that a 64bit debugger plays with a 32bit tracee and
    
            * Tracee calls sleep(2) // TS_COMPAT is set
            * User interrupts the tracee by CTRL-C after 1 sec and does
              "(gdb) call func()"
            * gdb saves the regs by PTRACE_GETREGS
            * does PTRACE_SETREGS to set %rip='func' and %orig_rax=-1
            * PTRACE_CONT           // TS_COMPAT is cleared
            * func() hits int3.
            * Debugger catches SIGTRAP.
            * Restore original regs by PTRACE_SETREGS.
            * PTRACE_CONT
    
    get_nr_restart_syscall() wrongly returns __NR_restart_syscall==219, the
    tracee calls ia32_sys_call_table[219] == sys_madvise.
    
    Add the sticky TS_COMPAT_RESTART flag which survives after return to user
    mode. It's going to be removed in the next step again by storing the
    information in the restart block. As a further cleanup it might be possible
    to remove also TS_I386_REGS_POKED with that.
    
    Test-case:
    
      $ cvs -d :pserver:anoncvs:anoncvs@sourceware.org:/cvs/systemtap co ptrace-tests
      $ gcc -o erestartsys-trap-debuggee ptrace-tests/tests/erestartsys-trap-debuggee.c --m32
      $ gcc -o erestartsys-trap-debugger ptrace-tests/tests/erestartsys-trap-debugger.c -lutil
      $ ./erestartsys-trap-debugger
      Unexpected: retval 1, errno 22
      erestartsys-trap-debugger: ptrace-tests/tests/erestartsys-trap-debugger.c:421
    
    Fixes: 609c19a385c8 ("x86/ptrace: Stop setting TS_COMPAT in ptrace code")
    Reported-by: Jan Kratochvil <jan.kratochvil@redhat.com>
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210201174709.GA17895@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ceca84f010135f7221d51936a3e9fafe7a31c01
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Mon Feb 1 18:46:49 2021 +0100

    x86: Move TS_COMPAT back to asm/thread_info.h
    
    commit 66c1b6d74cd7035e85c426f0af4aede19e805c8a upstream.
    
    Move TS_COMPAT back to asm/thread_info.h, close to TS_I386_REGS_POKED.
    
    It was moved to asm/processor.h by b9d989c7218a ("x86/asm: Move the
    thread_info::status field to thread_struct"), then later 37a8f7c38339
    ("x86/asm: Move 'status' from thread_struct to thread_info") moved the
    'status' field back but TS_COMPAT was forgotten.
    
    Preparatory patch to fix the COMPAT case for get_nr_restart_syscall()
    
    Fixes: 609c19a385c8 ("x86/ptrace: Stop setting TS_COMPAT in ptrace code")
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210201174649.GA17880@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f72a4dad7e68726771691a22b3abb7ab5674d83d
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Mon Feb 1 18:46:41 2021 +0100

    kernel, fs: Introduce and use set_restart_fn() and arch_set_restart_data()
    
    commit 5abbe51a526253b9f003e9a0a195638dc882d660 upstream.
    
    Preparation for fixing get_nr_restart_syscall() on X86 for COMPAT.
    
    Add a new helper which sets restart_block->fn and calls a dummy
    arch_set_restart_data() helper.
    
    Fixes: 609c19a385c8 ("x86/ptrace: Stop setting TS_COMPAT in ptrace code")
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210201174641.GA17871@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e90d015157574ec01fc36913390da48a10d329f
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Mar 18 20:26:47 2021 +0100

    x86/ioapic: Ignore IRQ2 again
    
    commit a501b048a95b79e1e34f03cac3c87ff1e9f229ad upstream.
    
    Vitaly ran into an issue with hotplugging CPU0 on an Amazon instance where
    the matrix allocator claimed to be out of vectors. He analyzed it down to
    the point that IRQ2, the PIC cascade interrupt, which is supposed to be not
    ever routed to the IO/APIC ended up having an interrupt vector assigned
    which got moved during unplug of CPU0.
    
    The underlying issue is that IRQ2 for various reasons (see commit
    af174783b925 ("x86: I/O APIC: Never configure IRQ2" for details) is treated
    as a reserved system vector by the vector core code and is not accounted as
    a regular vector. The Amazon BIOS has an routing entry of pin2 to IRQ2
    which causes the IO/APIC setup to claim that interrupt which is granted by
    the vector domain because there is no sanity check. As a consequence the
    allocation counter of CPU0 underflows which causes a subsequent unplug to
    fail with:
    
      [ ... ] CPU 0 has 4294967295 vectors, 589 available. Cannot disable CPU
    
    There is another sanity check missing in the matrix allocator, but the
    underlying root cause is that the IO/APIC code lost the IRQ2 ignore logic
    during the conversion to irqdomains.
    
    For almost 6 years nobody complained about this wreckage, which might
    indicate that this requirement could be lifted, but for any system which
    actually has a PIC IRQ2 is unusable by design so any routing entry has no
    effect and the interrupt cannot be connected to a device anyway.
    
    Due to that and due to history biased paranoia reasons restore the IRQ2
    ignore logic and treat it as non existent despite a routing entry claiming
    otherwise.
    
    Fixes: d32932d02e18 ("x86/irq: Convert IOAPIC to use hierarchical irqdomain interfaces")
    Reported-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210318192819.636943062@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6570bcd39536b09442d2c3e8629989dad4a351ab
Author: Kan Liang <kan.liang@linux.intel.com>
Date:   Fri Mar 12 05:21:37 2021 -0800

    perf/x86/intel: Fix a crash caused by zero PEBS status
    
    commit d88d05a9e0b6d9356e97129d4ff9942d765f46ea upstream.
    
    A repeatable crash can be triggered by the perf_fuzzer on some Haswell
    system.
    https://lore.kernel.org/lkml/7170d3b-c17f-1ded-52aa-cc6d9ae999f4@maine.edu/
    
    For some old CPUs (HSW and earlier), the PEBS status in a PEBS record
    may be mistakenly set to 0. To minimize the impact of the defect, the
    commit was introduced to try to avoid dropping the PEBS record for some
    cases. It adds a check in the intel_pmu_drain_pebs_nhm(), and updates
    the local pebs_status accordingly. However, it doesn't correct the PEBS
    status in the PEBS record, which may trigger the crash, especially for
    the large PEBS.
    
    It's possible that all the PEBS records in a large PEBS have the PEBS
    status 0. If so, the first get_next_pebs_record_by_bit() in the
    __intel_pmu_pebs_event() returns NULL. The at = NULL. Since it's a large
    PEBS, the 'count' parameter must > 1. The second
    get_next_pebs_record_by_bit() will crash.
    
    Besides the local pebs_status, correct the PEBS status in the PEBS
    record as well.
    
    Fixes: 01330d7288e0 ("perf/x86: Allow zero PEBS status with only single active event")
    Reported-by: Vince Weaver <vincent.weaver@maine.edu>
    Suggested-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/1615555298-140216-1-git-send-email-kan.liang@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e20e32780c9472587e0b6ea51ed65764ff47799
Author: Tyrel Datwyler <tyreld@linux.ibm.com>
Date:   Mon Mar 15 15:48:21 2021 -0600

    PCI: rpadlpar: Fix potential drc_name corruption in store functions
    
    commit cc7a0bb058b85ea03db87169c60c7cfdd5d34678 upstream.
    
    Both add_slot_store() and remove_slot_store() try to fix up the
    drc_name copied from the store buffer by placing a NUL terminator at
    nbyte + 1 or in place of a '\n' if present. However, the static buffer
    that we copy the drc_name data into is not zeroed and can contain
    anything past the n-th byte.
    
    This is problematic if a '\n' byte appears in that buffer after nbytes
    and the string copied into the store buffer was not NUL terminated to
    start with as the strchr() search for a '\n' byte will mark this
    incorrectly as the end of the drc_name string resulting in a drc_name
    string that contains garbage data after the n-th byte.
    
    Additionally it will cause us to overwrite that '\n' byte on the stack
    with NUL, potentially corrupting data on the stack.
    
    The following debugging shows an example of the drmgr utility writing
    "PHB 4543" to the add_slot sysfs attribute, but add_slot_store()
    logging a corrupted string value.
    
      drmgr: drmgr: -c phb -a -s PHB 4543 -d 1
      add_slot_store: drc_name = PHB 4543°|<82>!, rc = -19
    
    Fix this by using strscpy() instead of memcpy() to ensure the string
    is NUL terminated when copied into the static drc_name buffer.
    Further, since the string is now NUL terminated the code only needs to
    change '\n' to '\0' when present.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>
    [mpe: Reformat change log and add mention of possible stack corruption]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210315214821.452959-1-tyreld@linux.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce50a50defea6f5a67147c9c1683fcec23003e38
Author: Ye Xiang <xiang.ye@intel.com>
Date:   Wed Mar 3 14:36:14 2021 +0800

    iio: hid-sensor-temperature: Fix issues of timestamp channel
    
    commit 141e7633aa4d2838d1f6ad5c74cccc53547c16ac upstream.
    
    This patch fixes 2 issues of timestamp channel:
    1. This patch ensures that there is sufficient space and correct
    alignment for the timestamp.
    2. Correct the timestamp channel scan index.
    
    Fixes: 59d0f2da3569 ("iio: hid: Add temperature sensor support")
    Signed-off-by: Ye Xiang <xiang.ye@intel.com>
    Cc: <Stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210303063615.12130-4-xiang.ye@intel.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e649e1fac8f8ba7268359d73471c558a6abf945
Author: Ye Xiang <xiang.ye@intel.com>
Date:   Sat Jan 30 18:25:30 2021 +0800

    iio: hid-sensor-prox: Fix scale not correct issue
    
    commit d68c592e02f6f49a88e705f13dfc1883432cf300 upstream.
    
    Currently, the proxy sensor scale is zero because it just return the
    exponent directly. To fix this issue, this patch use
    hid_sensor_format_scale to process the scale first then return the
    output.
    
    Fixes: 39a3a0138f61 ("iio: hid-sensors: Added Proximity Sensor Driver")
    Signed-off-by: Ye Xiang <xiang.ye@intel.com>
    Link: https://lore.kernel.org/r/20210130102530.31064-1-xiang.ye@intel.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f549ef3bef1777df7e875d21c1c6f8c83079606
Author: Ye Xiang <xiang.ye@intel.com>
Date:   Wed Mar 3 14:36:12 2021 +0800

    iio: hid-sensor-humidity: Fix alignment issue of timestamp channel
    
    commit 37e89e574dc238a4ebe439543c5ab4fbb2f0311b upstream.
    
    This patch ensures that, there is sufficient space and correct
    alignment for the timestamp.
    
    Fixes: d7ed89d5aadf ("iio: hid: Add humidity sensor support")
    Signed-off-by: Ye Xiang <xiang.ye@intel.com>
    Cc: <Stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210303063615.12130-2-xiang.ye@intel.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13a3f9c3ebe922ff6661ed8556f77edae1713494
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Mon Mar 1 16:04:21 2021 +0800

    iio: gyro: mpu3050: Fix error handling in mpu3050_trigger_handler
    
    commit 6dbbbe4cfd398704b72b21c1d4a5d3807e909d60 upstream.
    
    There is one regmap_bulk_read() call in mpu3050_trigger_handler
    that we have caught its return value bug lack further handling.
    Check and terminate the execution flow just like the other three
    regmap_bulk_read() calls in this function.
    
    Fixes: 3904b28efb2c7 ("iio: gyro: Add driver for the MPU-3050 gyroscope")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/20210301080421.13436-1-dinghao.liu@zju.edu.cn
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4385c549a97b46fe6c7fab65d36f113f5cb54756
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Feb 16 22:42:13 2021 +0300

    iio: adis16400: Fix an error code in adis16400_initial_setup()
    
    commit a71266e454b5df10d019b06f5ebacd579f76be28 upstream.
    
    This is to silence a new Smatch warning:
    
        drivers/iio/imu/adis16400.c:492 adis16400_initial_setup()
        warn: sscanf doesn't return error codes
    
    If the condition "if (st->variant->flags & ADIS16400_HAS_SLOW_MODE) {"
    is false then we return 1 instead of returning 0 and probe will fail.
    
    Fixes: 72a868b38bdd ("iio: imu: check sscanf return value")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: <Stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/YCwgFb3JVG6qrlQ+@mwanda
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57708315ad79d28e0e5494a373934c12505bc68e
Author: Jonathan Albrieux <jonathan.albrieux@gmail.com>
Date:   Wed Jan 13 16:18:07 2021 +0100

    iio:adc:qcom-spmi-vadc: add default scale to LR_MUX2_BAT_ID channel
    
    commit 7d200b283aa049fcda0d43dd6e03e9e783d2799c upstream.
    
    Checking at both msm8909-pm8916.dtsi and msm8916.dtsi from downstream
    it is indicated that "batt_id" channel has to be scaled with the default
    function:
    
            chan@31 {
                    label = "batt_id";
                    reg = <0x31>;
                    qcom,decimation = <0>;
                    qcom,pre-div-channel-scaling = <0>;
                    qcom,calibration-type = "ratiometric";
                    qcom,scale-function = <0>;
                    qcom,hw-settle-time = <0xb>;
                    qcom,fast-avg-setup = <0>;
            };
    
    Change LR_MUX2_BAT_ID scaling accordingly.
    
    Signed-off-by: Jonathan Albrieux <jonathan.albrieux@gmail.com>
    Acked-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Fixes: 7c271eea7b8a ("iio: adc: spmi-vadc: Changes to support different scaling")
    Link: https://lore.kernel.org/r/20210113151808.4628-2-jonathan.albrieux@gmail.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2b156c8c20182e091d25ce84fed1dad87983e14
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Sun Jan 24 19:50:34 2021 +0000

    iio:adc:stm32-adc: Add HAS_IOMEM dependency
    
    commit 121875b28e3bd7519a675bf8ea2c2e793452c2bd upstream.
    
    Seems that there are config combinations in which this driver gets enabled
    and hence selects the MFD, but with out HAS_IOMEM getting pulled in
    via some other route.  MFD is entirely contained in an
    if HAS_IOMEM block, leading to the build issue in this bugzilla.
    
    https://bugzilla.kernel.org/show_bug.cgi?id=209889
    
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Link: https://lore.kernel.org/r/20210124195034.22576-1-jic23@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8a60e788813c0c8c37b241061ad955e3e81ea9e
Author: Jim Lin <jilin@nvidia.com>
Date:   Thu Mar 11 14:42:41 2021 +0800

    usb: gadget: configfs: Fix KASAN use-after-free
    
    commit 98f153a10da403ddd5e9d98a3c8c2bb54bb5a0b6 upstream.
    
    When gadget is disconnected, running sequence is like this.
    . composite_disconnect
    . Call trace:
      usb_string_copy+0xd0/0x128
      gadget_config_name_configuration_store+0x4
      gadget_config_name_attr_store+0x40/0x50
      configfs_write_file+0x198/0x1f4
      vfs_write+0x100/0x220
      SyS_write+0x58/0xa8
    . configfs_composite_unbind
    . configfs_composite_bind
    
    In configfs_composite_bind, it has
    "cn->strings.s = cn->configuration;"
    
    When usb_string_copy is invoked. it would
    allocate memory, copy input string, release previous pointed memory space,
    and use new allocated memory.
    
    When gadget is connected, host sends down request to get information.
    Call trace:
      usb_gadget_get_string+0xec/0x168
      lookup_string+0x64/0x98
      composite_setup+0xa34/0x1ee8
    
    If gadget is disconnected and connected quickly, in the failed case,
    cn->configuration memory has been released by usb_string_copy kfree but
    configfs_composite_bind hasn't been run in time to assign new allocated
    "cn->configuration" pointer to "cn->strings.s".
    
    When "strlen(s->s) of usb_gadget_get_string is being executed, the dangling
    memory is accessed, "BUG: KASAN: use-after-free" error occurs.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Jim Lin <jilin@nvidia.com>
    Signed-off-by: Macpaul Lin <macpaul.lin@mediatek.com>
    Link: https://lore.kernel.org/r/1615444961-13376-1-git-send-email-macpaul.lin@mediatek.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 526c6889a85504689d2ca6609f1ee7f2b34e9a06
Author: Macpaul Lin <macpaul.lin@mediatek.com>
Date:   Thu Jun 18 17:13:38 2020 +0800

    USB: replace hardcode maximum usb string length by definition
    
    commit 81c7462883b0cc0a4eeef0687f80ad5b5baee5f6 upstream.
    
    Replace hardcoded maximum USB string length (126 bytes) by definition
    "USB_MAX_STRING_LEN".
    
    Signed-off-by: Macpaul Lin <macpaul.lin@mediatek.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/1592471618-29428-1-git-send-email-macpaul.lin@mediatek.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e89b021c52c1d43f8729a0d3f991db440959815f
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Wed Mar 17 15:06:54 2021 -0400

    usb-storage: Add quirk to defeat Kindle's automatic unload
    
    commit 546aa0e4ea6ed81b6c51baeebc4364542fa3f3a7 upstream.
    
    Matthias reports that the Amazon Kindle automatically removes its
    emulated media if it doesn't receive another SCSI command within about
    one second after a SYNCHRONIZE CACHE.  It does so even when the host
    has sent a PREVENT MEDIUM REMOVAL command.  The reason for this
    behavior isn't clear, although it's not hard to make some guesses.
    
    At any rate, the results can be unexpected for anyone who tries to
    access the Kindle in an unusual fashion, and in theory they can lead
    to data loss (for example, if one file is closed and synchronized
    while other files are still in the middle of being written).
    
    To avoid such problems, this patch creates a new usb-storage quirks
    flag telling the driver always to issue a REQUEST SENSE following a
    SYNCHRONIZE CACHE command, and adds an unusual_devs entry for the
    Kindle with the flag set.  This is sufficient to prevent the Kindle
    from doing its automatic unload, without interfering with proper
    operation.
    
    Another possible way to deal with this would be to increase the
    frequency of TEST UNIT READY polling that the kernel normally carries
    out for removable-media storage devices.  However that would increase
    the overall load on the system and it is not as reliable, because the
    user can override the polling interval.  Changing the driver's
    behavior is safer and has minimal overhead.
    
    CC: <stable@vger.kernel.org>
    Reported-and-tested-by: Matthias Schwarzott <zzam@gentoo.org>
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/20210317190654.GA497856@rowland.harvard.edu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4cf14e6bea47a4443b024355bc2d58f260a73e1
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Mon Mar 15 14:04:27 2021 -0700

    nvme-rdma: fix possible hang when failing to set io queues
    
    [ Upstream commit c4c6df5fc84659690d4391d1fba155cd94185295 ]
    
    We only setup io queues for nvme controllers, and it makes absolutely no
    sense to allow a controller (re)connect without any I/O queues.  If we
    happen to fail setting the queue count for any reason, we should not allow
    this to be a successful reconnect as I/O has no chance in going through.
    Instead just fail and schedule another reconnect.
    
    Reported-by: Chao Leng <lengchao@huawei.com>
    Fixes: 711023071960 ("nvme-rdma: add a NVMe over Fabrics RDMA host driver")
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Chao Leng <lengchao@huawei.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 61c2d3ef7cc9198502559fdc87cbe245bfbe8bf6
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Mar 12 10:42:11 2021 +0300

    scsi: lpfc: Fix some error codes in debugfs
    
    commit 19f1bc7edf0f97186810e13a88f5b62069d89097 upstream.
    
    If copy_from_user() or kstrtoull() fail then the correct behavior is to
    return a negative error code.
    
    Link: https://lore.kernel.org/r/YEsbU/UxYypVrC7/@mwanda
    Fixes: f9bb2da11db8 ("[SCSI] lpfc 8.3.27: T10 additions for SLI4")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d73da3500c420d1e8b4b5262b7633d2eaa6b879c
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Mon Mar 1 02:22:40 2021 +0300

    net/qrtr: fix __netdev_alloc_skb call
    
    commit 093b036aa94e01a0bea31a38d7f0ee28a2749023 upstream.
    
    syzbot found WARNING in __alloc_pages_nodemask()[1] when order >= MAX_ORDER.
    It was caused by a huge length value passed from userspace to qrtr_tun_write_iter(),
    which tries to allocate skb. Since the value comes from the untrusted source
    there is no need to raise a warning in __alloc_pages_nodemask().
    
    [1] WARNING in __alloc_pages_nodemask+0x5f8/0x730 mm/page_alloc.c:5014
    Call Trace:
     __alloc_pages include/linux/gfp.h:511 [inline]
     __alloc_pages_node include/linux/gfp.h:524 [inline]
     alloc_pages_node include/linux/gfp.h:538 [inline]
     kmalloc_large_node+0x60/0x110 mm/slub.c:3999
     __kmalloc_node_track_caller+0x319/0x3f0 mm/slub.c:4496
     __kmalloc_reserve net/core/skbuff.c:150 [inline]
     __alloc_skb+0x4e4/0x5a0 net/core/skbuff.c:210
     __netdev_alloc_skb+0x70/0x400 net/core/skbuff.c:446
     netdev_alloc_skb include/linux/skbuff.h:2832 [inline]
     qrtr_endpoint_post+0x84/0x11b0 net/qrtr/qrtr.c:442
     qrtr_tun_write_iter+0x11f/0x1a0 net/qrtr/tun.c:98
     call_write_iter include/linux/fs.h:1901 [inline]
     new_sync_write+0x426/0x650 fs/read_write.c:518
     vfs_write+0x791/0xa30 fs/read_write.c:605
     ksys_write+0x12d/0x250 fs/read_write.c:658
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Reported-by: syzbot+80dccaee7c6630fa9dcf@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Acked-by: Alexander Lobakin <alobakin@pm.me>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1faba25ad0dd476c42100a6fa2078698d120882d
Author: Daniel Kobras <kobras@puzzle-itc.de>
Date:   Sat Feb 27 00:04:37 2021 +0100

    sunrpc: fix refcount leak for rpc auth modules
    
    commit f1442d6349a2e7bb7a6134791bdc26cb776c79af upstream.
    
    If an auth module's accept op returns SVC_CLOSE, svc_process_common()
    enters a call path that does not call svc_authorise() before leaving the
    function, and thus leaks a reference on the auth module's refcount. Hence,
    make sure calls to svc_authenticate() and svc_authorise() are paired for
    all call paths, to make sure rpc auth modules can be unloaded.
    
    Signed-off-by: Daniel Kobras <kobras@puzzle-itc.de>
    Fixes: 4d712ef1db05 ("svcauth_gss: Close connection when dropping an incoming message")
    Link: https://lore.kernel.org/linux-nfs/3F1B347F-B809-478F-A1E9-0BE98E22B0F0@oracle.com/T/#t
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b12f99e87e88616a8a7a9a16088b63a93ad605d
Author: Timo Rothenpieler <timo@rothenpieler.org>
Date:   Tue Feb 23 00:36:19 2021 +0100

    svcrdma: disable timeouts on rdma backchannel
    
    commit 6820bf77864d5894ff67b5c00d7dba8f92011e3d upstream.
    
    This brings it in line with the regular tcp backchannel, which also has
    all those timeouts disabled.
    
    Prevents the backchannel from timing out, getting some async operations
    like server side copying getting stuck indefinitely on the client side.
    
    Signed-off-by: Timo Rothenpieler <timo@rothenpieler.org>
    Fixes: 5d252f90a800 ("svcrdma: Add class for RDMA backwards direction transport")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fcb5d257a121a2f637866e79090a56d3890f6ea2
Author: Joe Korty <joe.korty@concurrent-rt.com>
Date:   Fri Feb 26 09:38:20 2021 -0500

    NFSD: Repair misuse of sv_lock in 5.10.16-rt30.
    
    commit c7de87ff9dac5f396f62d584f3908f80ddc0e07b upstream.
    
    [ This problem is in mainline, but only rt has the chops to be
    able to detect it. ]
    
    Lockdep reports a circular lock dependency between serv->sv_lock and
    softirq_ctl.lock on system shutdown, when using a kernel built with
    CONFIG_PREEMPT_RT=y, and a nfs mount exists.
    
    This is due to the definition of spin_lock_bh on rt:
    
            local_bh_disable();
            rt_spin_lock(lock);
    
    which forces a softirq_ctl.lock -> serv->sv_lock dependency.  This is
    not a problem as long as _every_ lock of serv->sv_lock is a:
    
            spin_lock_bh(&serv->sv_lock);
    
    but there is one of the form:
    
            spin_lock(&serv->sv_lock);
    
    This is what is causing the circular dependency splat.  The spin_lock()
    grabs the lock without first grabbing softirq_ctl.lock via local_bh_disable.
    If later on in the critical region,  someone does a local_bh_disable, we
    get a serv->sv_lock -> softirq_ctrl.lock dependency established.  Deadlock.
    
    Fix is to make serv->sv_lock be locked with spin_lock_bh everywhere, no
    exceptions.
    
    [  OK  ] Stopped target NFS client services.
             Stopping Logout off all iSCSI sessions on shutdown...
             Stopping NFS server and services...
    [  109.442380]
    [  109.442385] ======================================================
    [  109.442386] WARNING: possible circular locking dependency detected
    [  109.442387] 5.10.16-rt30 #1 Not tainted
    [  109.442389] ------------------------------------------------------
    [  109.442390] nfsd/1032 is trying to acquire lock:
    [  109.442392] ffff994237617f60 ((softirq_ctrl.lock).lock){+.+.}-{2:2}, at: __local_bh_disable_ip+0xd9/0x270
    [  109.442405]
    [  109.442405] but task is already holding lock:
    [  109.442406] ffff994245cb00b0 (&serv->sv_lock){+.+.}-{0:0}, at: svc_close_list+0x1f/0x90
    [  109.442415]
    [  109.442415] which lock already depends on the new lock.
    [  109.442415]
    [  109.442416]
    [  109.442416] the existing dependency chain (in reverse order) is:
    [  109.442417]
    [  109.442417] -> #1 (&serv->sv_lock){+.+.}-{0:0}:
    [  109.442421]        rt_spin_lock+0x2b/0xc0
    [  109.442428]        svc_add_new_perm_xprt+0x42/0xa0
    [  109.442430]        svc_addsock+0x135/0x220
    [  109.442434]        write_ports+0x4b3/0x620
    [  109.442438]        nfsctl_transaction_write+0x45/0x80
    [  109.442440]        vfs_write+0xff/0x420
    [  109.442444]        ksys_write+0x4f/0xc0
    [  109.442446]        do_syscall_64+0x33/0x40
    [  109.442450]        entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [  109.442454]
    [  109.442454] -> #0 ((softirq_ctrl.lock).lock){+.+.}-{2:2}:
    [  109.442457]        __lock_acquire+0x1264/0x20b0
    [  109.442463]        lock_acquire+0xc2/0x400
    [  109.442466]        rt_spin_lock+0x2b/0xc0
    [  109.442469]        __local_bh_disable_ip+0xd9/0x270
    [  109.442471]        svc_xprt_do_enqueue+0xc0/0x4d0
    [  109.442474]        svc_close_list+0x60/0x90
    [  109.442476]        svc_close_net+0x49/0x1a0
    [  109.442478]        svc_shutdown_net+0x12/0x40
    [  109.442480]        nfsd_destroy+0xc5/0x180
    [  109.442482]        nfsd+0x1bc/0x270
    [  109.442483]        kthread+0x194/0x1b0
    [  109.442487]        ret_from_fork+0x22/0x30
    [  109.442492]
    [  109.442492] other info that might help us debug this:
    [  109.442492]
    [  109.442493]  Possible unsafe locking scenario:
    [  109.442493]
    [  109.442493]        CPU0                    CPU1
    [  109.442494]        ----                    ----
    [  109.442495]   lock(&serv->sv_lock);
    [  109.442496]                                lock((softirq_ctrl.lock).lock);
    [  109.442498]                                lock(&serv->sv_lock);
    [  109.442499]   lock((softirq_ctrl.lock).lock);
    [  109.442501]
    [  109.442501]  *** DEADLOCK ***
    [  109.442501]
    [  109.442501] 3 locks held by nfsd/1032:
    [  109.442503]  #0: ffffffff93b49258 (nfsd_mutex){+.+.}-{3:3}, at: nfsd+0x19a/0x270
    [  109.442508]  #1: ffff994245cb00b0 (&serv->sv_lock){+.+.}-{0:0}, at: svc_close_list+0x1f/0x90
    [  109.442512]  #2: ffffffff93a81b20 (rcu_read_lock){....}-{1:2}, at: rt_spin_lock+0x5/0xc0
    [  109.442518]
    [  109.442518] stack backtrace:
    [  109.442519] CPU: 0 PID: 1032 Comm: nfsd Not tainted 5.10.16-rt30 #1
    [  109.442522] Hardware name: Supermicro X9DRL-3F/iF/X9DRL-3F/iF, BIOS 3.2 09/22/2015
    [  109.442524] Call Trace:
    [  109.442527]  dump_stack+0x77/0x97
    [  109.442533]  check_noncircular+0xdc/0xf0
    [  109.442546]  __lock_acquire+0x1264/0x20b0
    [  109.442553]  lock_acquire+0xc2/0x400
    [  109.442564]  rt_spin_lock+0x2b/0xc0
    [  109.442570]  __local_bh_disable_ip+0xd9/0x270
    [  109.442573]  svc_xprt_do_enqueue+0xc0/0x4d0
    [  109.442577]  svc_close_list+0x60/0x90
    [  109.442581]  svc_close_net+0x49/0x1a0
    [  109.442585]  svc_shutdown_net+0x12/0x40
    [  109.442588]  nfsd_destroy+0xc5/0x180
    [  109.442590]  nfsd+0x1bc/0x270
    [  109.442595]  kthread+0x194/0x1b0
    [  109.442600]  ret_from_fork+0x22/0x30
    [  109.518225] nfsd: last server has exited, flushing export cache
    [  OK  ] Stopped NFSv4 ID-name mapping service.
    [  OK  ] Stopped GSSAPI Proxy Daemon.
    [  OK  ] Stopped NFS Mount Daemon.
    [  OK  ] Stopped NFS status monitor for NFSv2/3 locking..
    
    Fixes: 719f8bcc883e ("svcrpc: fix xpt_list traversal locking on shutdown")
    Signed-off-by: Joe Korty <joe.korty@concurrent-rt.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8780d0e7227be97a3884ee786bcac60a24ce91ec
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Mon Mar 15 15:34:51 2021 -0700

    nvmet: don't check iosqes,iocqes for discovery controllers
    
    commit d218a8a3003e84ab136e69a4e30dd4ec7dab2d22 upstream.
    
    From the base spec, Figure 78:
    
      "Controller Configuration, these fields are defined as parameters to
       configure an "I/O Controller (IOC)" and not to configure a "Discovery
       Controller (DC).
    
       ...
       If the controller does not support I/O queues, then this field shall
       be read-only with a value of 0h
    
    Just perform this check for I/O controllers.
    
    Fixes: a07b4970f464 ("nvmet: add a generic NVMe target")
    Reported-by: Belanger, Martin <Martin.Belanger@dell.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5255aa75e4d6bcb6f90d77e9bb7054498d190620
Author: Filipe Manana <fdmanana@suse.com>
Date:   Thu Mar 11 14:31:05 2021 +0000

    btrfs: fix race when cloning extent buffer during rewind of an old root
    
    commit dbcc7d57bffc0c8cac9dac11bec548597d59a6a5 upstream.
    
    While resolving backreferences, as part of a logical ino ioctl call or
    fiemap, we can end up hitting a BUG_ON() when replaying tree mod log
    operations of a root, triggering a stack trace like the following:
    
      ------------[ cut here ]------------
      kernel BUG at fs/btrfs/ctree.c:1210!
      invalid opcode: 0000 [#1] SMP KASAN PTI
      CPU: 1 PID: 19054 Comm: crawl_335 Tainted: G        W         5.11.0-2d11c0084b02-misc-next+ #89
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-1 04/01/2014
      RIP: 0010:__tree_mod_log_rewind+0x3b1/0x3c0
      Code: 05 48 8d 74 10 (...)
      RSP: 0018:ffffc90001eb70b8 EFLAGS: 00010297
      RAX: 0000000000000000 RBX: ffff88812344e400 RCX: ffffffffb28933b6
      RDX: 0000000000000007 RSI: dffffc0000000000 RDI: ffff88812344e42c
      RBP: ffffc90001eb7108 R08: 1ffff11020b60a20 R09: ffffed1020b60a20
      R10: ffff888105b050f9 R11: ffffed1020b60a1f R12: 00000000000000ee
      R13: ffff8880195520c0 R14: ffff8881bc958500 R15: ffff88812344e42c
      FS:  00007fd1955e8700(0000) GS:ffff8881f5600000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 00007efdb7928718 CR3: 000000010103a006 CR4: 0000000000170ee0
      Call Trace:
       btrfs_search_old_slot+0x265/0x10d0
       ? lock_acquired+0xbb/0x600
       ? btrfs_search_slot+0x1090/0x1090
       ? free_extent_buffer.part.61+0xd7/0x140
       ? free_extent_buffer+0x13/0x20
       resolve_indirect_refs+0x3e9/0xfc0
       ? lock_downgrade+0x3d0/0x3d0
       ? __kasan_check_read+0x11/0x20
       ? add_prelim_ref.part.11+0x150/0x150
       ? lock_downgrade+0x3d0/0x3d0
       ? __kasan_check_read+0x11/0x20
       ? lock_acquired+0xbb/0x600
       ? __kasan_check_write+0x14/0x20
       ? do_raw_spin_unlock+0xa8/0x140
       ? rb_insert_color+0x30/0x360
       ? prelim_ref_insert+0x12d/0x430
       find_parent_nodes+0x5c3/0x1830
       ? resolve_indirect_refs+0xfc0/0xfc0
       ? lock_release+0xc8/0x620
       ? fs_reclaim_acquire+0x67/0xf0
       ? lock_acquire+0xc7/0x510
       ? lock_downgrade+0x3d0/0x3d0
       ? lockdep_hardirqs_on_prepare+0x160/0x210
       ? lock_release+0xc8/0x620
       ? fs_reclaim_acquire+0x67/0xf0
       ? lock_acquire+0xc7/0x510
       ? poison_range+0x38/0x40
       ? unpoison_range+0x14/0x40
       ? trace_hardirqs_on+0x55/0x120
       btrfs_find_all_roots_safe+0x142/0x1e0
       ? find_parent_nodes+0x1830/0x1830
       ? btrfs_inode_flags_to_xflags+0x50/0x50
       iterate_extent_inodes+0x20e/0x580
       ? tree_backref_for_extent+0x230/0x230
       ? lock_downgrade+0x3d0/0x3d0
       ? read_extent_buffer+0xdd/0x110
       ? lock_downgrade+0x3d0/0x3d0
       ? __kasan_check_read+0x11/0x20
       ? lock_acquired+0xbb/0x600
       ? __kasan_check_write+0x14/0x20
       ? _raw_spin_unlock+0x22/0x30
       ? __kasan_check_write+0x14/0x20
       iterate_inodes_from_logical+0x129/0x170
       ? iterate_inodes_from_logical+0x129/0x170
       ? btrfs_inode_flags_to_xflags+0x50/0x50
       ? iterate_extent_inodes+0x580/0x580
       ? __vmalloc_node+0x92/0xb0
       ? init_data_container+0x34/0xb0
       ? init_data_container+0x34/0xb0
       ? kvmalloc_node+0x60/0x80
       btrfs_ioctl_logical_to_ino+0x158/0x230
       btrfs_ioctl+0x205e/0x4040
       ? __might_sleep+0x71/0xe0
       ? btrfs_ioctl_get_supported_features+0x30/0x30
       ? getrusage+0x4b6/0x9c0
       ? __kasan_check_read+0x11/0x20
       ? lock_release+0xc8/0x620
       ? __might_fault+0x64/0xd0
       ? lock_acquire+0xc7/0x510
       ? lock_downgrade+0x3d0/0x3d0
       ? lockdep_hardirqs_on_prepare+0x210/0x210
       ? lockdep_hardirqs_on_prepare+0x210/0x210
       ? __kasan_check_read+0x11/0x20
       ? do_vfs_ioctl+0xfc/0x9d0
       ? ioctl_file_clone+0xe0/0xe0
       ? lock_downgrade+0x3d0/0x3d0
       ? lockdep_hardirqs_on_prepare+0x210/0x210
       ? __kasan_check_read+0x11/0x20
       ? lock_release+0xc8/0x620
       ? __task_pid_nr_ns+0xd3/0x250
       ? lock_acquire+0xc7/0x510
       ? __fget_files+0x160/0x230
       ? __fget_light+0xf2/0x110
       __x64_sys_ioctl+0xc3/0x100
       do_syscall_64+0x37/0x80
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      RIP: 0033:0x7fd1976e2427
      Code: 00 00 90 48 8b 05 (...)
      RSP: 002b:00007fd1955e5cf8 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
      RAX: ffffffffffffffda RBX: 00007fd1955e5f40 RCX: 00007fd1976e2427
      RDX: 00007fd1955e5f48 RSI: 00000000c038943b RDI: 0000000000000004
      RBP: 0000000001000000 R08: 0000000000000000 R09: 00007fd1955e6120
      R10: 0000557835366b00 R11: 0000000000000246 R12: 0000000000000004
      R13: 00007fd1955e5f48 R14: 00007fd1955e5f40 R15: 00007fd1955e5ef8
      Modules linked in:
      ---[ end trace ec8931a1c36e57be ]---
    
      (gdb) l *(__tree_mod_log_rewind+0x3b1)
      0xffffffff81893521 is in __tree_mod_log_rewind (fs/btrfs/ctree.c:1210).
      1205                     * the modification. as we're going backwards, we do the
      1206                     * opposite of each operation here.
      1207                     */
      1208                    switch (tm->op) {
      1209                    case MOD_LOG_KEY_REMOVE_WHILE_FREEING:
      1210                            BUG_ON(tm->slot < n);
      1211                            fallthrough;
      1212                    case MOD_LOG_KEY_REMOVE_WHILE_MOVING:
      1213                    case MOD_LOG_KEY_REMOVE:
      1214                            btrfs_set_node_key(eb, &tm->key, tm->slot);
    
    Here's what happens to hit that BUG_ON():
    
    1) We have one tree mod log user (through fiemap or the logical ino ioctl),
       with a sequence number of 1, so we have fs_info->tree_mod_seq == 1;
    
    2) Another task is at ctree.c:balance_level() and we have eb X currently as
       the root of the tree, and we promote its single child, eb Y, as the new
       root.
    
       Then, at ctree.c:balance_level(), we call:
    
          tree_mod_log_insert_root(eb X, eb Y, 1);
    
    3) At tree_mod_log_insert_root() we create tree mod log elements for each
       slot of eb X, of operation type MOD_LOG_KEY_REMOVE_WHILE_FREEING each
       with a ->logical pointing to ebX->start. These are placed in an array
       named tm_list.
       Lets assume there are N elements (N pointers in eb X);
    
    4) Then, still at tree_mod_log_insert_root(), we create a tree mod log
       element of operation type MOD_LOG_ROOT_REPLACE, ->logical set to
       ebY->start, ->old_root.logical set to ebX->start, ->old_root.level set
       to the level of eb X and ->generation set to the generation of eb X;
    
    5) Then tree_mod_log_insert_root() calls tree_mod_log_free_eb() with
       tm_list as argument. After that, tree_mod_log_free_eb() calls
       __tree_mod_log_insert() for each member of tm_list in reverse order,
       from highest slot in eb X, slot N - 1, to slot 0 of eb X;
    
    6) __tree_mod_log_insert() sets the sequence number of each given tree mod
       log operation - it increments fs_info->tree_mod_seq and sets
       fs_info->tree_mod_seq as the sequence number of the given tree mod log
       operation.
    
       This means that for the tm_list created at tree_mod_log_insert_root(),
       the element corresponding to slot 0 of eb X has the highest sequence
       number (1 + N), and the element corresponding to the last slot has the
       lowest sequence number (2);
    
    7) Then, after inserting tm_list's elements into the tree mod log rbtree,
       the MOD_LOG_ROOT_REPLACE element is inserted, which gets the highest
       sequence number, which is N + 2;
    
    8) Back to ctree.c:balance_level(), we free eb X by calling
       btrfs_free_tree_block() on it. Because eb X was created in the current
       transaction, has no other references and writeback did not happen for
       it, we add it back to the free space cache/tree;
    
    9) Later some other task T allocates the metadata extent from eb X, since
       it is marked as free space in the space cache/tree, and uses it as a
       node for some other btree;
    
    10) The tree mod log user task calls btrfs_search_old_slot(), which calls
        get_old_root(), and finally that calls __tree_mod_log_oldest_root()
        with time_seq == 1 and eb_root == eb Y;
    
    11) First iteration of the while loop finds the tree mod log element with
        sequence number N + 2, for the logical address of eb Y and of type
        MOD_LOG_ROOT_REPLACE;
    
    12) Because the operation type is MOD_LOG_ROOT_REPLACE, we don't break out
        of the loop, and set root_logical to point to tm->old_root.logical
        which corresponds to the logical address of eb X;
    
    13) On the next iteration of the while loop, the call to
        tree_mod_log_search_oldest() returns the smallest tree mod log element
        for the logical address of eb X, which has a sequence number of 2, an
        operation type of MOD_LOG_KEY_REMOVE_WHILE_FREEING and corresponds to
        the old slot N - 1 of eb X (eb X had N items in it before being freed);
    
    14) We then break out of the while loop and return the tree mod log operation
        of type MOD_LOG_ROOT_REPLACE (eb Y), and not the one for slot N - 1 of
        eb X, to get_old_root();
    
    15) At get_old_root(), we process the MOD_LOG_ROOT_REPLACE operation
        and set "logical" to the logical address of eb X, which was the old
        root. We then call tree_mod_log_search() passing it the logical
        address of eb X and time_seq == 1;
    
    16) Then before calling tree_mod_log_search(), task T adds a key to eb X,
        which results in adding a tree mod log operation of type
        MOD_LOG_KEY_ADD to the tree mod log - this is done at
        ctree.c:insert_ptr() - but after adding the tree mod log operation
        and before updating the number of items in eb X from 0 to 1...
    
    17) The task at get_old_root() calls tree_mod_log_search() and gets the
        tree mod log operation of type MOD_LOG_KEY_ADD just added by task T.
        Then it enters the following if branch:
    
        if (old_root && tm && tm->op != MOD_LOG_KEY_REMOVE_WHILE_FREEING) {
           (...)
        } (...)
    
        Calls read_tree_block() for eb X, which gets a reference on eb X but
        does not lock it - task T has it locked.
        Then it clones eb X while it has nritems set to 0 in its header, before
        task T sets nritems to 1 in eb X's header. From hereupon we use the
        clone of eb X which no other task has access to;
    
    18) Then we call __tree_mod_log_rewind(), passing it the MOD_LOG_KEY_ADD
        mod log operation we just got from tree_mod_log_search() in the
        previous step and the cloned version of eb X;
    
    19) At __tree_mod_log_rewind(), we set the local variable "n" to the number
        of items set in eb X's clone, which is 0. Then we enter the while loop,
        and in its first iteration we process the MOD_LOG_KEY_ADD operation,
        which just decrements "n" from 0 to (u32)-1, since "n" is declared with
        a type of u32. At the end of this iteration we call rb_next() to find the
        next tree mod log operation for eb X, that gives us the mod log operation
        of type MOD_LOG_KEY_REMOVE_WHILE_FREEING, for slot 0, with a sequence
        number of N + 1 (steps 3 to 6);
    
    20) Then we go back to the top of the while loop and trigger the following
        BUG_ON():
    
            (...)
            switch (tm->op) {
            case MOD_LOG_KEY_REMOVE_WHILE_FREEING:
                     BUG_ON(tm->slot < n);
                     fallthrough;
            (...)
    
        Because "n" has a value of (u32)-1 (4294967295) and tm->slot is 0.
    
    Fix this by taking a read lock on the extent buffer before cloning it at
    ctree.c:get_old_root(). This should be done regardless of the extent
    buffer having been freed and reused, as a concurrent task might be
    modifying it (while holding a write lock on it).
    
    Reported-by: Zygo Blaxell <ce3g8jdj@umail.furryterror.org>
    Link: https://lore.kernel.org/linux-btrfs/20210227155037.GN28049@hungrycats.org/
    Fixes: 834328a8493079 ("Btrfs: tree mod log's old roots could still be part of the tree")
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0aec0eb3da906a2a01f5ef727cc0efbf7c4c40ca
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Tue Dec 5 10:14:42 2017 -0300

    tools build feature: Check if pthread_barrier_t is available
    
    commit 25ab5abf5b141d7fd13eed506c7458aa04749c29 upstream.
    
    As 'perf bench futex wake-parallel" will use this, which is not
    available in older systems such as versions of the android NDK used in
    my container build tests (r12b and r15c at the moment).
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: James Yang <james.yang@arm.com
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Kim Phillips <kim.phillips@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: https://lkml.kernel.org/n/tip-1i7iv54in4wj08lwo55b0pzv@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4a37e39e9a6ca4515cf9e71a9d6a507afb48367
Author: Changbin Du <changbin.du@gmail.com>
Date:   Tue Jan 28 23:29:38 2020 +0800

    perf: Make perf able to build with latest libbfd
    
    commit 0ada120c883d4f1f6aafd01cf0fbb10d8bbba015 upstream.
    
    libbfd has changed the bfd_section_* macros to inline functions
    bfd_section_<field> since 2019-09-18. See below two commits:
      o http://www.sourceware.org/ml/gdb-cvs/2019-09/msg00064.html
      o https://www.sourceware.org/ml/gdb-cvs/2019-09/msg00072.html
    
    This fix make perf able to build with both old and new libbfd.
    
    Signed-off-by: Changbin Du <changbin.du@gmail.com>
    Acked-by: Jiri Olsa <jolsa@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lore.kernel.org/lkml/20200128152938.31413-1-changbin.du@gmail.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9792af08bd83ad3af430510a3e7d801452a0a582
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Thu Jun 13 12:04:19 2019 -0300

    tools build: Check if gettid() is available before providing helper
    
    commit 4541a8bb13a86e504416a13360c8dc64d2fd612a upstream.
    
    Laura reported that the perf build failed in fedora when we got a glibc
    that provides gettid(), which I reproduced using fedora rawhide with the
    glibc-devel-2.29.9000-26.fc31.x86_64 package.
    
    Add a feature check to avoid providing a gettid() helper in such
    systems.
    
    On a fedora rawhide system with this patch applied we now get:
    
      [root@7a5f55352234 perf]# grep gettid /tmp/build/perf/FEATURE-DUMP
      feature-gettid=1
      [root@7a5f55352234 perf]# cat /tmp/build/perf/feature/test-gettid.make.output
      [root@7a5f55352234 perf]# ldd /tmp/build/perf/feature/test-gettid.bin
              linux-vdso.so.1 (0x00007ffc6b1f6000)
              libc.so.6 => /lib64/libc.so.6 (0x00007f04e0a74000)
              /lib64/ld-linux-x86-64.so.2 (0x00007f04e0c47000)
      [root@7a5f55352234 perf]# nm /tmp/build/perf/feature/test-gettid.bin | grep -w gettid
                       U gettid@@GLIBC_2.30
      [root@7a5f55352234 perf]#
    
    While on a fedora:29 system:
    
      [acme@quaco perf]$ grep gettid /tmp/build/perf/FEATURE-DUMP
      feature-gettid=0
      [acme@quaco perf]$ cat /tmp/build/perf/feature/test-gettid.make.output
      test-gettid.c: In function ‘main’:
      test-gettid.c:8:9: error: implicit declaration of function ‘gettid’; did you mean ‘getgid’? [-Werror=implicit-function-declaration]
        return gettid();
               ^~~~~~
               getgid
      cc1: all warnings being treated as errors
      [acme@quaco perf]$
    
    Reported-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Florian Weimer <fweimer@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Stephane Eranian <eranian@google.com>
    Link: https://lkml.kernel.org/n/tip-yfy3ch53agmklwu9o7rlgf9c@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4c25e20037184d8ca5b4ec4c9e501152b80d163
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Wed Nov 21 17:42:00 2018 -0300

    tools build feature: Check if eventfd() is available
    
    commit 11c6cbe706f218a8dc7e1f962f12b3a52ddd33a9 upstream.
    
    A new 'perf bench epoll' will use this, and to disable it for older
    systems, add a feature test for this API.
    
    This is just a simple program that if successfully compiled, means that
    the feature is present, at least at the library level, in a build that
    sets the output directory to /tmp/build/perf (using O=/tmp/build/perf),
    we end up with:
    
      $ ls -la /tmp/build/perf/feature/test-eventfd*
      -rwxrwxr-x. 1 acme acme 8176 Nov 21 15:58 /tmp/build/perf/feature/test-eventfd.bin
      -rw-rw-r--. 1 acme acme  588 Nov 21 15:58 /tmp/build/perf/feature/test-eventfd.d
      -rw-rw-r--. 1 acme acme    0 Nov 21 15:58 /tmp/build/perf/feature/test-eventfd.make.output
      $ ldd /tmp/build/perf/feature/test-eventfd.bin
              linux-vdso.so.1 (0x00007fff3bf3f000)
              libc.so.6 => /lib64/libc.so.6 (0x00007fa984061000)
              /lib64/ld-linux-x86-64.so.2 (0x00007fa984417000)
      $ grep eventfd -A 2 -B 2 /tmp/build/perf/FEATURE-DUMP
      feature-dwarf=1
      feature-dwarf_getlocations=1
      feature-eventfd=1
      feature-fortify-source=1
      feature-sync-compare-and-swap=1
      $
    
    The main thing here is that in the end we'll have -DHAVE_EVENTFD in
    CFLAGS, and then the 'perf bench' entry needing that API can be
    selectively pruned.
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Davidlohr Bueso <dbueso@suse.de>
    Cc: Jason Baron <jbaron@akamai.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: https://lkml.kernel.org/n/tip-wkeldwob7dpx6jvtuzl8164k@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 495b9f779b55c051c31fdfdd7ff17a9cf48401bf
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Nov 19 16:56:22 2018 -0300

    tools build feature: Check if get_current_dir_name() is available
    
    commit 8feb8efef97a134933620071e0b6384cb3238b4e upstream.
    
    As the namespace support code will use this, which is not available in
    some non _GNU_SOURCE libraries such as Android's bionic used in my
    container build tests (r12b and r15c at the moment).
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: https://lkml.kernel.org/n/tip-x56ypm940pwclwu45d7jfj47@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3e84a500d51b8e471cc97dfb67b770c8f2575f3
Author: Jiri Olsa <jolsa@redhat.com>
Date:   Sun Jan 12 20:22:59 2020 +0100

    perf tools: Use %define api.pure full instead of %pure-parser
    
    commit fc8c0a99223367b071c83711259d754b6bb7a379 upstream.
    
    bison deprecated the "%pure-parser" directive in favor of "%define
    api.pure full".
    
    The api.pure got introduced in bison 2.3 (Oct 2007), so it seems safe to
    use it without any version check.
    
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Clark Williams <williams@redhat.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lore.kernel.org/lkml/20200112192259.GA35080@krava
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1912d45e65c90f7dc649f770c8288b37dcc35a52
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Mar 19 15:47:25 2021 +0100

    Revert "PM: runtime: Update device status before letting suppliers suspend"
    
    commit 0cab893f409c53634d0d818fa414641cbcdb0dab upstream.
    
    Revert commit 44cc89f76464 ("PM: runtime: Update device status
    before letting suppliers suspend") that introduced a race condition
    into __rpm_callback() which allowed a concurrent rpm_resume() to
    run and resume the device prematurely after its status had been
    changed to RPM_SUSPENDED by __rpm_callback().
    
    Fixes: 44cc89f76464 ("PM: runtime: Update device status before letting suppliers suspend")
    Link: https://lore.kernel.org/linux-pm/24dfb6fc-5d54-6ee2-9195-26428b7ecf8a@intel.com/
    Reported-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: 4.10+ <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a2e35bb5436f4d515c91ba4f59460f34820c2aa
Author: Piotr Krysiuk <piotras@gmail.com>
Date:   Tue Mar 16 09:47:02 2021 +0100

    bpf: Prohibit alu ops for pointer types not defining ptr_limit
    
    commit f232326f6966cf2a1d1db7bc917a4ce5f9f55f76 upstream.
    
    The purpose of this patch is to streamline error propagation and in particular
    to propagate retrieve_ptr_limit() errors for pointer types that are not defining
    a ptr_limit such that register-based alu ops against these types can be rejected.
    
    The main rationale is that a gap has been identified by Piotr in the existing
    protection against speculatively out-of-bounds loads, for example, in case of
    ctx pointers, unprivileged programs can still perform pointer arithmetic. This
    can be abused to execute speculatively out-of-bounds loads without restrictions
    and thus extract contents of kernel memory.
    
    Fix this by rejecting unprivileged programs that attempt any pointer arithmetic
    on unprotected pointer types. The two affected ones are pointer to ctx as well
    as pointer to map. Field access to a modified ctx' pointer is rejected at a
    later point in time in the verifier, and 7c6967326267 ("bpf: Permit map_ptr
    arithmetic with opcode add and offset 0") only relevant for root-only use cases.
    Risk of unprivileged program breakage is considered very low.
    
    Fixes: 7c6967326267 ("bpf: Permit map_ptr arithmetic with opcode add and offset 0")
    Fixes: b2157399cc98 ("bpf: prevent out-of-bounds speculation")
    Signed-off-by: Piotr Krysiuk <piotras@gmail.com>
    Co-developed-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9312209015f27c39fefb9d2a26bbc598a1ffe345
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Mon Feb 22 14:30:10 2021 -0800

    net: dsa: b53: Support setting learning on port
    
    commit f9b3827ee66cfcf297d0acd6ecf33653a5f297ef upstream.
    
    Add support for being able to set the learning attribute on port, and
    make sure that the standalone ports start up with learning disabled.
    
    We can remove the code in bcm_sf2 that configured the ports learning
    attribute because we want the standalone ports to have learning disabled
    by default and port 7 cannot be bridged, so its learning attribute will
    not change past its initial configuration.
    
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Vladimir Oltean <olteanv@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 481e908f12d1ecbe33e81bd4286a8639eb626062
Author: Piotr Krysiuk <piotras@gmail.com>
Date:   Tue Mar 16 09:47:02 2021 +0100

    bpf: Add sanity check for upper ptr_limit
    
    commit 1b1597e64e1a610c7a96710fc4717158e98a08b3 upstream.
    
    Given we know the max possible value of ptr_limit at the time of retrieving
    the latter, add basic assertions, so that the verifier can bail out if
    anything looks odd and reject the program. Nothing triggered this so far,
    but it also does not hurt to have these.
    
    Signed-off-by: Piotr Krysiuk <piotras@gmail.com>
    Co-developed-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed9bdaeea3b144ad854f62b1e6296e32c64ab121
Author: Piotr Krysiuk <piotras@gmail.com>
Date:   Tue Mar 16 08:26:25 2021 +0100

    bpf: Simplify alu_limit masking for pointer arithmetic
    
    commit b5871dca250cd391885218b99cc015aca1a51aea upstream.
    
    Instead of having the mov32 with aux->alu_limit - 1 immediate, move this
    operation to retrieve_ptr_limit() instead to simplify the logic and to
    allow for subsequent sanity boundary checks inside retrieve_ptr_limit().
    This avoids in future that at the time of the verifier masking rewrite
    we'd run into an underflow which would not sign extend due to the nature
    of mov32 instruction.
    
    Signed-off-by: Piotr Krysiuk <piotras@gmail.com>
    Co-developed-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d132bdbf47256a3d8a8a51bb6fe79379f430b88
Author: Piotr Krysiuk <piotras@gmail.com>
Date:   Tue Mar 16 08:20:16 2021 +0100

    bpf: Fix off-by-one for area size in creating mask to left
    
    commit 10d2bb2e6b1d8c4576c56a748f697dbeb8388899 upstream.
    
    retrieve_ptr_limit() computes the ptr_limit for registers with stack and
    map_value type. ptr_limit is the size of the memory area that is still
    valid / in-bounds from the point of the current position and direction
    of the operation (add / sub). This size will later be used for masking
    the operation such that attempting out-of-bounds access in the speculative
    domain is redirected to remain within the bounds of the current map value.
    
    When masking to the right the size is correct, however, when masking to
    the left, the size is off-by-one which would lead to an incorrect mask
    and thus incorrect arithmetic operation in the non-speculative domain.
    Piotr found that if the resulting alu_limit value is zero, then the
    BPF_MOV32_IMM() from the fixup_bpf_calls() rewrite will end up loading
    0xffffffff into AX instead of sign-extending to the full 64 bit range,
    and as a result, this allows abuse for executing speculatively out-of-
    bounds loads against 4GB window of address space and thus extracting the
    contents of kernel memory via side-channel.
    
    Fixes: 979d63d50c0c ("bpf: prevent out of bounds speculation on pointer arithmetic")
    Signed-off-by: Piotr Krysiuk <piotras@gmail.com>
    Co-developed-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8ef63ebb05d6cab616bd0ee3f42728e1968dafb
Author: Jan Kara <jack@suse.cz>
Date:   Wed Mar 17 17:44:14 2021 +0100

    ext4: check journal inode extents more carefully
    
    commit ce9f24cccdc019229b70a5c15e2b09ad9c0ab5d1 upstream.
    
    Currently, system zones just track ranges of block, that are "important"
    fs metadata (bitmaps, group descriptors, journal blocks, etc.). This
    however complicates how extent tree (or indirect blocks) can be checked
    for inodes that actually track such metadata - currently the journal
    inode but arguably we should be treating quota files or resize inode
    similarly. We cannot run __ext4_ext_check() on such metadata inodes when
    loading their extents as that would immediately trigger the validity
    checks and so we just hack around that and special-case the journal
    inode. This however leads to a situation that a journal inode which has
    extent tree of depth at least one can have invalid extent tree that gets
    unnoticed until ext4_cache_extents() crashes.
    
    To overcome this limitation, track inode number each system zone belongs
    to (0 is used for zones not belonging to any inode). We can then verify
    inode number matches the expected one when verifying extent tree and
    thus avoid the false errors. With this there's no need to to
    special-case journal inode during extent tree checking anymore so remove
    it.
    
    Fixes: 0a944e8a6c66 ("ext4: don't perform block validity checks on the journal inode")
    Reported-by: Wolfgang Frisch <wolfgang.frisch@suse.com>
    Reviewed-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20200728130437.7804-4-jack@suse.cz
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c29aa97c3950720d1d5ec719ff0cf3e1f6014956
Author: Jan Kara <jack@suse.cz>
Date:   Wed Mar 17 17:44:13 2021 +0100

    ext4: don't allow overlapping system zones
    
    commit bf9a379d0980e7413d94cb18dac73db2bfc5f470 upstream.
    
    Currently, add_system_zone() just silently merges two added system zones
    that overlap. However the overlap should not happen and it generally
    suggests that some unrelated metadata overlap which indicates the fs is
    corrupted. We should have caught such problems earlier (e.g. in
    ext4_check_descriptors()) but add this check as another line of defense.
    In later patch we also use this for stricter checking of journal inode
    extent tree.
    
    Reviewed-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20200728130437.7804-3-jack@suse.cz
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c71ee21031783f6b0f6ed53bdf5b91abd3a5d69b
Author: Jan Kara <jack@suse.cz>
Date:   Wed Mar 17 17:44:12 2021 +0100

    ext4: handle error of ext4_setup_system_zone() on remount
    
    commit d176b1f62f242ab259ff665a26fbac69db1aecba upstream.
    
    ext4_setup_system_zone() can fail. Handle the failure in ext4_remount().
    
    Reviewed-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20200728130437.7804-2-jack@suse.cz
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 429e720837d9020e7023598a6c895d62abeb558a
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Mar 17 16:34:35 2021 +0100

    Linux 4.14.226
    
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Link: https://lore.kernel.org/r/20210315135740.245494252@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01548b63e52d37fbfd4411e1f0177fbe0fedfd63
Author: Juergen Gross <jgross@suse.com>
Date:   Mon Mar 15 09:22:38 2021 +0100

    xen/events: avoid handling the same event on two cpus at the same time
    
    commit b6622798bc50b625a1e62f82c7190df40c1f5b21 upstream.
    
    When changing the cpu affinity of an event it can happen today that
    (with some unlucky timing) the same event will be handled on the old
    and the new cpu at the same time.
    
    Avoid that by adding an "event active" flag to the per-event data and
    call the handler only if this flag isn't set.
    
    Cc: stable@vger.kernel.org
    Reported-by: Julien Grall <julien@xen.org>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Julien Grall <jgrall@amazon.com>
    Link: https://lore.kernel.org/r/20210306161833.4552-4-jgross@suse.com
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c67a252b7fb746a66890919c445f84e3ced0c640
Author: Juergen Gross <jgross@suse.com>
Date:   Mon Mar 15 09:22:37 2021 +0100

    xen/events: don't unmask an event channel when an eoi is pending
    
    commit 25da4618af240fbec6112401498301a6f2bc9702 upstream.
    
    An event channel should be kept masked when an eoi is pending for it.
    When being migrated to another cpu it might be unmasked, though.
    
    In order to avoid this keep three different flags for each event channel
    to be able to distinguish "normal" masking/unmasking from eoi related
    masking/unmasking and temporary masking. The event channel should only
    be able to generate an interrupt if all flags are cleared.
    
    Cc: stable@vger.kernel.org
    Fixes: 54c9de89895e ("xen/events: add a new "late EOI" evtchn framework")
    Reported-by: Julien Grall <julien@xen.org>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Julien Grall <jgrall@amazon.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Tested-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Link: https://lore.kernel.org/r/20210306161833.4552-3-jgross@suse.com
    
    [boris -- corrected Fixed tag format]
    
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f8246118c728084ef996cd0ffd02829d1e93806
Author: Juergen Gross <jgross@suse.com>
Date:   Mon Mar 15 09:22:37 2021 +0100

    xen/events: reset affinity of 2-level event when tearing it down
    
    commit 9e77d96b8e2724ed00380189f7b0ded61113b39f upstream.
    
    When creating a new event channel with 2-level events the affinity
    needs to be reset initially in order to avoid using an old affinity
    from earlier usage of the event channel port. So when tearing an event
    channel down reset all affinity bits.
    
    The same applies to the affinity when onlining a vcpu: all old
    affinity settings for this vcpu must be reset. As percpu events get
    initialized before the percpu event channel hook is called,
    resetting of the affinities happens after offlining a vcpu (this is
    working, as initial percpu memory is zeroed out).
    
    Cc: stable@vger.kernel.org
    Reported-by: Julien Grall <julien@xen.org>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Julien Grall <jgrall@amazon.com>
    Link: https://lore.kernel.org/r/20210306161833.4552-2-jgross@suse.com
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3604ea9698b37626336c34512238e7d5e27511e7
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Sat Mar 13 18:29:49 2021 +0100

    iio: imu: adis16400: release allocated memory on failure
    
    commit ab612b1daf415b62c58e130cb3d0f30b255a14d0 upstream.
    
    In adis_update_scan_mode, if allocation for adis->buffer fails,
    previously allocated adis->xfer needs to be released.
    
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Reviewed-by: Alexandru Ardelean <alexandru.ardelean@analog.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32cf75dc1a5fbd53940da8e9d9b31c43c7acd1cc
Author: Marc Zyngier <maz@kernel.org>
Date:   Mon Mar 15 11:08:33 2021 +0000

    KVM: arm64: Fix exclusive limit for IPA size
    
    Commit 262b003d059c6671601a19057e9fe1a5e7f23722 upstream.
    
    When registering a memslot, we check the size and location of that
    memslot against the IPA size to ensure that we can provide guest
    access to the whole of the memory.
    
    Unfortunately, this check rejects memslot that end-up at the exact
    limit of the addressing capability for a given IPA size. For example,
    it refuses the creation of a 2GB memslot at 0x8000000 with a 32bit
    IPA space.
    
    Fix it by relaxing the check to accept a memslot reaching the
    limit of the IPA space.
    
    Fixes: c3058d5da222 ("arm/arm64: KVM: Ensure memslots are within KVM_PHYS_SIZE")
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Cc: stable@vger.kernel.org # 4.4, 4.9, 4.14, 4.19
    Reviewed-by: Andrew Jones <drjones@redhat.com>
    Link: https://lore.kernel.org/r/20210311100016.3830038-3-maz@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17384195e625229f58f5013bf3a95350a4deb87c
Author: Boyang Yu <byu@arista.com>
Date:   Fri Jun 28 19:06:36 2019 +0000

    hwmon: (lm90) Fix max6658 sporadic wrong temperature reading
    
    commit 62456189f3292c62f87aef363f204886dc1d4b48 upstream.
    
    max6658 may report unrealistically high temperature during
    the driver initialization, for which, its overtemp alarm pin
    also gets asserted. For certain devices implementing overtemp
    protection based on that pin, it may further trigger a reset to
    the device. By reproducing the problem, the wrong reading is
    found to be coincident with changing the conversion rate.
    
    To mitigate this issue, set the stop bit before changing the
    conversion rate and unset it thereafter. After such change, the
    wrong reading is not reproduced. Apply this change only to the
    max6657 kind for now, controlled by flag LM90_PAUSE_ON_CONFIG.
    
    Signed-off-by: Boyang Yu <byu@arista.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Cc: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89d00c7365002bf213088f85901bde5842999811
Author: Lior Ribak <liorribak@gmail.com>
Date:   Fri Mar 12 21:07:41 2021 -0800

    binfmt_misc: fix possible deadlock in bm_register_write
    
    commit e7850f4d844e0acfac7e570af611d89deade3146 upstream.
    
    There is a deadlock in bm_register_write:
    
    First, in the begining of the function, a lock is taken on the binfmt_misc
    root inode with inode_lock(d_inode(root)).
    
    Then, if the user used the MISC_FMT_OPEN_FILE flag, the function will call
    open_exec on the user-provided interpreter.
    
    open_exec will call a path lookup, and if the path lookup process includes
    the root of binfmt_misc, it will try to take a shared lock on its inode
    again, but it is already locked, and the code will get stuck in a deadlock
    
    To reproduce the bug:
    $ echo ":iiiii:E::ii::/proc/sys/fs/binfmt_misc/bla:F" > /proc/sys/fs/binfmt_misc/register
    
    backtrace of where the lock occurs (#5):
    0  schedule () at ./arch/x86/include/asm/current.h:15
    1  0xffffffff81b51237 in rwsem_down_read_slowpath (sem=0xffff888003b202e0, count=<optimized out>, state=state@entry=2) at kernel/locking/rwsem.c:992
    2  0xffffffff81b5150a in __down_read_common (state=2, sem=<optimized out>) at kernel/locking/rwsem.c:1213
    3  __down_read (sem=<optimized out>) at kernel/locking/rwsem.c:1222
    4  down_read (sem=<optimized out>) at kernel/locking/rwsem.c:1355
    5  0xffffffff811ee22a in inode_lock_shared (inode=<optimized out>) at ./include/linux/fs.h:783
    6  open_last_lookups (op=0xffffc9000022fe34, file=0xffff888004098600, nd=0xffffc9000022fd10) at fs/namei.c:3177
    7  path_openat (nd=nd@entry=0xffffc9000022fd10, op=op@entry=0xffffc9000022fe34, flags=flags@entry=65) at fs/namei.c:3366
    8  0xffffffff811efe1c in do_filp_open (dfd=<optimized out>, pathname=pathname@entry=0xffff8880031b9000, op=op@entry=0xffffc9000022fe34) at fs/namei.c:3396
    9  0xffffffff811e493f in do_open_execat (fd=fd@entry=-100, name=name@entry=0xffff8880031b9000, flags=<optimized out>, flags@entry=0) at fs/exec.c:913
    10 0xffffffff811e4a92 in open_exec (name=<optimized out>) at fs/exec.c:948
    11 0xffffffff8124aa84 in bm_register_write (file=<optimized out>, buffer=<optimized out>, count=19, ppos=<optimized out>) at fs/binfmt_misc.c:682
    12 0xffffffff811decd2 in vfs_write (file=file@entry=0xffff888004098500, buf=buf@entry=0xa758d0 ":iiiii:E::ii::i:CF
    ", count=count@entry=19, pos=pos@entry=0xffffc9000022ff10) at fs/read_write.c:603
    13 0xffffffff811defda in ksys_write (fd=<optimized out>, buf=0xa758d0 ":iiiii:E::ii::i:CF
    ", count=19) at fs/read_write.c:658
    14 0xffffffff81b49813 in do_syscall_64 (nr=<optimized out>, regs=0xffffc9000022ff58) at arch/x86/entry/common.c:46
    15 0xffffffff81c0007c in entry_SYSCALL_64 () at arch/x86/entry/entry_64.S:120
    
    To solve the issue, the open_exec call is moved to before the write
    lock is taken by bm_register_write
    
    Link: https://lkml.kernel.org/r/20210228224414.95962-1-liorribak@gmail.com
    Fixes: 948b701a607f1 ("binfmt_misc: add persistent opened binary handler for containers")
    Signed-off-by: Lior Ribak <liorribak@gmail.com>
    Acked-by: Helge Deller <deller@gmx.de>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f0f0040e80ff6a06663ad9eb09c6f49958515ed
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Thu Mar 4 07:34:11 2021 +0530

    powerpc/64s: Fix instruction encoding for lis in ppc_function_entry()
    
    commit cea15316ceee2d4a51dfdecd79e08a438135416c upstream.
    
    'lis r2,N' is 'addis r2,0,N' and the instruction encoding in the macro
    LIS_R2 is incorrect (it currently maps to 'addis r0,r2,N'). Fix the
    same.
    
    Fixes: c71b7eff426f ("powerpc: Add ABIv2 support to ppc_function_entry")
    Cc: stable@vger.kernel.org # v3.16+
    Reported-by: Jiri Olsa <jolsa@redhat.com>
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Acked-by: Segher Boessenkool <segher@kernel.crashing.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210304020411.16796-1-naveen.n.rao@linux.vnet.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb040adf6d66b1d5bad5b0fa6b4f886260061f33
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Fri Mar 12 21:08:03 2021 -0800

    include/linux/sched/mm.h: use rcu_dereference in in_vfork()
    
    [ Upstream commit 149fc787353f65b7e72e05e7b75d34863266c3e2 ]
    
    Fix a sparse warning by using rcu_dereference().  Technically this is a
    bug and a sufficiently aggressive compiler could reload the `real_parent'
    pointer outside the protection of the rcu lock (and access freed memory),
    but I think it's pretty unlikely to happen.
    
    Link: https://lkml.kernel.org/r/20210221194207.1351703-1-willy@infradead.org
    Fixes: b18dc5f291c0 ("mm, oom: skip vforked tasks from being selected")
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Reviewed-by: Miaohe Lin <linmiaohe@huawei.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 881f908e9463fa15911224541fd63f36bb537411
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Mar 12 21:07:04 2021 -0800

    stop_machine: mark helpers __always_inline
    
    [ Upstream commit cbf78d85079cee662c45749ef4f744d41be85d48 ]
    
    With clang-13, some functions only get partially inlined, with a
    specialized version referring to a global variable.  This triggers a
    harmless build-time check for the intel-rng driver:
    
    WARNING: modpost: drivers/char/hw_random/intel-rng.o(.text+0xe): Section mismatch in reference from the function stop_machine() to the function .init.text:intel_rng_hw_init()
    The function stop_machine() references
    the function __init intel_rng_hw_init().
    This is often because stop_machine lacks a __init
    annotation or the annotation of intel_rng_hw_init is wrong.
    
    In this instance, an easy workaround is to force the stop_machine()
    function to be inline, along with related interfaces that did not show the
    same behavior at the moment, but theoretically could.
    
    The combination of the two patches listed below triggers the behavior in
    clang-13, but individually these commits are correct.
    
    Link: https://lkml.kernel.org/r/20210225130153.1956990-1-arnd@kernel.org
    Fixes: fe5595c07400 ("stop_machine: Provide stop_machine_cpuslocked()")
    Fixes: ee527cd3a20c ("Use stop_machine_run in the Intel RNG driver")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Cc: "Paul E. McKenney" <paulmck@kernel.org>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Prarit Bhargava <prarit@redhat.com>
    Cc: Daniel Bristot de Oliveira <bristot@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Valentin Schneider <valentin.schneider@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9aef75f753631a05de59a773158ca948810cfc13
Author: Daiyue Zhang <zhangdaiyue1@huawei.com>
Date:   Mon Mar 1 14:10:53 2021 +0800

    configfs: fix a use-after-free in __configfs_open_file
    
    [ Upstream commit 14fbbc8297728e880070f7b077b3301a8c698ef9 ]
    
    Commit b0841eefd969 ("configfs: provide exclusion between IO and removals")
    uses ->frag_dead to mark the fragment state, thus no bothering with extra
    refcount on config_item when opening a file. The configfs_get_config_item
    was removed in __configfs_open_file, but not with config_item_put. So the
    refcount on config_item will lost its balance, causing use-after-free
    issues in some occasions like this:
    
    Test:
    1. Mount configfs on /config with read-only items:
    drwxrwx--- 289 root   root            0 2021-04-01 11:55 /config
    drwxr-xr-x   2 root   root            0 2021-04-01 11:54 /config/a
    --w--w--w-   1 root   root         4096 2021-04-01 11:53 /config/a/1.txt
    ......
    
    2. Then run:
    for file in /config
    do
    echo $file
    grep -R 'key' $file
    done
    
    3. __configfs_open_file will be called in parallel, the first one
    got called will do:
    if (file->f_mode & FMODE_READ) {
            if (!(inode->i_mode & S_IRUGO))
                    goto out_put_module;
                            config_item_put(buffer->item);
                                    kref_put()
                                            package_details_release()
                                                    kfree()
    
    the other one will run into use-after-free issues like this:
    BUG: KASAN: use-after-free in __configfs_open_file+0x1bc/0x3b0
    Read of size 8 at addr fffffff155f02480 by task grep/13096
    CPU: 0 PID: 13096 Comm: grep VIP: 00 Tainted: G        W       4.14.116-kasan #1
    TGID: 13096 Comm: grep
    Call trace:
    dump_stack+0x118/0x160
    kasan_report+0x22c/0x294
    __asan_load8+0x80/0x88
    __configfs_open_file+0x1bc/0x3b0
    configfs_open_file+0x28/0x34
    do_dentry_open+0x2cc/0x5c0
    vfs_open+0x80/0xe0
    path_openat+0xd8c/0x2988
    do_filp_open+0x1c4/0x2fc
    do_sys_open+0x23c/0x404
    SyS_openat+0x38/0x48
    
    Allocated by task 2138:
    kasan_kmalloc+0xe0/0x1ac
    kmem_cache_alloc_trace+0x334/0x394
    packages_make_item+0x4c/0x180
    configfs_mkdir+0x358/0x740
    vfs_mkdir2+0x1bc/0x2e8
    SyS_mkdirat+0x154/0x23c
    el0_svc_naked+0x34/0x38
    
    Freed by task 13096:
    kasan_slab_free+0xb8/0x194
    kfree+0x13c/0x910
    package_details_release+0x524/0x56c
    kref_put+0xc4/0x104
    config_item_put+0x24/0x34
    __configfs_open_file+0x35c/0x3b0
    configfs_open_file+0x28/0x34
    do_dentry_open+0x2cc/0x5c0
    vfs_open+0x80/0xe0
    path_openat+0xd8c/0x2988
    do_filp_open+0x1c4/0x2fc
    do_sys_open+0x23c/0x404
    SyS_openat+0x38/0x48
    el0_svc_naked+0x34/0x38
    
    To fix this issue, remove the config_item_put in
    __configfs_open_file to balance the refcount of config_item.
    
    Fixes: b0841eefd969 ("configfs: provide exclusion between IO and removals")
    Signed-off-by: Daiyue Zhang <zhangdaiyue1@huawei.com>
    Signed-off-by: Yi Chen <chenyi77@huawei.com>
    Signed-off-by: Ge Qiu <qiuge@huawei.com>
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Acked-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ce410cafb4b367ec9aea4c1bc272ba877cef6ec
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Tue Mar 9 19:30:17 2021 -0800

    block: rsxx: fix error return code of rsxx_pci_probe()
    
    [ Upstream commit df66617bfe87487190a60783d26175b65d2502ce ]
    
    When create_singlethread_workqueue returns NULL to card->event_wq, no
    error return code of rsxx_pci_probe() is assigned.
    
    To fix this bug, st is assigned with -ENOMEM in this case.
    
    Fixes: 8722ff8cdbfa ("block: IBM RamSan 70/80 device driver")
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Link: https://lore.kernel.org/r/20210310033017.4023-1-baijiaju1990@gmail.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c39a64bee7512100ee892a5548aa42e828138dff
Author: Ondrej Mosnacek <omosnace@redhat.com>
Date:   Fri Jan 15 18:43:56 2021 +0100

    NFSv4.2: fix return value of _nfs4_get_security_label()
    
    [ Upstream commit 53cb245454df5b13d7063162afd7a785aed6ebf2 ]
    
    An xattr 'get' handler is expected to return the length of the value on
    success, yet _nfs4_get_security_label() (and consequently also
    nfs4_xattr_get_nfs4_label(), which is used as an xattr handler) returns
    just 0 on success.
    
    Fix this by returning label.len instead, which contains the length of
    the result.
    
    Fixes: aa9c2669626c ("NFS: Client implementation of Labeled-NFS")
    Signed-off-by: Ondrej Mosnacek <omosnace@redhat.com>
    Reviewed-by: James Morris <jamorris@linux.microsoft.com>
    Reviewed-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 955b14ef34e922163e05f9f73d391128aaaa4c96
Author: Sergey Shtylyov <s.shtylyov@omprussia.ru>
Date:   Sun Feb 28 23:26:34 2021 +0300

    sh_eth: fix TRSCER mask for R7S72100
    
    [ Upstream commit 75be7fb7f978202c4c3a1a713af4485afb2ff5f6 ]
    
    According  to  the RZ/A1H Group, RZ/A1M Group User's Manual: Hardware,
    Rev. 4.00, the TRSCER register has bit 9 reserved, hence we can't use
    the driver's default TRSCER mask.  Add the explicit initializer for
    sh_eth_cpu_data::trscer_err_mask for R7S72100.
    
    Fixes: db893473d313 ("sh_eth: Add support for r7s72100")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 20529a3dcd64fa783d7e2f33aecd01deda9ead32
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Tue Feb 23 14:30:50 2021 +0000

    staging: comedi: pcl818: Fix endian problem for AI command data
    
    commit 148e34fd33d53740642db523724226de14ee5281 upstream.
    
    The analog input subdevice supports Comedi asynchronous commands that
    use Comedi's 16-bit sample format.  However, the call to
    `comedi_buf_write_samples()` is passing the address of a 32-bit integer
    parameter.  On bigendian machines, this will copy 2 bytes from the wrong
    end of the 32-bit value.  Fix it by changing the type of the parameter
    holding the sample value to `unsigned short`.
    
    [Note: the bug was introduced in commit edf4537bcbf5 ("staging: comedi:
    pcl818: use comedi_buf_write_samples()") but the patch applies better to
    commit d615416de615 ("staging: comedi: pcl818: introduce
    pcl818_ai_write_sample()").]
    
    Fixes: d615416de615 ("staging: comedi: pcl818: introduce pcl818_ai_write_sample()")
    Cc: <stable@vger.kernel.org> # 4.0+
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20210223143055.257402-10-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2136a8af8611b3cf229d4e7aee006e0d313cc1be
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Tue Feb 23 14:30:49 2021 +0000

    staging: comedi: pcl711: Fix endian problem for AI command data
    
    commit a084303a645896e834883f2c5170d044410dfdb3 upstream.
    
    The analog input subdevice supports Comedi asynchronous commands that
    use Comedi's 16-bit sample format.  However, the call to
    `comedi_buf_write_samples()` is passing the address of a 32-bit integer
    variable.  On bigendian machines, this will copy 2 bytes from the wrong
    end of the 32-bit value.  Fix it by changing the type of the variable
    holding the sample value to `unsigned short`.
    
    Fixes: 1f44c034de2e ("staging: comedi: pcl711: use comedi_buf_write_samples()")
    Cc: <stable@vger.kernel.org> # 3.19+
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20210223143055.257402-9-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3e1292fce7a7d299408269224c7a7804d6b7995
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Tue Feb 23 14:30:48 2021 +0000

    staging: comedi: me4000: Fix endian problem for AI command data
    
    commit b39dfcced399d31e7c4b7341693b18e01c8f655e upstream.
    
    The analog input subdevice supports Comedi asynchronous commands that
    use Comedi's 16-bit sample format.  However, the calls to
    `comedi_buf_write_samples()` are passing the address of a 32-bit integer
    variable.  On bigendian machines, this will copy 2 bytes from the wrong
    end of the 32-bit value.  Fix it by changing the type of the variable
    holding the sample value to `unsigned short`.
    
    Fixes: de88924f67d1 ("staging: comedi: me4000: use comedi_buf_write_samples()")
    Cc: <stable@vger.kernel.org> # 3.19+
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20210223143055.257402-8-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 163c1f6ec4f3ef81e558d71aae7f5740054a0b70
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Tue Feb 23 14:30:47 2021 +0000

    staging: comedi: dmm32at: Fix endian problem for AI command data
    
    commit 54999c0d94b3c26625f896f8e3460bc029821578 upstream.
    
    The analog input subdevice supports Comedi asynchronous commands that
    use Comedi's 16-bit sample format.  However, the call to
    `comedi_buf_write_samples()` is passing the address of a 32-bit integer
    variable.  On bigendian machines, this will copy 2 bytes from the wrong
    end of the 32-bit value.  Fix it by changing the type of the variable
    holding the sample value to `unsigned short`.
    
    [Note: the bug was introduced in commit 1700529b24cc ("staging: comedi:
    dmm32at: use comedi_buf_write_samples()") but the patch applies better
    to the later (but in the same kernel release) commit 0c0eadadcbe6e
    ("staging: comedi: dmm32at: introduce dmm32_ai_get_sample()").]
    
    Fixes: 0c0eadadcbe6e ("staging: comedi: dmm32at: introduce dmm32_ai_get_sample()")
    Cc: <stable@vger.kernel.org> # 3.19+
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20210223143055.257402-7-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 625961489e077a687479e885c8f5e352be19a0a1
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Tue Feb 23 14:30:46 2021 +0000

    staging: comedi: das800: Fix endian problem for AI command data
    
    commit 459b1e8c8fe97fcba0bd1b623471713dce2c5eaf upstream.
    
    The analog input subdevice supports Comedi asynchronous commands that
    use Comedi's 16-bit sample format.  However, the call to
    `comedi_buf_write_samples()` is passing the address of a 32-bit integer
    variable.  On bigendian machines, this will copy 2 bytes from the wrong
    end of the 32-bit value.  Fix it by changing the type of the variable
    holding the sample value to `unsigned short`.
    
    Fixes: ad9eb43c93d8 ("staging: comedi: das800: use comedi_buf_write_samples()")
    Cc: <stable@vger.kernel.org> # 3.19+
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20210223143055.257402-6-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a793a289b05579c1cfd0eda4295d5ccc97cbec86
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Tue Feb 23 14:30:45 2021 +0000

    staging: comedi: das6402: Fix endian problem for AI command data
    
    commit 1c0f20b78781b9ca50dc3ecfd396d0db5b141890 upstream.
    
    The analog input subdevice supports Comedi asynchronous commands that
    use Comedi's 16-bit sample format.  However, the call to
    `comedi_buf_write_samples()` is passing the address of a 32-bit integer
    variable.  On bigendian machines, this will copy 2 bytes from the wrong
    end of the 32-bit value.  Fix it by changing the type of the variable
    holding the sample value to `unsigned short`.
    
    Fixes: d1d24cb65ee3 ("staging: comedi: das6402: read analog input samples in interrupt handler")
    Cc: <stable@vger.kernel.org> # 3.19+
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20210223143055.257402-5-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee007921e26d8c35ffad28c08189a12144d60919
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Tue Feb 23 14:30:44 2021 +0000

    staging: comedi: adv_pci1710: Fix endian problem for AI command data
    
    commit b2e78630f733a76508b53ba680528ca39c890e82 upstream.
    
    The analog input subdevice supports Comedi asynchronous commands that
    use Comedi's 16-bit sample format.  However, the calls to
    `comedi_buf_write_samples()` are passing the address of a 32-bit integer
    variable.  On bigendian machines, this will copy 2 bytes from the wrong
    end of the 32-bit value.  Fix it by changing the type of the variables
    holding the sample value to `unsigned short`.  The type of the `val`
    parameter of `pci1710_ai_read_sample()` is changed to `unsigned short *`
    accordingly.  The type of the `val` variable in `pci1710_ai_insn_read()`
    is also changed to `unsigned short` since its address is passed to
    `pci1710_ai_read_sample()`.
    
    Fixes: a9c3a015c12f ("staging: comedi: adv_pci1710: use comedi_buf_write_samples()")
    Cc: <stable@vger.kernel.org> # 4.0+
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20210223143055.257402-4-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d121c8f4d3010084d0fbdbce277c89e0e00dfcc5
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Tue Feb 23 14:30:43 2021 +0000

    staging: comedi: addi_apci_1500: Fix endian problem for command sample
    
    commit ac0bbf55ed3be75fde1f8907e91ecd2fd589bde3 upstream.
    
    The digital input subdevice supports Comedi asynchronous commands that
    read interrupt status information.  This uses 16-bit Comedi samples (of
    which only the bottom 8 bits contain status information).  However, the
    interrupt handler is calling `comedi_buf_write_samples()` with the
    address of a 32-bit variable `unsigned int status`.  On a bigendian
    machine, this will copy 2 bytes from the wrong end of the variable.  Fix
    it by changing the type of the variable to `unsigned short`.
    
    Fixes: a8c66b684efa ("staging: comedi: addi_apci_1500: rewrite the subdevice support functions")
    Cc: <stable@vger.kernel.org> #4.0+
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20210223143055.257402-3-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24d8fe8b70b2b11ed9558e747fd5d7b74d4b2433
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Tue Feb 23 14:30:42 2021 +0000

    staging: comedi: addi_apci_1032: Fix endian problem for COS sample
    
    commit 25317f428a78fde71b2bf3f24d05850f08a73a52 upstream.
    
    The Change-Of-State (COS) subdevice supports Comedi asynchronous
    commands to read 16-bit change-of-state values.  However, the interrupt
    handler is calling `comedi_buf_write_samples()` with the address of a
    32-bit integer `&s->state`.  On bigendian architectures, it will copy 2
    bytes from the wrong end of the 32-bit integer.  Fix it by transferring
    the value via a 16-bit integer.
    
    Fixes: 6bb45f2b0c86 ("staging: comedi: addi_apci_1032: use comedi_buf_write_samples()")
    Cc: <stable@vger.kernel.org> # 3.19+
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20210223143055.257402-2-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aec1e676f9466d27a044746c85a44bd869bc83c0
Author: Lee Gibson <leegib@gmail.com>
Date:   Fri Feb 26 14:51:57 2021 +0000

    staging: rtl8192e: Fix possible buffer overflow in _rtl92e_wx_set_scan
    
    commit 8687bf9ef9551bcf93897e33364d121667b1aadf upstream.
    
    Function _rtl92e_wx_set_scan calls memcpy without checking the length.
    A user could control that length and trigger a buffer overflow.
    Fix by checking the length is within the maximum allowed size.
    
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Lee Gibson <leegib@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210226145157.424065-1-leegib@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5c8060dad974f4543f25d19a579de0298302409
Author: Lee Gibson <leegib@gmail.com>
Date:   Mon Mar 1 13:26:48 2021 +0000

    staging: rtl8712: Fix possible buffer overflow in r8712_sitesurvey_cmd
    
    commit b93c1e3981af19527beee1c10a2bef67a228c48c upstream.
    
    Function r8712_sitesurvey_cmd calls memcpy without checking the length.
    A user could control that length and trigger a buffer overflow.
    Fix by checking the length is within the maximum allowed size.
    
    Signed-off-by: Lee Gibson <leegib@gmail.com>
    Link: https://lore.kernel.org/r/20210301132648.420296-1-leegib@gmail.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 902fea6263eeb43119fe942e9fc3f6a90703418d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Mar 2 14:19:39 2021 +0300

    staging: ks7010: prevent buffer overflow in ks_wlan_set_scan()
    
    commit e163b9823a0b08c3bb8dc4f5b4b5c221c24ec3e5 upstream.
    
    The user can specify a "req->essid_len" of up to 255 but if it's
    over IW_ESSID_MAX_SIZE (32) that can lead to memory corruption.
    
    Fixes: 13a9930d15b4 ("staging: ks7010: add driver from Nanonote extra-repository")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/YD4fS8+HmM/Qmrw6@mwanda
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fd3be13cc1de925b01772eeb1618303b8fce802
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Mar 5 11:56:32 2021 +0300

    staging: rtl8188eu: fix potential memory corruption in rtw_check_beacon_data()
    
    commit d4ac640322b06095128a5c45ba4a1e80929fe7f3 upstream.
    
    The "ie_len" is a value in the 1-255 range that comes from the user.  We
    have to cap it to ensure that it's not too large or it could lead to
    memory corruption.
    
    Fixes: 9a7fe54ddc3a ("staging: r8188eu: Add source files for new driver - part 1")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/YEHyQCrFZKTXyT7J@mwanda
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f93a72d411eee04386bdb98001cb71a9e77a9295
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Feb 24 11:45:59 2021 +0300

    staging: rtl8712: unterminated string leads to read overflow
    
    commit d660f4f42ccea50262c6ee90c8e7ad19a69fb225 upstream.
    
    The memdup_user() function does not necessarily return a NUL terminated
    string so this can lead to a read overflow.  Switch from memdup_user()
    to strndup_user() to fix this bug.
    
    Fixes: c6dc001f2add ("staging: r8712u: Merging Realtek's latest (v2.6.6). Various fixes.")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/YDYSR+1rj26NRhvb@mwanda
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0fa92fcf829823e61c8bb4e874ca0ebd39c8fed
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Mar 5 11:58:03 2021 +0300

    staging: rtl8188eu: prevent ->ssid overflow in rtw_wx_set_scan()
    
    commit 74b6b20df8cfe90ada777d621b54c32e69e27cd7 upstream.
    
    This code has a check to prevent read overflow but it needs another
    check to prevent writing beyond the end of the ->ssid[] array.
    
    Fixes: a2c60d42d97c ("staging: r8188eu: Add files for new driver - part 16")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/YEHymwsnHewzoam7@mwanda
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1957fb73b41224e9d41b63ceffcebedaa90dc1d5
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Mar 5 11:12:49 2021 +0300

    staging: rtl8192u: fix ->ssid overflow in r8192_wx_set_scan()
    
    commit 87107518d7a93fec6cdb2559588862afeee800fb upstream.
    
    We need to cap len at IW_ESSID_MAX_SIZE (32) to avoid memory corruption.
    This can be controlled by the user via the ioctl.
    
    Fixes: 5f53d8ca3d5d ("Staging: add rtl8192SU wireless usb driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/YEHoAWMOSZBUw91F@mwanda
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aeda33f710aaef88858d96efbd69e5cf4beee2c7
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Sun Mar 7 20:53:30 2021 -0700

    usbip: fix vhci_hcd attach_store() races leading to gpf
    
    commit 718ad9693e3656120064b715fe931f43a6201e67 upstream.
    
    attach_store() is invoked when user requests import (attach) a device
    from usbip host.
    
    Attach and detach are governed by local state and shared state
    - Shared state (usbip device status) - Device status is used to manage
      the attach and detach operations on import-able devices.
    - Local state (tcp_socket, rx and tx thread task_struct ptrs)
      A valid tcp_socket controls rx and tx thread operations while the
      device is in exported state.
    - Device has to be in the right state to be attached and detached.
    
    Attach sequence includes validating the socket and creating receive (rx)
    and transmit (tx) threads to talk to the host to get access to the
    imported device. rx and tx threads depends on local and shared state to
    be correct and in sync.
    
    Detach sequence shuts the socket down and stops the rx and tx threads.
    Detach sequence relies on local and shared states to be in sync.
    
    There are races in updating the local and shared status in the current
    attach sequence resulting in crashes. These stem from starting rx and
    tx threads before local and global state is updated correctly to be in
    sync.
    
    1. Doesn't handle kthread_create() error and saves invalid ptr in local
       state that drives rx and tx threads.
    2. Updates tcp_socket and sockfd,  starts stub_rx and stub_tx threads
       before updating usbip_device status to VDEV_ST_NOTASSIGNED. This opens
       up a race condition between the threads, port connect, and detach
       handling.
    
    Fix the above problems:
    - Stop using kthread_get_run() macro to create/start threads.
    - Create threads and get task struct reference.
    - Add kthread_create() failure handling and bail out.
    - Hold vhci and usbip_device locks to update local and shared states after
      creating rx and tx threads.
    - Update usbip_device status to VDEV_ST_NOTASSIGNED.
    - Update usbip_device tcp_socket, sockfd, tcp_rx, and tcp_tx
    - Start threads after usbip_device (tcp_socket, sockfd, tcp_rx, tcp_tx,
      and status) is complete.
    
    Credit goes to syzbot and Tetsuo Handa for finding and root-causing the
    kthread_get_run() improper error handling problem and others. This is
    hard problem to find and debug since the races aren't seen in a normal
    case. Fuzzing forces the race window to be small enough for the
    kthread_get_run() error path bug and starting threads before updating the
    local and shared state bug in the attach sequence.
    - Update usbip_device tcp_rx and tcp_tx pointers holding vhci and
      usbip_device locks.
    
    Tested with syzbot reproducer:
    - https://syzkaller.appspot.com/text?tag=ReproC&x=14801034d00000
    
    Fixes: 9720b4bc76a83807 ("staging/usbip: convert to kthread")
    Cc: stable@vger.kernel.org
    Reported-by: syzbot <syzbot+a93fba6d384346a761e3@syzkaller.appspotmail.com>
    Reported-by: syzbot <syzbot+bf1a360e305ee719e364@syzkaller.appspotmail.com>
    Reported-by: syzbot <syzbot+95ce4b142579611ef0a9@syzkaller.appspotmail.com>
    Reported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/bb434bd5d7a64fbec38b5ecfb838a6baef6eb12b.1615171203.git.skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1964ca51ece2f931e0117eb78f5937a0db5273c7
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Sun Mar 7 20:53:29 2021 -0700

    usbip: fix stub_dev usbip_sockfd_store() races leading to gpf
    
    commit 9380afd6df70e24eacbdbde33afc6a3950965d22 upstream.
    
    usbip_sockfd_store() is invoked when user requests attach (import)
    detach (unimport) usb device from usbip host. vhci_hcd sends import
    request and usbip_sockfd_store() exports the device if it is free
    for export.
    
    Export and unexport are governed by local state and shared state
    - Shared state (usbip device status, sockfd) - sockfd and Device
      status are used to determine if stub should be brought up or shut
      down.
    - Local state (tcp_socket, rx and tx thread task_struct ptrs)
      A valid tcp_socket controls rx and tx thread operations while the
      device is in exported state.
    - While the device is exported, device status is marked used and socket,
      sockfd, and thread pointers are valid.
    
    Export sequence (stub-up) includes validating the socket and creating
    receive (rx) and transmit (tx) threads to talk to the client to provide
    access to the exported device. rx and tx threads depends on local and
    shared state to be correct and in sync.
    
    Unexport (stub-down) sequence shuts the socket down and stops the rx and
    tx threads. Stub-down sequence relies on local and shared states to be
    in sync.
    
    There are races in updating the local and shared status in the current
    stub-up sequence resulting in crashes. These stem from starting rx and
    tx threads before local and global state is updated correctly to be in
    sync.
    
    1. Doesn't handle kthread_create() error and saves invalid ptr in local
       state that drives rx and tx threads.
    2. Updates tcp_socket and sockfd,  starts stub_rx and stub_tx threads
       before updating usbip_device status to SDEV_ST_USED. This opens up a
       race condition between the threads and usbip_sockfd_store() stub up
       and down handling.
    
    Fix the above problems:
    - Stop using kthread_get_run() macro to create/start threads.
    - Create threads and get task struct reference.
    - Add kthread_create() failure handling and bail out.
    - Hold usbip_device lock to update local and shared states after
      creating rx and tx threads.
    - Update usbip_device status to SDEV_ST_USED.
    - Update usbip_device tcp_socket, sockfd, tcp_rx, and tcp_tx
    - Start threads after usbip_device (tcp_socket, sockfd, tcp_rx, tcp_tx,
      and status) is complete.
    
    Credit goes to syzbot and Tetsuo Handa for finding and root-causing the
    kthread_get_run() improper error handling problem and others. This is a
    hard problem to find and debug since the races aren't seen in a normal
    case. Fuzzing forces the race window to be small enough for the
    kthread_get_run() error path bug and starting threads before updating the
    local and shared state bug in the stub-up sequence.
    
    Tested with syzbot reproducer:
    - https://syzkaller.appspot.com/text?tag=ReproC&x=14801034d00000
    
    Fixes: 9720b4bc76a83807 ("staging/usbip: convert to kthread")
    Cc: stable@vger.kernel.org
    Reported-by: syzbot <syzbot+a93fba6d384346a761e3@syzkaller.appspotmail.com>
    Reported-by: syzbot <syzbot+bf1a360e305ee719e364@syzkaller.appspotmail.com>
    Reported-by: syzbot <syzbot+95ce4b142579611ef0a9@syzkaller.appspotmail.com>
    Reported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/268a0668144d5ff36ec7d87fdfa90faf583b7ccc.1615171203.git.skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26319fc55c42a7fc93d4e56fb7f9cfe4e9411799
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Sun Mar 7 20:53:28 2021 -0700

    usbip: fix vudc to check for stream socket
    
    commit 6801854be94fe8819b3894979875ea31482f5658 upstream.
    
    Fix usbip_sockfd_store() to validate the passed in file descriptor is
    a stream socket. If the file descriptor passed was a SOCK_DGRAM socket,
    sock_recvmsg() can't detect end of stream.
    
    Cc: stable@vger.kernel.org
    Suggested-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/387a670316002324113ac7ea1e8b53f4085d0c95.1615171203.git.skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c781d06179693c365d897d8c0e8e4160c581a1c7
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Sun Mar 7 20:53:27 2021 -0700

    usbip: fix vhci_hcd to check for stream socket
    
    commit f55a0571690c4aae03180e001522538c0927432f upstream.
    
    Fix attach_store() to validate the passed in file descriptor is a
    stream socket. If the file descriptor passed was a SOCK_DGRAM socket,
    sock_recvmsg() can't detect end of stream.
    
    Cc: stable@vger.kernel.org
    Suggested-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/52712aa308915bda02cece1589e04ee8b401d1f3.1615171203.git.skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42a4c395d4ac29e233e2bd541365e8973f78684c
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Sun Mar 7 20:53:26 2021 -0700

    usbip: fix stub_dev to check for stream socket
    
    commit 47ccc8fc2c9c94558b27b6f9e2582df32d29e6e8 upstream.
    
    Fix usbip_sockfd_store() to validate the passed in file descriptor is
    a stream socket. If the file descriptor passed was a SOCK_DGRAM socket,
    sock_recvmsg() can't detect end of stream.
    
    Cc: stable@vger.kernel.org
    Suggested-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/e942d2bd03afb8e8552bd2a5d84e18d17670d521.1615171203.git.skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f52d2be1fa5d44f29518a1867c858a78646fb47
Author: Sebastian Reichel <sebastian.reichel@collabora.com>
Date:   Tue Feb 23 17:44:18 2021 +0100

    USB: serial: cp210x: add some more GE USB IDs
    
    commit 42213a0190b535093a604945db05a4225bf43885 upstream.
    
    GE CS1000 has some more custom USB IDs for CP2102N; add them
    to the driver to have working auto-probing.
    
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a04b1cc253c6bdd85373ba80424858ba132187b
Author: Karan Singhal <karan.singhal@acuitybrands.com>
Date:   Tue Feb 16 11:03:10 2021 -0500

    USB: serial: cp210x: add ID for Acuity Brands nLight Air Adapter
    
    commit ca667a33207daeaf9c62b106815728718def60ec upstream.
    
    IDs of nLight Air Adapter, Acuity Brands, Inc.:
    vid: 10c4
    pid: 88d8
    
    Signed-off-by: Karan Singhal <karan.singhal@acuitybrands.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48ad525b93674e427d2aea5c7460de9f5bf0adaa
Author: Niv Sardi <xaiki@evilgiggle.com>
Date:   Mon Mar 1 17:16:12 2021 -0300

    USB: serial: ch341: add new Product ID
    
    commit 5563b3b6420362c8a1f468ca04afe6d5f0a8d0a3 upstream.
    
    Add PID for CH340 that's found on cheap programmers.
    
    The driver works flawlessly as soon as the new PID (0x9986) is added to it.
    These look like ANU232MI but ship with a ch341 inside. They have no special
    identifiers (mine only has the string "DB9D20130716" printed on the PCB and
    nothing identifiable on the packaging. The merchant i bought it from
    doesn't sell these anymore).
    
    the lsusb -v output is:
    Bus 001 Device 009: ID 9986:7523
    Device Descriptor:
      bLength                18
      bDescriptorType         1
      bcdUSB               1.10
      bDeviceClass          255 Vendor Specific Class
      bDeviceSubClass         0
      bDeviceProtocol         0
      bMaxPacketSize0         8
      idVendor           0x9986
      idProduct          0x7523
      bcdDevice            2.54
      iManufacturer           0
      iProduct                0
      iSerial                 0
      bNumConfigurations      1
      Configuration Descriptor:
        bLength                 9
        bDescriptorType         2
        wTotalLength       0x0027
        bNumInterfaces          1
        bConfigurationValue     1
        iConfiguration          0
        bmAttributes         0x80
          (Bus Powered)
        MaxPower               96mA
        Interface Descriptor:
          bLength                 9
          bDescriptorType         4
          bInterfaceNumber        0
          bAlternateSetting       0
          bNumEndpoints           3
          bInterfaceClass       255 Vendor Specific Class
          bInterfaceSubClass      1
          bInterfaceProtocol      2
          iInterface              0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x82  EP 2 IN
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0020  1x 32 bytes
            bInterval               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x02  EP 2 OUT
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0020  1x 32 bytes
            bInterval               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x81  EP 1 IN
            bmAttributes            3
              Transfer Type            Interrupt
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0008  1x 8 bytes
            bInterval               1
    
    Signed-off-by: Niv Sardi <xaiki@evilgiggle.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc7823862fcac1b4d6f8dec57e2007e690bcf547
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Tue Mar 2 02:01:52 2021 +0300

    USB: serial: io_edgeport: fix memory leak in edge_startup
    
    commit cfdc67acc785e01a8719eeb7012709d245564701 upstream.
    
    sysbot found memory leak in edge_startup().
    The problem was that when an error was received from the usb_submit_urb(),
    nothing was cleaned up.
    
    Reported-by: syzbot+59f777bdcbdd7eea5305@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Fixes: 6e8cf7751f9f ("USB: add EPIC support to the io_edgeport driver")
    Cc: stable@vger.kernel.org      # 2.6.21: c5c0c55598ce
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b183f7abb9670e103f0a3b743276a984ab20c475
Author: Forest Crossman <cyrozap@gmail.com>
Date:   Thu Mar 11 13:53:52 2021 +0200

    usb: xhci: Fix ASMedia ASM1042A and ASM3242 DMA addressing
    
    commit b71c669ad8390dd1c866298319ff89fe68b45653 upstream.
    
    I've confirmed that both the ASMedia ASM1042A and ASM3242 have the same
    problem as the ASM1142 and ASM2142/ASM3142, where they lose some of the
    upper bits of 64-bit DMA addresses. As with the other chips, this can
    cause problems on systems where the upper bits matter, and adding the
    XHCI_NO_64BIT_SUPPORT quirk completely fixes the issue.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Forest Crossman <cyrozap@gmail.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20210311115353.2137560-4-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit baac929753566139567d7793b946c3d722b8c9ec
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Thu Mar 11 13:53:51 2021 +0200

    xhci: Improve detection of device initiated wake signal.
    
    commit 253f588c70f66184b1f3a9bbb428b49bbda73e80 upstream.
    
    A xHC USB 3 port might miss the first wake signal from a USB 3 device
    if the port LFPS reveiver isn't enabled fast enough after xHC resume.
    
    xHC host will anyway be resumed by a PME# signal, but will go back to
    suspend if no port activity is seen.
    The device resends the U3 LFPS wake signal after a 100ms delay, but
    by then host is already suspended, starting all over from the
    beginning of this issue.
    
    USB 3 specs say U3 wake LFPS signal is sent for max 10ms, then device
    needs to delay 100ms before resending the wake.
    
    Don't suspend immediately if port activity isn't detected in resume.
    Instead add a retry. If there is no port activity then delay for 120ms,
    and re-check for port activity.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20210311115353.2137560-3-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8dd784de99679baaa158591267a79c3daf910d5
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Mon Mar 8 10:55:38 2021 +0900

    usb: renesas_usbhs: Clear PIPECFG for re-enabling pipe with other EPNUM
    
    commit b1d25e6ee57c2605845595b6c61340d734253eb3 upstream.
    
    According to the datasheet, this controller has a restriction
    which "set an endpoint number so that combinations of the DIR bit and
    the EPNUM bits do not overlap.". However, since the udc core driver is
    possible to assign a bulk pipe as an interrupt endpoint, an endpoint
    number may not match the pipe number. After that, when user rebinds
    another gadget driver, this driver broke the restriction because
    the driver didn't clear any configuration in usb_ep_disable().
    
    Example:
     # modprobe g_ncm
     Then, EP3 = pipe 3, EP4 = pipe 4, EP5 = pipe 6
     # rmmod g_ncm
     # modprobe g_hid
     Then, EP3 = pipe 6, EP4 = pipe 7.
     So, pipe 3 and pipe 6 are set as EP3.
    
    So, clear PIPECFG register in usbhs_pipe_free().
    
    Fixes: dfb87b8bfe09 ("usb: renesas_usbhs: gadget: fix re-enabling pipe without re-connecting")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Link: https://lore.kernel.org/r/1615168538-26101-1-git-send-email-yoshihiro.shimoda.uh@renesas.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6acee1a6009e9002bb85142476d47b50e43a8ea9
Author: Ruslan Bilovol <ruslan.bilovol@gmail.com>
Date:   Mon Mar 1 13:49:32 2021 +0200

    usb: gadget: f_uac1: stop playback on function disable
    
    commit cc2ac63d4cf72104e0e7f58bb846121f0f51bb19 upstream.
    
    There is missing playback stop/cleanup in case of
    gadget's ->disable callback that happens on
    events like USB host resetting or gadget disconnection
    
    Fixes: 0591bc236015 ("usb: gadget: add f_uac1 variant based on a new u_audio api")
    Cc: <stable@vger.kernel.org> # 4.13+
    Signed-off-by: Ruslan Bilovol <ruslan.bilovol@gmail.com>
    Link: https://lore.kernel.org/r/1614599375-8803-3-git-send-email-ruslan.bilovol@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77cb8f2e60519bdb3e450720e1d97ec4c34c1cb0
Author: Ruslan Bilovol <ruslan.bilovol@gmail.com>
Date:   Mon Mar 1 13:49:31 2021 +0200

    usb: gadget: f_uac2: always increase endpoint max_packet_size by one audio slot
    
    commit 789ea77310f0200c84002884ffd628e2baf3ad8a upstream.
    
    As per UAC2 Audio Data Formats spec (2.3.1.1 USB Packets),
    if the sampling rate is a constant, the allowable variation
    of number of audio slots per virtual frame is +/- 1 audio slot.
    
    It means that endpoint should be able to accept/send +1 audio
    slot.
    
    Previous endpoint max_packet_size calculation code
    was adding sometimes +1 audio slot due to DIV_ROUND_UP
    behaviour which was rounding up to closest integer.
    However this doesn't work if the numbers are divisible.
    
    It had no any impact with Linux hosts which ignore
    this issue, but in case of more strict Windows it
    caused rejected enumeration
    
    Thus always add +1 audio slot to endpoint's max packet size
    
    Fixes: 913e4a90b6f9 ("usb: gadget: f_uac2: finalize wMaxPacketSize according to bandwidth")
    Cc: Peter Chen <peter.chen@freescale.com>
    Cc: <stable@vger.kernel.org> #v4.3+
    Signed-off-by: Ruslan Bilovol <ruslan.bilovol@gmail.com>
    Link: https://lore.kernel.org/r/1614599375-8803-2-git-send-email-ruslan.bilovol@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d0c955d6618352f46aabaf1fb880eaa494e0a1d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Feb 15 15:57:16 2021 +0000

    USB: gadget: u_ether: Fix a configfs return code
    
    commit 650bf52208d804ad5ee449c58102f8dc43175573 upstream.
    
    If the string is invalid, this should return -EINVAL instead of 0.
    
    Fixes: 73517cf49bd4 ("usb: gadget: add RNDIS configfs options for class/subclass/protocol")
    Cc: stable <stable@vger.kernel.org>
    Acked-by: Lorenzo Colitti <lorenzo@google.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/YCqZ3P53yyIg5cn7@mwanda
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f24b07564cc5fc075f95690726473a751c302bd2
Author: Yorick de Wid <ydewid@gmail.com>
Date:   Sat Feb 13 15:49:02 2021 +0100

    Goodix Fingerprint device is not a modem
    
    commit 4d8654e81db7346f915eca9f1aff18f385cab621 upstream.
    
    The CDC ACM driver is false matching the Goodix Fingerprint device
    against the USB_CDC_ACM_PROTO_AT_V25TER.
    
    The Goodix Fingerprint device is a biometrics sensor that should be
    handled in user-space. libfprint has some support for Goodix
    fingerprint sensors, although not for this particular one. It is
    possible that the vendor allocates a PID per OEM (Lenovo, Dell etc).
    If this happens to be the case then more devices from the same vendor
    could potentially match the ACM modem module table.
    
    Signed-off-by: Yorick de Wid <ydewid@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210213144901.53199-1-ydewid@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ecbbaa9796f3a0092cf65d53b88635e03f25e19
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Wed Mar 3 11:26:14 2021 +0200

    mmc: core: Fix partition switch time for eMMC
    
    commit 66fbacccbab91e6e55d9c8f1fc0910a8eb6c81f7 upstream.
    
    Avoid the following warning by always defining partition switch time:
    
     [    3.209874] mmc1: unspecified timeout for CMD6 - use generic
     [    3.222780] ------------[ cut here ]------------
     [    3.233363] WARNING: CPU: 1 PID: 111 at drivers/mmc/core/mmc_ops.c:575 __mmc_switch+0x200/0x204
    
    Reported-by: Paul Fertser <fercerpav@gmail.com>
    Fixes: 1c447116d017 ("mmc: mmc: Fix partition switch timeout for some eMMCs")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Link: https://lore.kernel.org/r/168bbfd6-0c5b-5ace-ab41-402e7937c46e@intel.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c3df9d5e8be5e16ff4f6ff321deb15474330ce7
Author: Stefan Haberland <sth@linux.ibm.com>
Date:   Fri Mar 5 13:54:39 2021 +0100

    s390/dasd: fix hanging IO request during DASD driver unbind
    
    commit 66f669a272898feb1c69b770e1504aa2ec7723d1 upstream.
    
    Prevent that an IO request is build during device shutdown initiated by
    a driver unbind. This request will never be able to be processed or
    canceled and will hang forever. This will lead also to a hanging unbind.
    
    Fix by checking not only if the device is in READY state but also check
    that there is no device offline initiated before building a new IO request.
    
    Fixes: e443343e509a ("s390/dasd: blk-mq conversion")
    
    Cc: <stable@vger.kernel.org> # v4.14+
    Signed-off-by: Stefan Haberland <sth@linux.ibm.com>
    Tested-by: Bjoern Walk <bwalk@linux.ibm.com>
    Reviewed-by: Jan Hoeppner <hoeppner@linux.ibm.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a01e9710111ef593879905d797926dc94946564
Author: Stefan Haberland <sth@linux.ibm.com>
Date:   Fri Mar 5 13:54:38 2021 +0100

    s390/dasd: fix hanging DASD driver unbind
    
    commit 7d365bd0bff3c0310c39ebaffc9a8458e036d666 upstream.
    
    In case of an unbind of the DASD device driver the function
    dasd_generic_remove() is called which shuts down the device.
    Among others this functions removes the int_handler from the cdev.
    During shutdown the device cancels all outstanding IO requests and waits
    for completion of the clear request.
    Unfortunately the clear interrupt will never be received when there is no
    interrupt handler connected.
    
    Fix by moving the int_handler removal after the call to the state machine
    where no request or interrupt is outstanding.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Stefan Haberland <sth@linux.ibm.com>
    Tested-by: Bjoern Walk <bwalk@linux.ibm.com>
    Reviewed-by: Jan Hoeppner <hoeppner@linux.ibm.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff7c71bb85027db7b37d3ae9250604422ce0f302
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Fri Mar 12 15:07:09 2021 -0600

    Revert 95ebabde382c ("capabilities: Don't allow writing ambiguous v3 file capabilities")
    
    commit 3b0c2d3eaa83da259d7726192cf55a137769012f upstream.
    
    It turns out that there are in fact userspace implementations that
    care and this recent change caused a regression.
    
    https://github.com/containers/buildah/issues/3071
    
    As the motivation for the original change was future development,
    and the impact is existing real world code just revert this change
    and allow the ambiguity in v3 file caps.
    
    Cc: stable@vger.kernel.org
    Fixes: 95ebabde382c ("capabilities: Don't allow writing ambiguous v3 file capabilities")
    Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 451a45de277bdc324e341f466aaed17e28760678
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Mar 4 09:30:21 2021 +0100

    ALSA: usb-audio: Fix "cannot get freq eq" errors on Dell AE515 sound bar
    
    commit fec60c3bc5d1713db2727cdffc638d48f9c07dc3 upstream.
    
    Dell AE515 sound bar (413c:a506) spews the error messages when the
    driver tries to read the current sample frequency, hence it needs to
    be on the list in snd_usb_get_sample_rate_quirk().
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=211551
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210304083021.2152-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e10d0f2c5ca0ab85e0b6b22b6ddc158ed0611614
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Mar 10 12:28:08 2021 +0100

    ALSA: hda: Avoid spurious unsol event handling during S3/S4
    
    commit 5ff9dde42e8c72ed8102eb8cb62e03f9dc2103ab upstream.
    
    When HD-audio bus receives unsolicited events during its system
    suspend/resume (S3 and S4) phase, the controller driver may still try
    to process events although the codec chips are already (or yet)
    powered down.  This might screw up the codec communication, resulting
    in CORB/RIRB errors.  Such events should be rather skipped, as the
    codec chip status such as the jack status will be fully refreshed at
    the system resume time.
    
    Since we're tracking the system suspend/resume state in codec
    power.power_state field, let's add the check in the common unsol event
    handler entry point to filter out such events.
    
    BugLink: https://bugzilla.suse.com/show_bug.cgi?id=1182377
    Tested-by: Abhishek Sahu <abhsahu@nvidia.com>
    Cc: <stable@vger.kernel.org> # 183ab39eb0ea: ALSA: hda: Initialize power_state
    Link: https://lore.kernel.org/r/20210310112809.9215-3-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 436b249e5e9d293696aa92523a937e3dcb5ca65d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Mar 8 17:07:26 2021 +0100

    ALSA: hda: Drop the BATCH workaround for AMD controllers
    
    commit 28e96c1693ec1cdc963807611f8b5ad400431e82 upstream.
    
    The commit c02f77d32d2c ("ALSA: hda - Workaround for crackled sound on
    AMD controller (1022:1457)") introduced a few workarounds for the
    recent AMD HD-audio controller, and one of them is the forced BATCH
    PCM mode so that PulseAudio avoids the timer-based scheduling.  This
    was thought to cover for some badly working applications, but this
    actually worsens for more others.  In total, this wasn't a good idea
    to enforce it.
    
    This is a partial revert of the commit above for dropping the PCM
    BATCH enforcement part to recover from the regression again.
    
    Fixes: c02f77d32d2c ("ALSA: hda - Workaround for crackled sound on AMD controller (1022:1457)")
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=195303
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210308160726.22930-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 926971e02ddefd7831b0992936e9619be8da1dec
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Mar 10 12:28:09 2021 +0100

    ALSA: hda/hdmi: Cancel pending works before suspend
    
    commit eea46a0879bcca23e15071f9968c0f6e6596e470 upstream.
    
    The per_pin->work might be still floating at the suspend, and this may
    hit the access to the hardware at an unexpected timing.  Cancel the
    work properly at the suspend callback for avoiding the buggy access.
    
    Note that the bug doesn't trigger easily in the recent kernels since
    the work is queued only when the repoll count is set, and usually it's
    only at the resume callback, but it's still possible to hit in
    theory.
    
    BugLink: https://bugzilla.suse.com/show_bug.cgi?id=1182377
    Reported-and-tested-by: Abhishek Sahu <abhsahu@nvidia.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210310112809.9215-4-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b71b8f9abbdb3c24277e4aa6e86254954f3da2dc
Author: Mike Christie <michael.christie@oracle.com>
Date:   Sat Feb 6 22:46:00 2021 -0600

    scsi: libiscsi: Fix iscsi_prep_scsi_cmd_pdu() error handling
    
    [ Upstream commit d28d48c699779973ab9a3bd0e5acfa112bd4fdef ]
    
    If iscsi_prep_scsi_cmd_pdu() fails we try to add it back to the cmdqueue,
    but we leave it partially setup. We don't have functions that can undo the
    pdu and init task setup. We only have cleanup_task which can clean up both
    parts. So this has us just fail the cmd and go through the standard cleanup
    routine and then have the SCSI midlayer retry it like is done when it fails
    in the queuecommand path.
    
    Link: https://lore.kernel.org/r/20210207044608.27585-2-michael.christie@oracle.com
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed999bbe69401917732bc177373fb6037979004d
Author: Heiko Carstens <hca@linux.ibm.com>
Date:   Wed Feb 17 07:13:02 2021 +0100

    s390/smp: __smp_rescan_cpus() - move cpumask away from stack
    
    [ Upstream commit 62c8dca9e194326802b43c60763f856d782b225c ]
    
    Avoid a potentially large stack frame and overflow by making
    "cpumask_t avail" a static variable. There is no concurrent
    access due to the existing locking.
    
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b06e29f29997d6d579cda41d9918283b73b734e
Author: Krzysztof Wilczyński <kw@linux.com>
Date:   Wed Jan 20 18:48:10 2021 +0000

    PCI: mediatek: Add missing of_node_put() to fix reference leak
    
    [ Upstream commit 42814c438aac79746d310f413a27d5b0b959c5de ]
    
    The for_each_available_child_of_node helper internally makes use of the
    of_get_next_available_child() which performs an of_node_get() on each
    iteration when searching for next available child node.
    
    Should an available child node be found, then it would return a device
    node pointer with reference count incremented, thus early return from
    the middle of the loop requires an explicit of_node_put() to prevent
    reference count leak.
    
    To stop the reference leak, explicitly call of_node_put() before
    returning after an error occurred.
    
    Link: https://lore.kernel.org/r/20210120184810.3068794-1-kw@linux.com
    Signed-off-by: Krzysztof Wilczyński <kw@linux.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e12428006bb759077a3ebb5475b8361ccb03c0a1
Author: Martin Kaiser <martin@kaiser.cx>
Date:   Fri Jan 15 22:24:35 2021 +0100

    PCI: xgene-msi: Fix race in installing chained irq handler
    
    [ Upstream commit a93c00e5f975f23592895b7e83f35de2d36b7633 ]
    
    Fix a race where a pending interrupt could be received and the handler
    called before the handler's data has been setup, by converting to
    irq_set_chained_handler_and_data().
    
    See also 2cf5a03cb29d ("PCI/keystone: Fix race in installing chained IRQ
    handler").
    
    Based on the mail discussion, it seems ok to drop the error handling.
    
    Link: https://lore.kernel.org/r/20210115212435.19940-3-martin@kaiser.cx
    Signed-off-by: Martin Kaiser <martin@kaiser.cx>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db6c3ce9e3e9a29b8a6203e6e505ce6fe79b1070
Author: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
Date:   Fri Feb 5 04:14:52 2021 -0500

    powerpc/perf: Record counter overflow always if SAMPLE_IP is unset
    
    [ Upstream commit d137845c973147a22622cc76c7b0bc16f6206323 ]
    
    While sampling for marked events, currently we record the sample only
    if the SIAR valid bit of Sampled Instruction Event Register (SIER) is
    set. SIAR_VALID bit is used for fetching the instruction address from
    Sampled Instruction Address Register(SIAR). But there are some
    usecases, where the user is interested only in the PMU stats at each
    counter overflow and the exact IP of the overflow event is not
    required. Dropping SIAR invalid samples will fail to record some of
    the counter overflows in such cases.
    
    Example of such usecase is dumping the PMU stats (event counts) after
    some regular amount of instructions/events from the userspace (ex: via
    ptrace). Here counter overflow is indicated to userspace via signal
    handler, and captured by monitoring and enabling I/O signaling on the
    event file descriptor. In these cases, we expect to get
    sample/overflow indication after each specified sample_period.
    
    Perf event attribute will not have PERF_SAMPLE_IP set in the
    sample_type if exact IP of the overflow event is not requested. So
    while profiling if SAMPLE_IP is not set, just record the counter
    overflow irrespective of SIAR_VALID check.
    
    Suggested-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
    [mpe: Reflow comment and if formatting]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1612516492-1428-1-git-send-email-atrajeev@linux.vnet.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit def7d912d2d336ddf13a3ce3eca51df07889b546
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Sat Jan 30 23:08:35 2021 +1000

    powerpc: improve handling of unrecoverable system reset
    
    [ Upstream commit 11cb0a25f71818ca7ab4856548ecfd83c169aa4d ]
    
    If an unrecoverable system reset hits in process context, the system
    does not have to panic. Similar to machine check, call nmi_exit()
    before die().
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210130130852.2952424-26-npiggin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33edeb5071d5cc66662fbbbd6cf5e251675dce0d
Author: Chaotian Jing <chaotian.jing@mediatek.com>
Date:   Fri Dec 18 15:16:11 2020 +0800

    mmc: mediatek: fix race condition between msdc_request_timeout and irq
    
    [ Upstream commit 0354ca6edd464a2cf332f390581977b8699ed081 ]
    
    when get request SW timeout, if CMD/DAT xfer done irq coming right now,
    then there is race between the msdc_request_timeout work and irq handler,
    and the host->cmd and host->data may set to NULL in irq handler. also,
    current flow ensure that only one path can go to msdc_request_done(), so
    no need check the return value of cancel_delayed_work().
    
    Signed-off-by: Chaotian Jing <chaotian.jing@mediatek.com>
    Link: https://lore.kernel.org/r/20201218071611.12276-1-chaotian.jing@mediatek.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 611dc1da8c650cc865639409202a396467027201
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Tue Dec 8 21:35:27 2020 +0100

    mmc: mxs-mmc: Fix a resource leak in an error handling path in 'mxs_mmc_probe()'
    
    [ Upstream commit 0bb7e560f821c7770973a94e346654c4bdccd42c ]
    
    If 'mmc_of_parse()' fails, we must undo the previous 'dma_request_chan()'
    call.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/20201208203527.49262-1-christophe.jaillet@wanadoo.fr
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90715b75c8cbc0e6682f1ac3d43b470adc7ec971
Author: Steven J. Magnani <magnani@ieee.org>
Date:   Thu Jan 7 17:41:16 2021 -0600

    udf: fix silent AED tagLocation corruption
    
    [ Upstream commit 63c9e47a1642fc817654a1bc18a6ec4bbcc0f056 ]
    
    When extending a file, udf_do_extend_file() may enter following empty
    indirect extent. At the end of udf_do_extend_file() we revert prev_epos
    to point to the last written extent. However if we end up not adding any
    further extent in udf_do_extend_file(), the reverting points prev_epos
    into the header area of the AED and following updates of the extents
    (in udf_update_extents()) will corrupt the header.
    
    Make sure that we do not follow indirect extent if we are not going to
    add any more extents so that returning back to the last written extent
    works correctly.
    
    Link: https://lore.kernel.org/r/20210107234116.6190-2-magnani@ieee.org
    Signed-off-by: Steven J. Magnani <magnani@ieee.org>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 484cb7c44ad06641933e6a295757bd7967c2913f
Author: Guangbin Huang <huangguangbin2@huawei.com>
Date:   Sat Feb 27 11:05:58 2021 +0800

    net: phy: fix save wrong speed and duplex problem if autoneg is on
    
    [ Upstream commit d9032dba5a2b2bbf0fdce67c8795300ec9923b43 ]
    
    If phy uses generic driver and autoneg is on, enter command
    "ethtool -s eth0 speed 50" will not change phy speed actually, but
    command "ethtool eth0" shows speed is 50Mb/s because phydev->speed
    has been set to 50 and no update later.
    
    And duplex setting has same problem too.
    
    However, if autoneg is on, phy only changes speed and duplex according to
    phydev->advertising, but not phydev->speed and phydev->duplex. So in this
    case, phydev->speed and phydev->duplex don't need to be set in function
    phy_ethtool_ksettings_set() if autoneg is on.
    
    Fixes: 51e2a3846eab ("PHY: Avoid unnecessary aneg restarts")
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d2b031f13919e8a281380b58a1aa31a683c1125
Author: Maxim Mikityanskiy <maxtram95@gmail.com>
Date:   Fri Feb 5 23:51:39 2021 +0100

    media: usbtv: Fix deadlock on suspend
    
    commit 8a7e27fd5cd696ba564a3f62cedef7269cfd0723 upstream.
    
    usbtv doesn't support power management, so on system suspend the
    .disconnect callback of the driver is called. The teardown sequence
    includes a call to snd_card_free. Its implementation waits until the
    refcount of the sound card device drops to zero, however, if its file is
    open, snd_card_file_add takes a reference, which can't be dropped during
    the suspend, because the userspace processes are already frozen at this
    point. snd_card_free waits for completion forever, leading to a hang on
    suspend.
    
    This commit fixes this deadlock condition by replacing snd_card_free
    with snd_card_free_when_closed, that doesn't wait until all references
    are released, allowing suspend to progress.
    
    Fixes: 63ddf68de52e ("[media] usbtv: add audio support")
    Signed-off-by: Maxim Mikityanskiy <maxtram95@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 157b742cd6f9e3c87e236f8ae1ec6a4eb3f0228a
Author: Eric Farman <farman@linux.ibm.com>
Date:   Mon Mar 1 19:33:24 2021 +0100

    s390/cio: return -EFAULT if copy_to_user() fails
    
    commit d9c48a948d29bcb22f4fe61a81b718ef6de561a0 upstream.
    
    Fixes: 120e214e504f ("vfio: ccw: realize VFIO_DEVICE_G(S)ET_IRQ_INFO ioctls")
    Signed-off-by: Eric Farman <farman@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6980e67de8e167938da077c634a823c59e17e5d
Author: Artem Lapkin <art@khadas.com>
Date:   Tue Mar 2 12:22:02 2021 +0800

    drm: meson_drv add shutdown function
    
    commit fa0c16caf3d73ab4d2e5d6fa2ef2394dbec91791 upstream.
    
    Problem: random stucks on reboot stage about 1/20 stuck/reboots
    // debug kernel log
    [    4.496660] reboot: kernel restart prepare CMD:(null)
    [    4.498114] meson_ee_pwrc c883c000.system-controller:power-controller: shutdown begin
    [    4.503949] meson_ee_pwrc c883c000.system-controller:power-controller: shutdown domain 0:VPU...
    ...STUCK...
    
    Solution: add shutdown function to meson_drm driver
    // debug kernel log
    [    5.231896] reboot: kernel restart prepare CMD:(null)
    [    5.246135] [drm:meson_drv_shutdown]
    ...
    [    5.259271] meson_ee_pwrc c883c000.system-controller:power-controller: shutdown begin
    [    5.274688] meson_ee_pwrc c883c000.system-controller:power-controller: shutdown domain 0:VPU...
    [    5.338331] reboot: Restarting system
    [    5.358293] psci: PSCI_0_2_FN_SYSTEM_RESET reboot_mode:0 cmd:(null)
    bl31 reboot reason: 0xd
    bl31 reboot reason: 0x0
    system cmd  1.
    ...REBOOT...
    
    Tested: on VIM1 VIM2 VIM3 VIM3L khadas sbcs - 1000+ successful reboots
    and Odroid boards, WeTek Play2 (GXBB)
    
    Fixes: bbbe775ec5b5 ("drm: Add support for Amlogic Meson Graphic Controller")
    Signed-off-by: Artem Lapkin <art@khadas.com>
    Tested-by: Christian Hewitt <christianshewitt@gmail.com>
    Acked-by: Neil Armstrong <narmstrong@baylibre.com>
    Acked-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210302042202.3728113-1-art@khadas.com
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a9bc03980526b628143a42fb635c65c88c4477b
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Mon Feb 22 11:06:43 2021 +0100

    drm/compat: Clear bounce structures
    
    commit de066e116306baf3a6a62691ac63cfc0b1dabddb upstream.
    
    Some of them have gaps, or fields we don't clear. Native ioctl code
    does full copies plus zero-extends on size mismatch, so nothing can
    leak. But compat is more hand-rolled so need to be careful.
    
    None of these matter for performance, so just memset.
    
    Also I didn't fix up the CONFIG_DRM_LEGACY or CONFIG_DRM_AGP ioctl, those
    are security holes anyway.
    
    Acked-by: Maxime Ripard <mripard@kernel.org>
    Reported-by: syzbot+620cf21140fc7e772a5d@syzkaller.appspotmail.com # vblank ioctl
    Cc: syzbot+620cf21140fc7e772a5d@syzkaller.appspotmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210222100643.400935-1-daniel.vetter@ffwll.ch
    (cherry picked from commit e926c474ebee404441c838d18224cd6f246a71b7)
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c397765783a7c1167c04934aea19c75b8a9ae79
Author: Wang Qing <wangqing@vivo.com>
Date:   Mon Mar 1 20:01:33 2021 +0800

    s390/cio: return -EFAULT if copy_to_user() fails again
    
    commit 51c44babdc19aaf882e1213325a0ba291573308f upstream.
    
    The copy_to_user() function returns the number of bytes remaining to be
    copied, but we want to return -EFAULT if the copy doesn't complete.
    
    Fixes: e01bcdd61320 ("vfio: ccw: realize VFIO_DEVICE_GET_REGION_INFO ioctl")
    Signed-off-by: Wang Qing <wangqing@vivo.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Link: https://lore.kernel.org/r/1614600093-13992-1-git-send-email-wangqing@vivo.com
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f661a554a6c16ccf43312222749dbe9b42e5c8b1
Author: Ian Rogers <irogers@google.com>
Date:   Fri Feb 26 14:14:31 2021 -0800

    perf traceevent: Ensure read cmdlines are null terminated.
    
    commit 137a5258939aca56558f3a23eb229b9c4b293917 upstream.
    
    Issue detected by address sanitizer.
    
    Fixes: cd4ceb63438e9e28 ("perf util: Save pid-cmdline mapping into tracing header")
    Signed-off-by: Ian Rogers <irogers@google.com>
    Acked-by: Namhyung Kim <namhyung@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Link: http://lore.kernel.org/lkml/20210226221431.1985458-1-irogers@google.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e46106e562fbb20eac94377d1a57f9b3329799fe
Author: Joakim Zhang <qiangqing.zhang@nxp.com>
Date:   Thu Feb 25 17:01:10 2021 +0800

    net: stmmac: stop each tx channel independently
    
    commit a3e860a83397bf761ec1128a3f0ba186445992c6 upstream.
    
    If clear GMAC_CONFIG_TE bit, it would stop all tx channels, but users
    may only want to stop specific tx channel.
    
    Fixes: 48863ce5940f ("stmmac: add DMA support for GMAC 4.xx")
    Signed-off-by: Joakim Zhang <qiangqing.zhang@nxp.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14eb59757847b967a3733d93e9effa8e456f8445
Author: Paul Cercueil <paul@crapouillou.net>
Date:   Sun Mar 7 13:17:48 2021 +0000

    net: davicom: Fix regulator not turned off on driver removal
    
    commit cf9e60aa69ae6c40d3e3e4c94dd6c8de31674e9b upstream.
    
    We must disable the regulator that was enabled in the probe function.
    
    Fixes: 7994fe55a4a2 ("dm9000: Add regulator and reset support to dm9000")
    Signed-off-by: Paul Cercueil <paul@crapouillou.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d8b6ca1f4a135cedec84c6fd7ba58ee082d6e1e
Author: Paul Cercueil <paul@crapouillou.net>
Date:   Sun Mar 7 13:17:47 2021 +0000

    net: davicom: Fix regulator not turned off on failed probe
    
    commit ac88c531a5b38877eba2365a3f28f0c8b513dc33 upstream.
    
    When the probe fails or requests to be defered, we must disable the
    regulator that was previously enabled.
    
    Fixes: 7994fe55a4a2 ("dm9000: Add regulator and reset support to dm9000")
    Signed-off-by: Paul Cercueil <paul@crapouillou.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a8a20f3f9c09e158303d8f288063e4af070f5f9
Author: Xie He <xie.he.0141@gmail.com>
Date:   Sun Mar 7 03:33:07 2021 -0800

    net: lapbether: Remove netif_start_queue / netif_stop_queue
    
    commit f7d9d4854519fdf4d45c70a4d953438cd88e7e58 upstream.
    
    For the devices in this driver, the default qdisc is "noqueue",
    because their "tx_queue_len" is 0.
    
    In function "__dev_queue_xmit" in "net/core/dev.c", devices with the
    "noqueue" qdisc are specially handled. Packets are transmitted without
    being queued after a "dev->flags & IFF_UP" check. However, it's possible
    that even if this check succeeds, "ops->ndo_stop" may still have already
    been called. This is because in "__dev_close_many", "ops->ndo_stop" is
    called before clearing the "IFF_UP" flag.
    
    If we call "netif_stop_queue" in "ops->ndo_stop", then it's possible in
    "__dev_queue_xmit", it sees the "IFF_UP" flag is present, and then it
    checks "netif_xmit_stopped" and finds that the queue is already stopped.
    In this case, it will complain that:
    "Virtual device ... asks to queue packet!"
    
    To prevent "__dev_queue_xmit" from generating this complaint, we should
    not call "netif_stop_queue" in "ops->ndo_stop".
    
    We also don't need to call "netif_start_queue" in "ops->ndo_open",
    because after a netdev is allocated and registered, the
    "__QUEUE_STATE_DRV_XOFF" flag is initially not set, so there is no need
    to call "netif_start_queue" to clear it.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Xie He <xie.he.0141@gmail.com>
    Acked-by: Martin Schiller <ms@dev.tdt.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44c8d51fc50a029c361cd9a2010f32829784b401
Author: Paul Moore <paul@paul-moore.com>
Date:   Thu Mar 4 16:29:51 2021 -0500

    cipso,calipso: resolve a number of problems with the DOI refcounts
    
    commit ad5d07f4a9cd671233ae20983848874731102c08 upstream.
    
    The current CIPSO and CALIPSO refcounting scheme for the DOI
    definitions is a bit flawed in that we:
    
    1. Don't correctly match gets/puts in netlbl_cipsov4_list().
    2. Decrement the refcount on each attempt to remove the DOI from the
       DOI list, only removing it from the list once the refcount drops
       to zero.
    
    This patch fixes these problems by adding the missing "puts" to
    netlbl_cipsov4_list() and introduces a more conventional, i.e.
    not-buggy, refcounting mechanism to the DOI definitions.  Upon the
    addition of a DOI to the DOI list, it is initialized with a refcount
    of one, removing a DOI from the list removes it from the list and
    drops the refcount by one; "gets" and "puts" behave as expected with
    respect to refcounts, increasing and decreasing the DOI's refcount by
    one.
    
    Fixes: b1edeb102397 ("netlabel: Replace protocol/NetLabel linking with refrerence counts")
    Fixes: d7cce01504a0 ("netlabel: Add support for removing a CALIPSO DOI.")
    Reported-by: syzbot+9ec037722d2603a9f52e@syzkaller.appspotmail.com
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 051bf485d71eda15f9d1aacb2a5e609668ab3b54
Author: Daniele Palmas <dnlplm@gmail.com>
Date:   Thu Mar 4 14:15:13 2021 +0100

    net: usb: qmi_wwan: allow qmimux add/del with master up
    
    commit 6c59cff38e66584ae3ac6c2f0cbd8d039c710ba7 upstream.
    
    There's no reason for preventing the creation and removal
    of qmimux network interfaces when the underlying interface
    is up.
    
    This makes qmi_wwan mux implementation more similar to the
    rmnet one, simplifying userspace management of the same
    logical interfaces.
    
    Fixes: c6adf77953bc ("net: usb: qmi_wwan: add qmap mux protocol support")
    Reported-by: Aleksander Morgado <aleksander@aleksander.es>
    Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b637ff2e00b7547a50854c13b54edebd368c3607
Author: Maximilian Heyne <mheyne@amazon.de>
Date:   Thu Mar 4 14:43:17 2021 +0000

    net: sched: avoid duplicates in classes dump
    
    commit bfc2560563586372212b0a8aeca7428975fa91fe upstream.
    
    This is a follow up of commit ea3274695353 ("net: sched: avoid
    duplicates in qdisc dump") which has fixed the issue only for the qdisc
    dump.
    
    The duplicate printing also occurs when dumping the classes via
      tc class show dev eth0
    
    Fixes: 59cc1f61f09c ("net: sched: convert qdisc linked list to hashtable")
    Signed-off-by: Maximilian Heyne <mheyne@amazon.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 398280fa6775f2adea95f8572f150faaa90410bd
Author: Ong Boon Leong <boon.leong.ong@intel.com>
Date:   Wed Mar 3 20:38:40 2021 +0530

    net: stmmac: fix incorrect DMA channel intr enable setting of EQoS v4.10
    
    commit 879c348c35bb5fb758dd881d8a97409c1862dae8 upstream.
    
    We introduce dwmac410_dma_init_channel() here for both EQoS v4.10 and
    above which use different DMA_CH(n)_Interrupt_Enable bit definitions for
    NIE and AIE.
    
    Fixes: 48863ce5940f ("stmmac: add DMA support for GMAC 4.xx")
    Signed-off-by: Ong Boon Leong <boon.leong.ong@intel.com>
    Signed-off-by: Ramesh Babu B <ramesh.babu.b@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98ed776ac611fabc389fc5f2a2686d6ff326be5c
Author: Kevin(Yudong) Yang <yyd@google.com>
Date:   Wed Mar 3 09:43:54 2021 -0500

    net/mlx4_en: update moderation when config reset
    
    commit 00ff801bb8ce6711e919af4530b6ffa14a22390a upstream.
    
    This patch fixes a bug that the moderation config will not be
    applied when calling mlx4_en_reset_config. For example, when
    turning on rx timestamping, mlx4_en_reset_config() will be called,
    causing the NIC to forget previous moderation config.
    
    This fix is in phase with a previous fix:
    commit 79c54b6bbf06 ("net/mlx4_en: Fix TX moderation info loss
    after set_ringparam is called")
    
    Tested: Before this patch, on a host with NIC using mlx4, run
    netserver and stream TCP to the host at full utilization.
    $ sar -I SUM 1
                     INTR    intr/s
    14:03:56          sum  48758.00
    
    After rx hwtstamp is enabled:
    $ sar -I SUM 1
    14:10:38          sum 317771.00
    We see the moderation is not working properly and issued 7x more
    interrupts.
    
    After the patch, and turned on rx hwtstamp, the rate of interrupts
    is as expected:
    $ sar -I SUM 1
    14:52:11          sum  49332.00
    
    Fixes: 79c54b6bbf06 ("net/mlx4_en: Fix TX moderation info loss after set_ringparam is called")
    Signed-off-by: Kevin(Yudong) Yang <yyd@google.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Reviewed-by: Neal Cardwell <ncardwell@google.com>
    CC: Tariq Toukan <tariqt@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a09580d9057c50be7e14a6fe9859433c94d2afaa
Author: Sergey Shtylyov <s.shtylyov@omprussia.ru>
Date:   Sun Feb 28 23:25:43 2021 +0300

    sh_eth: fix TRSCER mask for SH771x
    
    commit 8c91bc3d44dfef8284af384877fbe61117e8b7d1 upstream.
    
    According  to  the SH7710, SH7712, SH7713 Group User's Manual: Hardware,
    Rev. 3.00, the TRSCER register actually has only bit 7 valid (and named
    differently), with all the other bits reserved. Apparently, this was not
    the case with some early revisions of the manual as we have the other
    bits declared (and set) in the original driver.  Follow the suit and add
    the explicit sh_eth_cpu_data::trscer_err_mask initializer for SH771x...
    
    Fixes: 86a74ff21a7a ("net: sh_eth: add support for Renesas SuperH Ethernet")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e1d76b8a5ce4b418e17238bea36170b8e57b845
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Mar 10 10:18:04 2021 -0800

    Revert "mm, slub: consider rest of partial list if acquire_slab() fails"
    
    commit 9b1ea29bc0d7b94d420f96a0f4121403efc3dd85 upstream.
    
    This reverts commit 8ff60eb052eeba95cfb3efe16b08c9199f8121cf.
    
    The kernel test robot reports a huge performance regression due to the
    commit, and the reason seems fairly straightforward: when there is
    contention on the page list (which is what causes acquire_slab() to
    fail), we do _not_ want to just loop and try again, because that will
    transfer the contention to the 'n->list_lock' spinlock we hold, and
    just make things even worse.
    
    This is admittedly likely a problem only on big machines - the kernel
    test robot report comes from a 96-thread dual socket Intel Xeon Gold
    6252 setup, but the regression there really is quite noticeable:
    
       -47.9% regression of stress-ng.rawpkt.ops_per_sec
    
    and the commit that was marked as being fixed (7ced37197196: "slub:
    Acquire_slab() avoid loop") actually did the loop exit early very
    intentionally (the hint being that "avoid loop" part of that commit
    message), exactly to avoid this issue.
    
    The correct thing to do may be to pick some kind of reasonable middle
    ground: instead of breaking out of the loop on the very first sign of
    contention, or trying over and over and over again, the right thing may
    be to re-try _once_, and then give up on the second failure (or pick
    your favorite value for "once"..).
    
    Reported-by: kernel test robot <oliver.sang@intel.com>
    Link: https://lore.kernel.org/lkml/20210301080404.GF12822@xsang-OptiPlex-9020/
    Cc: Jann Horn <jannh@google.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Acked-by: Christoph Lameter <cl@linux.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13e7c3ab5b4e02e7414b229dde02ff842f8eaf6d
Author: Joe Lawrence <joe.lawrence@redhat.com>
Date:   Tue Nov 20 15:19:18 2018 -0500

    scripts/recordmcount.{c,pl}: support -ffunction-sections .text.* section names
    
    commit 9c8e2f6d3d361439cc6744a094f1c15681b55269 upstream.
    
    When building with -ffunction-sections, the compiler will place each
    function into its own ELF section, prefixed with ".text".  For example,
    a simple test module with functions test_module_do_work() and
    test_module_wq_func():
    
      % objdump --section-headers test_module.o | awk '/\.text/{print $2}'
      .text
      .text.test_module_do_work
      .text.test_module_wq_func
      .init.text
      .exit.text
    
    Adjust the recordmcount scripts to look for ".text" as a section name
    prefix.  This will ensure that those functions will be included in the
    __mcount_loc relocations:
    
      % objdump --reloc --section __mcount_loc test_module.o
      OFFSET           TYPE              VALUE
      0000000000000000 R_X86_64_64       .text.test_module_do_work
      0000000000000008 R_X86_64_64       .text.test_module_wq_func
      0000000000000010 R_X86_64_64       .init.text
    
    Link: http://lkml.kernel.org/r/1542745158-25392-2-git-send-email-joe.lawrence@redhat.com
    
    Signed-off-by: Joe Lawrence <joe.lawrence@redhat.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Cc: Manoj Gupta <manojgupta@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1eca19319b0116d2e407b0bde445599ac5a1a8f2
Author: Paulo Alcantara <pc@cjr.nz>
Date:   Mon Mar 8 12:00:49 2021 -0300

    cifs: return proper error code in statfs(2)
    
    commit 14302ee3301b3a77b331cc14efb95bf7184c73cc upstream.
    
    In cifs_statfs(), if server->ops->queryfs is not NULL, then we should
    use its return value rather than always returning 0.  Instead, use rc
    variable as it is properly set to 0 in case there is no
    server->ops->queryfs.
    
    Signed-off-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    CC: <stable@vger.kernel.org>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e02a198552a9c87c5bde33fabbaf0c673a5d6f4b
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Sat Feb 27 11:27:45 2021 +0300

    netfilter: x_tables: gpf inside xt_find_revision()
    
    commit 8e24edddad152b998b37a7f583175137ed2e04a5 upstream.
    
    nested target/match_revfn() calls work with xt[NFPROTO_UNSPEC] lists
    without taking xt[NFPROTO_UNSPEC].mutex. This can race with module unload
    and cause host to crash:
    
    general protection fault: 0000 [#1]
    Modules linked in: ... [last unloaded: xt_cluster]
    CPU: 0 PID: 542455 Comm: iptables
    RIP: 0010:[<ffffffff8ffbd518>]  [<ffffffff8ffbd518>] strcmp+0x18/0x40
    RDX: 0000000000000003 RSI: ffff9a5a5d9abe10 RDI: dead000000000111
    R13: ffff9a5a5d9abe10 R14: ffff9a5a5d9abd8c R15: dead000000000100
    (VvS: %R15 -- &xt_match,  %RDI -- &xt_match.name,
    xt_cluster unregister match in xt[NFPROTO_UNSPEC].match list)
    Call Trace:
     [<ffffffff902ccf44>] match_revfn+0x54/0xc0
     [<ffffffff902ccf9f>] match_revfn+0xaf/0xc0
     [<ffffffff902cd01e>] xt_find_revision+0x6e/0xf0
     [<ffffffffc05a5be0>] do_ipt_get_ctl+0x100/0x420 [ip_tables]
     [<ffffffff902cc6bf>] nf_getsockopt+0x4f/0x70
     [<ffffffff902dd99e>] ip_getsockopt+0xde/0x100
     [<ffffffff903039b5>] raw_getsockopt+0x25/0x50
     [<ffffffff9026c5da>] sock_common_getsockopt+0x1a/0x20
     [<ffffffff9026b89d>] SyS_getsockopt+0x7d/0xf0
     [<ffffffff903cbf92>] system_call_fastpath+0x25/0x2a
    
    Fixes: 656caff20e1 ("netfilter 04/09: x_tables: fix match/target revision lookup")
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Reviewed-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e129ac49272fa879a2433cb7e2094d3e14096ec
Author: Joakim Zhang <qiangqing.zhang@nxp.com>
Date:   Thu Feb 18 19:00:36 2021 +0800

    can: flexcan: enable RX FIFO after FRZ/HALT valid
    
    commit ec15e27cc8904605846a354bb1f808ea1432f853 upstream.
    
    RX FIFO enable failed could happen when do system reboot stress test:
    
    [    0.303958] flexcan 5a8d0000.can: 5a8d0000.can supply xceiver not found, using dummy regulator
    [    0.304281] flexcan 5a8d0000.can (unnamed net_device) (uninitialized): Could not enable RX FIFO, unsupported core
    [    0.314640] flexcan 5a8d0000.can: registering netdev failed
    [    0.320728] flexcan 5a8e0000.can: 5a8e0000.can supply xceiver not found, using dummy regulator
    [    0.320991] flexcan 5a8e0000.can (unnamed net_device) (uninitialized): Could not enable RX FIFO, unsupported core
    [    0.331360] flexcan 5a8e0000.can: registering netdev failed
    [    0.337444] flexcan 5a8f0000.can: 5a8f0000.can supply xceiver not found, using dummy regulator
    [    0.337716] flexcan 5a8f0000.can (unnamed net_device) (uninitialized): Could not enable RX FIFO, unsupported core
    [    0.348117] flexcan 5a8f0000.can: registering netdev failed
    
    RX FIFO should be enabled after the FRZ/HALT are valid. But the current
    code enable RX FIFO and FRZ/HALT at the same time.
    
    Fixes: e955cead03117 ("CAN: Add Flexcan CAN controller driver")
    Link: https://lore.kernel.org/r/20210218110037.16591-3-qiangqing.zhang@nxp.com
    Signed-off-by: Joakim Zhang <qiangqing.zhang@nxp.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 874a9d25e46f4670e011ffad8e474bb6e113633a
Author: Joakim Zhang <qiangqing.zhang@nxp.com>
Date:   Thu Feb 18 19:00:35 2021 +0800

    can: flexcan: assert FRZ bit in flexcan_chip_freeze()
    
    commit 449052cfebf624b670faa040245d3feed770d22f upstream.
    
    Assert HALT bit to enter freeze mode, there is a premise that FRZ bit is
    asserted. This patch asserts FRZ bit in flexcan_chip_freeze, although
    the reset value is 1b'1. This is a prepare patch, later patch will
    invoke flexcan_chip_freeze() to enter freeze mode, which polling freeze
    mode acknowledge.
    
    Fixes: b1aa1c7a2165b ("can: flexcan: fix transition from and to freeze mode in chip_{,un}freeze")
    Link: https://lore.kernel.org/r/20210218110037.16591-2-qiangqing.zhang@nxp.com
    Signed-off-by: Joakim Zhang <qiangqing.zhang@nxp.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63396fe43b2031aa76c270308c6db360baf50fd0
Author: Oleksij Rempel <o.rempel@pengutronix.de>
Date:   Fri Feb 26 10:24:56 2021 +0100

    can: skb: can_skb_set_owner(): fix ref counting if socket was closed before setting skb ownership
    
    commit e940e0895a82c6fbaa259f2615eb52b57ee91a7e upstream.
    
    There are two ref count variables controlling the free()ing of a socket:
    - struct sock::sk_refcnt - which is changed by sock_hold()/sock_put()
    - struct sock::sk_wmem_alloc - which accounts the memory allocated by
      the skbs in the send path.
    
    In case there are still TX skbs on the fly and the socket() is closed,
    the struct sock::sk_refcnt reaches 0. In the TX-path the CAN stack
    clones an "echo" skb, calls sock_hold() on the original socket and
    references it. This produces the following back trace:
    
    | WARNING: CPU: 0 PID: 280 at lib/refcount.c:25 refcount_warn_saturate+0x114/0x134
    | refcount_t: addition on 0; use-after-free.
    | Modules linked in: coda_vpu(E) v4l2_jpeg(E) videobuf2_vmalloc(E) imx_vdoa(E)
    | CPU: 0 PID: 280 Comm: test_can.sh Tainted: G            E     5.11.0-04577-gf8ff6603c617 #203
    | Hardware name: Freescale i.MX6 Quad/DualLite (Device Tree)
    | Backtrace:
    | [<80bafea4>] (dump_backtrace) from [<80bb0280>] (show_stack+0x20/0x24) r7:00000000 r6:600f0113 r5:00000000 r4:81441220
    | [<80bb0260>] (show_stack) from [<80bb593c>] (dump_stack+0xa0/0xc8)
    | [<80bb589c>] (dump_stack) from [<8012b268>] (__warn+0xd4/0x114) r9:00000019 r8:80f4a8c2 r7:83e4150c r6:00000000 r5:00000009 r4:80528f90
    | [<8012b194>] (__warn) from [<80bb09c4>] (warn_slowpath_fmt+0x88/0xc8) r9:83f26400 r8:80f4a8d1 r7:00000009 r6:80528f90 r5:00000019 r4:80f4a8c2
    | [<80bb0940>] (warn_slowpath_fmt) from [<80528f90>] (refcount_warn_saturate+0x114/0x134) r8:00000000 r7:00000000 r6:82b44000 r5:834e5600 r4:83f4d540
    | [<80528e7c>] (refcount_warn_saturate) from [<8079a4c8>] (__refcount_add.constprop.0+0x4c/0x50)
    | [<8079a47c>] (__refcount_add.constprop.0) from [<8079a57c>] (can_put_echo_skb+0xb0/0x13c)
    | [<8079a4cc>] (can_put_echo_skb) from [<8079ba98>] (flexcan_start_xmit+0x1c4/0x230) r9:00000010 r8:83f48610 r7:0fdc0000 r6:0c080000 r5:82b44000 r4:834e5600
    | [<8079b8d4>] (flexcan_start_xmit) from [<80969078>] (netdev_start_xmit+0x44/0x70) r9:814c0ba0 r8:80c8790c r7:00000000 r6:834e5600 r5:82b44000 r4:82ab1f00
    | [<80969034>] (netdev_start_xmit) from [<809725a4>] (dev_hard_start_xmit+0x19c/0x318) r9:814c0ba0 r8:00000000 r7:82ab1f00 r6:82b44000 r5:00000000 r4:834e5600
    | [<80972408>] (dev_hard_start_xmit) from [<809c6584>] (sch_direct_xmit+0xcc/0x264) r10:834e5600 r9:00000000 r8:00000000 r7:82b44000 r6:82ab1f00 r5:834e5600 r4:83f27400
    | [<809c64b8>] (sch_direct_xmit) from [<809c6c0c>] (__qdisc_run+0x4f0/0x534)
    
    To fix this problem, only set skb ownership to sockets which have still
    a ref count > 0.
    
    Fixes: 0ae89beb283a ("can: add destructor for self generated skbs")
    Cc: Oliver Hartkopp <socketcan@hartkopp.net>
    Cc: Andre Naujoks <nautsch2@gmail.com>
    Link: https://lore.kernel.org/r/20210226092456.27126-1-o.rempel@pengutronix.de
    Suggested-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Reviewed-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0709eaeeecd83b84cd3308f367d1f9ceedeecdf9
Author: Balazs Nemeth <bnemeth@redhat.com>
Date:   Tue Mar 9 12:31:01 2021 +0100

    net: avoid infinite loop in mpls_gso_segment when mpls_hlen == 0
    
    commit d348ede32e99d3a04863e9f9b28d224456118c27 upstream.
    
    A packet with skb_inner_network_header(skb) == skb_network_header(skb)
    and ETH_P_MPLS_UC will prevent mpls_gso_segment from pulling any headers
    from the packet. Subsequently, the call to skb_mac_gso_segment will
    again call mpls_gso_segment with the same packet leading to an infinite
    loop. In addition, ensure that the header length is a multiple of four,
    which should hold irrespective of the number of stacked labels.
    
    Signed-off-by: Balazs Nemeth <bnemeth@redhat.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4e4baf2e6eed8a03759bb4b6bc4fecacfdcd863
Author: Balazs Nemeth <bnemeth@redhat.com>
Date:   Tue Mar 9 12:31:00 2021 +0100

    net: check if protocol extracted by virtio_net_hdr_set_proto is correct
    
    commit 924a9bc362a5223cd448ca08c3dde21235adc310 upstream.
    
    For gso packets, virtio_net_hdr_set_proto sets the protocol (if it isn't
    set) based on the type in the virtio net hdr, but the skb could contain
    anything since it could come from packet_snd through a raw socket. If
    there is a mismatch between what virtio_net_hdr_set_proto sets and
    the actual protocol, then the skb could be handled incorrectly later
    on.
    
    An example where this poses an issue is with the subsequent call to
    skb_flow_dissect_flow_keys_basic which relies on skb->protocol being set
    correctly. A specially crafted packet could fool
    skb_flow_dissect_flow_keys_basic preventing EINVAL to be returned.
    
    Avoid blindly trusting the information provided by the virtio net header
    by checking that the protocol in the packet actually matches the
    protocol set by virtio_net_hdr_set_proto. Note that since the protocol
    is only checked if skb->dev implements header_ops->parse_protocol,
    packets from devices without the implementation are not checked at this
    stage.
    
    Fixes: 9274124f023b ("net: stricter validation of untrusted gso packets")
    Signed-off-by: Balazs Nemeth <bnemeth@redhat.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb669ed9266c57bfff29c92d7ccb4de03fd764f0
Author: Maxim Mikityanskiy <maximmi@mellanox.com>
Date:   Thu Feb 21 12:39:58 2019 +0000

    net: Introduce parse_protocol header_ops callback
    
    commit e78b2915517e8fcadb1bc130ad6aeac7099e510c upstream.
    
    Introduce a new optional header_ops callback called parse_protocol and a
    wrapper function dev_parse_header_protocol, similar to dev_parse_header.
    
    The new callback's purpose is to extract the protocol number from the L2
    header, the format of which is known to the driver, but not to the upper
    layers of the stack.
    
    Signed-off-by: Maxim Mikityanskiy <maximmi@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90d9197b41c3839a0323a750950bc50512675625
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Feb 26 22:22:48 2021 +0100

    net: Fix gro aggregation for udp encaps with zero csum
    
    commit 89e5c58fc1e2857ccdaae506fb8bc5fed57ee063 upstream.
    
    We noticed a GRO issue for UDP-based encaps such as vxlan/geneve when the
    csum for the UDP header itself is 0. In that case, GRO aggregation does
    not take place on the phys dev, but instead is deferred to the vxlan/geneve
    driver (see trace below).
    
    The reason is essentially that GRO aggregation bails out in udp_gro_receive()
    for such case when drivers marked the skb with CHECKSUM_UNNECESSARY (ice, i40e,
    others) where for non-zero csums 2abb7cdc0dc8 ("udp: Add support for doing
    checksum unnecessary conversion") promotes those skbs to CHECKSUM_COMPLETE
    and napi context has csum_valid set. This is however not the case for zero
    UDP csum (here: csum_cnt is still 0 and csum_valid continues to be false).
    
    At the same time 57c67ff4bd92 ("udp: additional GRO support") added matches
    on !uh->check ^ !uh2->check as part to determine candidates for aggregation,
    so it certainly is expected to handle zero csums in udp_gro_receive(). The
    purpose of the check added via 662880f44203 ("net: Allow GRO to use and set
    levels of checksum unnecessary") seems to catch bad csum and stop aggregation
    right away.
    
    One way to fix aggregation in the zero case is to only perform the !csum_valid
    check in udp_gro_receive() if uh->check is infact non-zero.
    
    Before:
    
      [...]
      swapper     0 [008]   731.946506: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff966497100400 len=1500   (1)
      swapper     0 [008]   731.946507: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff966497100200 len=1500
      swapper     0 [008]   731.946507: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff966497101100 len=1500
      swapper     0 [008]   731.946508: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff966497101700 len=1500
      swapper     0 [008]   731.946508: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff966497101b00 len=1500
      swapper     0 [008]   731.946508: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff966497100600 len=1500
      swapper     0 [008]   731.946508: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff966497100f00 len=1500
      swapper     0 [008]   731.946509: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff966497100a00 len=1500
      swapper     0 [008]   731.946516: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff966497100500 len=1500
      swapper     0 [008]   731.946516: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff966497100700 len=1500
      swapper     0 [008]   731.946516: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff966497101d00 len=1500   (2)
      swapper     0 [008]   731.946517: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff966497101000 len=1500
      swapper     0 [008]   731.946517: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff966497101c00 len=1500
      swapper     0 [008]   731.946517: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff966497101400 len=1500
      swapper     0 [008]   731.946518: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff966497100e00 len=1500
      swapper     0 [008]   731.946518: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff966497101600 len=1500
      swapper     0 [008]   731.946521: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff966497100800 len=774
      swapper     0 [008]   731.946530: net:netif_receive_skb: dev=test_vxlan skbaddr=0xffff966497100400 len=14032 (1)
      swapper     0 [008]   731.946530: net:netif_receive_skb: dev=test_vxlan skbaddr=0xffff966497101d00 len=9112  (2)
      [...]
    
      # netperf -H 10.55.10.4 -t TCP_STREAM -l 20
      MIGRATED TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 0 AF_INET to 10.55.10.4 () port 0 AF_INET : demo
      Recv   Send    Send
      Socket Socket  Message  Elapsed
      Size   Size    Size     Time     Throughput
      bytes  bytes   bytes    secs.    10^6bits/sec
    
       87380  16384  16384    20.01    13129.24
    
    After:
    
      [...]
      swapper     0 [026]   521.862641: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff93ab0d479000 len=11286 (1)
      swapper     0 [026]   521.862643: net:netif_receive_skb: dev=test_vxlan skbaddr=0xffff93ab0d479000 len=11236 (1)
      swapper     0 [026]   521.862650: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff93ab0d478500 len=2898  (2)
      swapper     0 [026]   521.862650: net:netif_receive_skb: dev=enp10s0f0  skbaddr=0xffff93ab0d479f00 len=8490  (3)
      swapper     0 [026]   521.862653: net:netif_receive_skb: dev=test_vxlan skbaddr=0xffff93ab0d478500 len=2848  (2)
      swapper     0 [026]   521.862653: net:netif_receive_skb: dev=test_vxlan skbaddr=0xffff93ab0d479f00 len=8440  (3)
      [...]
    
      # netperf -H 10.55.10.4 -t TCP_STREAM -l 20
      MIGRATED TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 0 AF_INET to 10.55.10.4 () port 0 AF_INET : demo
      Recv   Send    Send
      Socket Socket  Message  Elapsed
      Size   Size    Size     Time     Throughput
      bytes  bytes   bytes    secs.    10^6bits/sec
    
       87380  16384  16384    20.01    24576.53
    
    Fixes: 57c67ff4bd92 ("udp: additional GRO support")
    Fixes: 662880f44203 ("net: Allow GRO to use and set levels of checksum unnecessary")
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Cc: Tom Herbert <tom@herbertland.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/r/20210226212248.8300-1-daniel@iogearbox.net
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3effbbbdd003fe324dc76ffaffc49b39847bbe7
Author: Felix Fietkau <nbd@nbd.name>
Date:   Sun Feb 14 19:49:11 2021 +0100

    ath9k: fix transmitting to stations in dynamic SMPS mode
    
    commit 3b9ea7206d7e1fdd7419cbd10badd3b2c80d04b4 upstream.
    
    When transmitting to a receiver in dynamic SMPS mode, all transmissions that
    use multiple spatial streams need to be sent using CTS-to-self or RTS/CTS to
    give the receiver's extra chains some time to wake up.
    This fixes the tx rate getting stuck at <= MCS7 for some clients, especially
    Intel ones, which make aggressive use of SMPS.
    
    Cc: stable@vger.kernel.org
    Reported-by: Martin Kennedy <hurricos@gmail.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210214184911.96702-1-nbd@nbd.name
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f40fe300b5eabc8c600f69bdd7b901f3e01e9510
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Fri Mar 5 14:17:29 2021 -0800

    ethernet: alx: fix order of calls on resume
    
    commit a4dcfbc4ee2218abd567d81d795082d8d4afcdf6 upstream.
    
    netif_device_attach() will unpause the queues so we can't call
    it before __alx_open(). This went undetected until
    commit b0999223f224 ("alx: add ability to allocate and free
    alx_napi structures") but now if stack tries to xmit immediately
    on resume before __alx_open() we'll crash on the NAPI being null:
    
     BUG: kernel NULL pointer dereference, address: 0000000000000198
     CPU: 0 PID: 12 Comm: ksoftirqd/0 Tainted: G           OE 5.10.0-3-amd64 #1 Debian 5.10.13-1
     Hardware name: Gigabyte Technology Co., Ltd. To be filled by O.E.M./H77-D3H, BIOS F15 11/14/2013
     RIP: 0010:alx_start_xmit+0x34/0x650 [alx]
     Code: 41 56 41 55 41 54 55 53 48 83 ec 20 0f b7 57 7c 8b 8e b0
    0b 00 00 39 ca 72 06 89 d0 31 d2 f7 f1 89 d2 48 8b 84 df
     RSP: 0018:ffffb09240083d28 EFLAGS: 00010297
     RAX: 0000000000000000 RBX: ffffa04d80ae7800 RCX: 0000000000000004
     RDX: 0000000000000000 RSI: ffffa04d80afa000 RDI: ffffa04e92e92a00
     RBP: 0000000000000042 R08: 0000000000000100 R09: ffffa04ea3146700
     R10: 0000000000000014 R11: 0000000000000000 R12: ffffa04e92e92100
     R13: 0000000000000001 R14: ffffa04e92e92a00 R15: ffffa04e92e92a00
     FS:  0000000000000000(0000) GS:ffffa0508f600000(0000) knlGS:0000000000000000
     i915 0000:00:02.0: vblank wait timed out on crtc 0
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 0000000000000198 CR3: 000000004460a001 CR4: 00000000001706f0
     Call Trace:
      dev_hard_start_xmit+0xc7/0x1e0
      sch_direct_xmit+0x10f/0x310
    
    Cc: <stable@vger.kernel.org> # 4.9+
    Fixes: bc2bebe8de8e ("alx: remove WoL support")
    Reported-by: Zbynek Michl <zbynek.michl@gmail.com>
    Link: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=983595
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Tested-by: Zbynek Michl <zbynek.michl@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 744a12486c829f341b3e9a98af6fc314d425516e
Author: Dmitry V. Levin <ldv@altlinux.org>
Date:   Mon Feb 22 08:00:00 2021 +0000

    uapi: nfnetlink_cthelper.h: fix userspace compilation error
    
    commit c33cb0020ee6dd96cc9976d6085a7d8422f6dbed upstream.
    
    Apparently, <linux/netfilter/nfnetlink_cthelper.h> and
    <linux/netfilter/nfnetlink_acct.h> could not be included into the same
    compilation unit because of a cut-and-paste typo in the former header.
    
    Fixes: 12f7a505331e6 ("netfilter: add user-space connection tracking helper infrastructure")
    Cc: <stable@vger.kernel.org> # v3.6
    Signed-off-by: Dmitry V. Levin <ldv@altlinux.org>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5cbc41a44ff5fd14abf6a616b58385b36f6405f
Author: SGCMarkus <markusornik@gmail.com>
Date:   Wed Apr 7 20:14:38 2021 +0200

    dm table: fix merge error for "fix iterate_devices based device capability checks"
    
    436ab5764f14

commit 3f4013741774f431224a442cc1ce0948f11e49ed
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Mar 11 13:51:06 2021 +0100

    Linux 4.14.225
    
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Link: https://lore.kernel.org/r/20210310132320.512307035@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9d20e2452bdfbfe28a45b4dec254782111a88cd
Author: AngeloGioacchino Del Regno <angelogioacchino.delregno@somainline.org>
Date:   Wed Jan 13 19:33:33 2021 +0100

    drm/msm/a5xx: Remove overwriting A5XX_PC_DBG_ECO_CNTL register
    
    [ Upstream commit 8f03c30cb814213e36032084a01f49a9e604a3e3 ]
    
    The PC_DBG_ECO_CNTL register on the Adreno A5xx family gets
    programmed to some different values on a per-model basis.
    At least, this is what we intend to do here;
    
    Unfortunately, though, this register is being overwritten with a
    static magic number, right after applying the GPU-specific
    configuration (including the GPU-specific quirks) and that is
    effectively nullifying the efforts.
    
    Let's remove the redundant and wrong write to the PC_DBG_ECO_CNTL
    register in order to retain the wanted configuration for the
    target GPU.
    
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@somainline.org>
    Reviewed-by: Jordan Crouse <jcrouse@codeaurora.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92745b9acd98c7a1a6d1068a4e5058ba8936c971
Author: Aswath Govindraju <a-govindraju@ti.com>
Date:   Tue Jan 5 16:28:12 2021 +0530

    misc: eeprom_93xx46: Add quirk to support Microchip 93LC46B eeprom
    
    [ Upstream commit f6f1f8e6e3eea25f539105d48166e91f0ab46dd1 ]
    
    A dummy zero bit is sent preceding the data during a read transfer by the
    Microchip 93LC46B eeprom (section 2.7 of[1]). This results in right shift
    of data during a read. In order to ignore this bit a quirk can be added to
    send an extra zero bit after the read address.
    
    Add a quirk to ignore the zero bit sent before data by adding a zero bit
    after the read address.
    
    [1] - https://www.mouser.com/datasheet/2/268/20001749K-277859.pdf
    
    Signed-off-by: Aswath Govindraju <a-govindraju@ti.com>
    Link: https://lore.kernel.org/r/20210105105817.17644-3-a-govindraju@ti.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d71a77ce8a2292b068ce5cde4cd6e0ee69fce101
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Tue Nov 10 16:00:57 2020 -0600

    PCI: Add function 1 DMA alias quirk for Marvell 9215 SATA controller
    
    [ Upstream commit 059983790a4c963d92943e55a61fca55be427d55 ]
    
    Add function 1 DMA alias quirk for Marvell 88SS9215 PCIe SSD Controller.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=42679#c135
    Link: https://lore.kernel.org/r/20201110220516.697934-1-helgaas@kernel.org
    Reported-by: John Smith <LK7S2ED64JHGLKj75shg9klejHWG49h5hk@protonmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 209e2166c2919d8c6ed96e255856899ffca2dc3c
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 23 16:16:25 2020 +0100

    platform/x86: acer-wmi: Add ACER_CAP_KBD_DOCK quirk for the Aspire Switch 10E SW3-016
    
    [ Upstream commit bf753400280d1384abb783efc0b42c491d6deec3 ]
    
    Add the Acer Aspire Switch 10E SW3-016 to the list of models which use the
    Acer Switch WMI interface for reporting SW_TABLET_MODE.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20201123151625.5530-1-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58e8d5117b8e22f955ede3c60fdaf350dfa935b5
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Oct 19 20:56:28 2020 +0200

    platform/x86: acer-wmi: Add support for SW_TABLET_MODE on Switch devices
    
    [ Upstream commit 5c54cb6c627e8f50f490e6b5656051a5ac29eab4 ]
    
    Add support for SW_TABLET_MODE on the Acer Switch 10 (SW5-012) and the
    acer Switch 10 (S1003) models.
    
    There is no way to detect if this is supported, so this uses DMI based
    quirks setting force_caps to ACER_CAP_KBD_DOCK (these devices have no
    other acer-wmi based functionality).
    
    The new SW_TABLET_MODE functionality can be tested on devices which
    are not in the DMI table by passing acer_wmi.force_caps=0x40 on the
    kernel commandline.
    
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20201019185628.264473-6-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ed9e541fccf682c3ced92c7575a463a9ddc2c8c
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Oct 19 20:56:27 2020 +0200

    platform/x86: acer-wmi: Add ACER_CAP_SET_FUNCTION_MODE capability flag
    
    [ Upstream commit 82cb8a5c395ea5be20e0fe31a8fe84380a502ca5 ]
    
    Not all devices supporting WMID_GUID3 support the wmid3_set_function_mode()
    call, leading to errors like these:
    
    [   60.138358] acer_wmi: Enabling RF Button failed: 0x1 - 0xff
    [   60.140036] acer_wmi: Enabling Launch Manager failed: 0x1 - 0xff
    
    Add an ACER_CAP_SET_FUNCTION_MODE capability flag, so that these calls
    can be disabled through the new force_caps mechanism.
    
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20201019185628.264473-5-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9ac3df862f72b53629bf5cd1a5f960731d0ab26
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Oct 19 20:56:26 2020 +0200

    platform/x86: acer-wmi: Add new force_caps module parameter
    
    [ Upstream commit 39aa009bb66f9d5fbd1e58ca4aa03d6e6f2c9915 ]
    
    Add a new force_caps module parameter to allow overriding the drivers
    builtin capability detection mechanism.
    
    This can be used to for example:
    -Disable rfkill functionality on devices where there is an AA OEM DMI
     record advertising non functional rfkill switches
    -Force loading of the driver on devices with a missing AA OEM DMI record
    
    Note that force_caps is -1 when unset, this allows forcing the
    capability field to 0, which results in acer-wmi only providing WMI
    hotkey handling while disabling all other (led, rfkill, backlight)
    functionality.
    
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20201019185628.264473-4-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c4072b4dff8325a8e3a657fe8cb2a224f91baed2
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Oct 19 20:56:25 2020 +0200

    platform/x86: acer-wmi: Cleanup accelerometer device handling
    
    [ Upstream commit 9feb0763e4985ccfae632de3bb2f029cc8389842 ]
    
    Cleanup accelerometer device handling:
    -Drop acer_wmi_accel_destroy instead directly call input_unregister_device.
    -The information tracked by the CAP_ACCEL flag mirrors acer_wmi_accel_dev
     being NULL. Drop the CAP flag, this is a preparation change for allowing
     users to override the capability flags. Dropping the flag stops users
     from causing a NULL pointer dereference by forcing the capability.
    
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20201019185628.264473-3-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7815b9d84f8579c6191f3cd588635270d5503966
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Oct 19 20:56:24 2020 +0200

    platform/x86: acer-wmi: Cleanup ACER_CAP_FOO defines
    
    [ Upstream commit 7c936d8d26afbc74deac0651d613dead2f76e81c ]
    
    Cleanup the ACER_CAP_FOO defines:
    -Switch to using BIT() macro.
    -The ACER_CAP_RFBTN flag is set, but it is never checked anywhere, drop it.
    -Drop the unused ACER_CAP_ANY define.
    
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20201019185628.264473-2-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7d494ebfbd2680ae05d72788179aa7a7fcd90aa
Author: Tsuchiya Yuto <kitakar@gmail.com>
Date:   Wed Oct 28 23:23:46 2020 +0900

    mwifiex: pcie: skip cancel_work_sync() on reset failure path
    
    [ Upstream commit 4add4d988f95f47493500a7a19c623827061589b ]
    
    If a reset is performed, but even the reset fails for some reasons (e.g.,
    on Surface devices, the fw reset requires another quirks),
    cancel_work_sync() hangs in mwifiex_cleanup_pcie().
    
        # firmware went into a bad state
        [...]
        [ 1608.281690] mwifiex_pcie 0000:03:00.0: info: shutdown mwifiex...
        [ 1608.282724] mwifiex_pcie 0000:03:00.0: rx_pending=0, tx_pending=1,       cmd_pending=0
        [ 1608.292400] mwifiex_pcie 0000:03:00.0: PREP_CMD: card is removed
        [ 1608.292405] mwifiex_pcie 0000:03:00.0: PREP_CMD: card is removed
        # reset performed after firmware went into a bad state
        [ 1609.394320] mwifiex_pcie 0000:03:00.0: WLAN FW already running! Skip FW dnld
        [ 1609.394335] mwifiex_pcie 0000:03:00.0: WLAN FW is active
        # but even the reset failed
        [ 1619.499049] mwifiex_pcie 0000:03:00.0: mwifiex_cmd_timeout_func: Timeout cmd id = 0xfa, act = 0xe000
        [ 1619.499094] mwifiex_pcie 0000:03:00.0: num_data_h2c_failure = 0
        [ 1619.499103] mwifiex_pcie 0000:03:00.0: num_cmd_h2c_failure = 0
        [ 1619.499110] mwifiex_pcie 0000:03:00.0: is_cmd_timedout = 1
        [ 1619.499117] mwifiex_pcie 0000:03:00.0: num_tx_timeout = 0
        [ 1619.499124] mwifiex_pcie 0000:03:00.0: last_cmd_index = 0
        [ 1619.499133] mwifiex_pcie 0000:03:00.0: last_cmd_id: fa 00 07 01 07 01 07 01 07 01
        [ 1619.499140] mwifiex_pcie 0000:03:00.0: last_cmd_act: 00 e0 00 00 00 00 00 00 00 00
        [ 1619.499147] mwifiex_pcie 0000:03:00.0: last_cmd_resp_index = 3
        [ 1619.499155] mwifiex_pcie 0000:03:00.0: last_cmd_resp_id: 07 81 07 81 07 81 07 81 07 81
        [ 1619.499162] mwifiex_pcie 0000:03:00.0: last_event_index = 2
        [ 1619.499169] mwifiex_pcie 0000:03:00.0: last_event: 58 00 58 00 58 00 58 00 58 00
        [ 1619.499177] mwifiex_pcie 0000:03:00.0: data_sent=0 cmd_sent=1
        [ 1619.499185] mwifiex_pcie 0000:03:00.0: ps_mode=0 ps_state=0
        [ 1619.499215] mwifiex_pcie 0000:03:00.0: info: _mwifiex_fw_dpc: unregister device
        # mwifiex_pcie_work hang happening
        [ 1823.233923] INFO: task kworker/3:1:44 blocked for more than 122 seconds.
        [ 1823.233932]       Tainted: G        WC OE     5.10.0-rc1-1-mainline #1
        [ 1823.233935] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
        [ 1823.233940] task:kworker/3:1     state:D stack:    0 pid:   44 ppid:     2 flags:0x00004000
        [ 1823.233960] Workqueue: events mwifiex_pcie_work [mwifiex_pcie]
        [ 1823.233965] Call Trace:
        [ 1823.233981]  __schedule+0x292/0x820
        [ 1823.233990]  schedule+0x45/0xe0
        [ 1823.233995]  schedule_timeout+0x11c/0x160
        [ 1823.234003]  wait_for_completion+0x9e/0x100
        [ 1823.234012]  __flush_work.isra.0+0x156/0x210
        [ 1823.234018]  ? flush_workqueue_prep_pwqs+0x130/0x130
        [ 1823.234026]  __cancel_work_timer+0x11e/0x1a0
        [ 1823.234035]  mwifiex_cleanup_pcie+0x28/0xd0 [mwifiex_pcie]
        [ 1823.234049]  mwifiex_free_adapter+0x24/0xe0 [mwifiex]
        [ 1823.234060]  _mwifiex_fw_dpc+0x294/0x560 [mwifiex]
        [ 1823.234074]  mwifiex_reinit_sw+0x15d/0x300 [mwifiex]
        [ 1823.234080]  mwifiex_pcie_reset_done+0x50/0x80 [mwifiex_pcie]
        [ 1823.234087]  pci_try_reset_function+0x5c/0x90
        [ 1823.234094]  process_one_work+0x1d6/0x3a0
        [ 1823.234100]  worker_thread+0x4d/0x3d0
        [ 1823.234107]  ? rescuer_thread+0x410/0x410
        [ 1823.234112]  kthread+0x142/0x160
        [ 1823.234117]  ? __kthread_bind_mask+0x60/0x60
        [ 1823.234124]  ret_from_fork+0x22/0x30
        [...]
    
    This is a deadlock caused by calling cancel_work_sync() in
    mwifiex_cleanup_pcie():
    
    - Device resets are done via mwifiex_pcie_card_reset()
    - which schedules card->work to call mwifiex_pcie_card_reset_work()
    - which calls pci_try_reset_function().
    - This leads to mwifiex_pcie_reset_done() be called on the same workqueue,
      which in turn calls
    - mwifiex_reinit_sw() and that calls
    - _mwifiex_fw_dpc().
    
    The problem is now that _mwifiex_fw_dpc() calls mwifiex_free_adapter()
    in case firmware initialization fails. That ends up calling
    mwifiex_cleanup_pcie().
    
    Note that all those calls are still running on the workqueue. So when
    mwifiex_cleanup_pcie() now calls cancel_work_sync(), it's really waiting
    on itself to complete, causing a deadlock.
    
    This commit fixes the deadlock by skipping cancel_work_sync() on a reset
    failure path.
    
    After this commit, when reset fails, the following output is
    expected to be shown:
    
        kernel: mwifiex_pcie 0000:03:00.0: info: _mwifiex_fw_dpc: unregister device
        kernel: mwifiex: Failed to bring up adapter: -5
        kernel: mwifiex_pcie 0000:03:00.0: reinit failed: -5
    
    To reproduce this issue, for example, try putting the root port of wifi
    into D3 (replace "00:1d.3" with your setup).
    
        # put into D3 (root port)
        sudo setpci -v -s 00:1d.3 CAP_PM+4.b=0b
    
    Cc: Maximilian Luz <luzmaximilian@gmail.com>
    Signed-off-by: Tsuchiya Yuto <kitakar@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20201028142346.18355-1-kitakar@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eba4f4952859d6fff23da223f828031654d02e6c
Author: Andrey Ryabinin <arbn@yandex-team.com>
Date:   Wed Feb 17 17:30:04 2021 +0300

    iommu/amd: Fix sleeping in atomic in increase_address_space()
    
    commit 140456f994195b568ecd7fc2287a34eadffef3ca upstream.
    
    increase_address_space() calls get_zeroed_page(gfp) under spin_lock with
    disabled interrupts. gfp flags passed to increase_address_space() may allow
    sleeping, so it comes to this:
    
     BUG: sleeping function called from invalid context at mm/page_alloc.c:4342
     in_atomic(): 1, irqs_disabled(): 1, pid: 21555, name: epdcbbf1qnhbsd8
    
     Call Trace:
      dump_stack+0x66/0x8b
      ___might_sleep+0xec/0x110
      __alloc_pages_nodemask+0x104/0x300
      get_zeroed_page+0x15/0x40
      iommu_map_page+0xdd/0x3e0
      amd_iommu_map+0x50/0x70
      iommu_map+0x106/0x220
      vfio_iommu_type1_ioctl+0x76e/0x950 [vfio_iommu_type1]
      do_vfs_ioctl+0xa3/0x6f0
      ksys_ioctl+0x66/0x70
      __x64_sys_ioctl+0x16/0x20
      do_syscall_64+0x4e/0x100
      entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fix this by moving get_zeroed_page() out of spin_lock/unlock section.
    
    Fixes: 754265bcab ("iommu/amd: Fix race in increase_address_space()")
    Signed-off-by: Andrey Ryabinin <arbn@yandex-team.com>
    Acked-by: Will Deacon <will@kernel.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210217143004.19165-1-arbn@yandex-team.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Andrey Ryabinin <arbn@yandex-team.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed04514a103f2d4cb5fa46ae982e340d32ffe3e7
Author: Jeffle Xu <jefflexu@linux.alibaba.com>
Date:   Tue Mar 9 11:27:45 2021 +0800

    dm table: fix zoned iterate_devices based device capability checks
    
    commit 24f6b6036c9eec21191646930ad42808e6180510 upstream.
    
    Fix dm_table_supports_zoned_model() and invert logic of both
    iterate_devices_callout_fn so that all devices' zoned capabilities are
    properly checked.
    
    Add one more parameter to dm_table_any_dev_attr(), which is actually
    used as the @data parameter of iterate_devices_callout_fn, so that
    dm_table_matches_zone_sectors() can be replaced by
    dm_table_any_dev_attr().
    
    Fixes: dd88d313bef02 ("dm table: add zoned block devices validation")
    Cc: stable@vger.kernel.org
    Signed-off-by: Jeffle Xu <jefflexu@linux.alibaba.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    [jeffle: also convert no_sg_merge check]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a1f306b6dbd008ce30d447f88b49d3824a6d361
Author: Jeffle Xu <jefflexu@linux.alibaba.com>
Date:   Tue Mar 9 11:27:44 2021 +0800

    dm table: fix DAX iterate_devices based device capability checks
    
    commit 5b0fab508992c2e120971da658ce80027acbc405 upstream.
    
    Fix dm_table_supports_dax() and invert logic of both
    iterate_devices_callout_fn so that all devices' DAX capabilities are
    properly checked.
    
    Fixes: 545ed20e6df6 ("dm: add infrastructure for DAX support")
    Cc: stable@vger.kernel.org
    Signed-off-by: Jeffle Xu <jefflexu@linux.alibaba.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    [jeffle: no dax synchronous]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 436ab5764f14ac178d482116c037990160f4a73b
Author: Jeffle Xu <jefflexu@linux.alibaba.com>
Date:   Tue Mar 9 11:27:43 2021 +0800

    dm table: fix iterate_devices based device capability checks
    
    commit a4c8dd9c2d0987cf542a2a0c42684c9c6d78a04e upstream.
    
    According to the definition of dm_iterate_devices_fn:
     * This function must iterate through each section of device used by the
     * target until it encounters a non-zero return code, which it then returns.
     * Returns zero if no callout returned non-zero.
    
    For some target type (e.g. dm-stripe), one call of iterate_devices() may
    iterate multiple underlying devices internally, in which case a non-zero
    return code returned by iterate_devices_callout_fn will stop the iteration
    in advance. No iterate_devices_callout_fn should return non-zero unless
    device iteration should stop.
    
    Rename dm_table_requires_stable_pages() to dm_table_any_dev_attr() and
    elevate it for reuse to stop iterating (and return non-zero) on the
    first device that causes iterate_devices_callout_fn to return non-zero.
    Use dm_table_any_dev_attr() to properly iterate through devices.
    
    Rename device_is_nonrot() to device_is_rotational() and invert logic
    accordingly to fix improper disposition.
    
    [jeffle: backport notes]
    Also convert the no_sg_merge capability check, which is introduced by
    commit 200612ec33e5 ("dm table: propagate QUEUE_FLAG_NO_SG_MERGE"), and
    removed since commit 2705c93742e9 ("block: kill QUEUE_FLAG_NO_SG_MERGE")
    in v5.1.
    
    Fixes: c3c4555edd10 ("dm table: clear add_random unless all devices have it set")
    Fixes: 4693c9668fdc ("dm table: propagate non rotational flag")
    Cc: stable@vger.kernel.org
    Signed-off-by: Jeffle Xu <jefflexu@linux.alibaba.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4ac37d150bf13a5614075e1c0995e5636938b57
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Mar 3 13:59:12 2021 +0300

    rsxx: Return -EFAULT if copy_to_user() fails
    
    [ Upstream commit 77516d25f54912a7baedeeac1b1b828b6f285152 ]
    
    The copy_to_user() function returns the number of bytes remaining but
    we want to return -EFAULT to the user if it can't complete the copy.
    The "st" variable only holds zero on success or negative error codes on
    failure so the type should be int.
    
    Fixes: 36f988e978f8 ("rsxx: Adding in debugfs entries.")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6325d951480dac0b660d7c9fc65f93aa6b34e1d5
Author: Colin Ian King <colin.king@canonical.com>
Date:   Sat Feb 27 00:15:27 2021 +0000

    ALSA: ctxfi: cthw20k2: fix mask on conf to allow 4 bits
    
    [ Upstream commit 26a9630c72ebac7c564db305a6aee54a8edde70e ]
    
    Currently the mask operation on variable conf is just 3 bits so
    the switch statement case value of 8 is unreachable dead code.
    The function daio_mgr_dao_init can be passed a 4 bit value,
    function dao_rsc_init calls it with conf set to:
    
         conf = (desc->msr & 0x7) | (desc->passthru << 3);
    
    so clearly when desc->passthru is set to 1 then conf can be
    at least 8.
    
    Fix this by changing the mask to 0xf.
    
    Fixes: 8cc72361481f ("ALSA: SB X-Fi driver merge")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Link: https://lore.kernel.org/r/20210227001527.1077484-1-colin.king@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9f750ddb0a465f3c3fda904d3249d4a2cf458a1
Author: Antonio Borneo <borneo.antonio@gmail.com>
Date:   Thu Jun 18 02:08:44 2020 +0200

    usbip: tools: fix build error for multiple definition
    
    commit d5efc2e6b98fe661dbd8dd0d5d5bfb961728e57a upstream.
    
    With GCC 10, building usbip triggers error for multiple definition
    of 'udev_context', in:
    - libsrc/vhci_driver.c:18 and
    - libsrc/usbip_host_common.c:27.
    
    Declare as extern the definition in libsrc/usbip_host_common.c.
    
    Signed-off-by: Antonio Borneo <borneo.antonio@gmail.com>
    Acked-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20200618000844.1048309-1-borneo.antonio@gmail.com
    Cc: Petr Štetiar <ynezz@true.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5dc2a899470469d711979dc80457f88446e270f4
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Feb 25 19:23:27 2021 +0100

    PM: runtime: Update device status before letting suppliers suspend
    
    commit 44cc89f764646b2f1f2ea5d1a08b230131707851 upstream.
    
    Because the PM-runtime status of the device is not updated in
    __rpm_callback(), attempts to suspend the suppliers of the given
    device triggered by rpm_put_suppliers() called by it may fail.
    
    Fix this by making __rpm_callback() update the device's status to
    RPM_SUSPENDED before calling rpm_put_suppliers() if the current
    status of the device is RPM_SUSPENDING and the callback just invoked
    by it has returned 0 (success).
    
    While at it, modify the code in __rpm_callback() to always check
    the device's PM-runtime status under its PM lock.
    
    Link: https://lore.kernel.org/linux-pm/CAPDyKFqm06KDw_p8WXsM4dijDbho4bb6T4k50UqqvR1_COsp8g@mail.gmail.com/
    Fixes: 21d5c57b3726 ("PM / runtime: Use device links")
    Reported-by: Elaine Zhang <zhangqing@rock-chips.com>
    Diagnosed-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Elaine Zhang <zhangiqng@rock-chips.com>
    Reviewed-by: Ulf Hansson <ulf.hansson@linaro.org>
    Cc: 4.10+ <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abd3b38ff161897b75c9c2bbfd6385d7155a26f8
Author: Ira Weiny <ira.weiny@intel.com>
Date:   Wed Jan 27 22:15:03 2021 -0800

    btrfs: fix raid6 qstripe kmap
    
    commit d70cef0d46729808dc53f145372c02b145c92604 upstream.
    
    When a qstripe is required an extra page is allocated and mapped.  There
    were 3 problems:
    
    1) There is no corresponding call of kunmap() for the qstripe page.
    2) There is no reason to map the qstripe page more than once if the
       number of bits set in rbio->dbitmap is greater than one.
    3) There is no reason to map the parity page and unmap it each time
       through the loop.
    
    The page memory can continue to be reused with a single mapping on each
    iteration by raid6_call.gen_syndrome() without remapping.  So map the
    page for the duration of the loop.
    
    Similarly, improve the algorithm by mapping the parity page just 1 time.
    
    Fixes: 5a6ac9eacb49 ("Btrfs, raid56: support parity scrub on raid56")
    CC: stable@vger.kernel.org # 4.4.x: c17af96554a8: btrfs: raid56: simplify tracking of Q stripe presence
    CC: stable@vger.kernel.org # 4.4.x
    Signed-off-by: Ira Weiny <ira.weiny@intel.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8c61017fa47fbdd470a4fb446e08dff26e47d10
Author: David Sterba <dsterba@suse.com>
Date:   Wed Feb 19 15:17:20 2020 +0100

    btrfs: raid56: simplify tracking of Q stripe presence
    
    commit c17af96554a8a8777cbb0fd53b8497250e548b43 upstream.
    
    There are temporary variables tracking the index of P and Q stripes, but
    none of them is really used as such, merely for determining if the Q
    stripe is present. This leads to compiler warnings with
    -Wunused-but-set-variable and has been reported several times.
    
    fs/btrfs/raid56.c: In function ‘finish_rmw’:
    fs/btrfs/raid56.c:1199:6: warning: variable ‘p_stripe’ set but not used [-Wunused-but-set-variable]
     1199 |  int p_stripe = -1;
          |      ^~~~~~~~
    fs/btrfs/raid56.c: In function ‘finish_parity_scrub’:
    fs/btrfs/raid56.c:2356:6: warning: variable ‘p_stripe’ set but not used [-Wunused-but-set-variable]
     2356 |  int p_stripe = -1;
          |      ^~~~~~~~
    
    Replace the two variables with one that has a clear meaning and also get
    rid of the warnings. The logic that verifies that there are only 2
    valid cases is unchanged.
    
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8de7b2325969bbd5cef736f17fbfe94cdefb83fd
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Mar 7 11:27:46 2021 +0100

    Linux 4.14.224
    
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20210305120851.751937389@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80098e21ad70b6096932e4e6941f84801b10720e
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Sat Dec 19 23:29:58 2020 +0100

    media: v4l: ioctl: Fix memory leak in video_usercopy
    
    commit fb18802a338b36f675a388fc03d2aa504a0d0899 upstream.
    
    When an IOCTL with argument size larger than 128 that also used array
    arguments were handled, two memory allocations were made but alas, only
    the latter one of them was released. This happened because there was only
    a single local variable to hold such a temporary allocation.
    
    Fix this by adding separate variables to hold the pointers to the
    temporary allocations.
    
    Reported-by: Arnd Bergmann <arnd@kernel.org>
    Reported-by: syzbot+1115e79c8df6472c612b@syzkaller.appspotmail.com
    Fixes: d14e6d76ebf7 ("[media] v4l: Add multi-planar ioctl handling code")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b5263c28abb01fe65df4bbbd8f827eb34c4a83a
Author: Jens Axboe <axboe@kernel.dk>
Date:   Tue Mar 2 14:53:21 2021 -0700

    swap: fix swapfile read/write offset
    
    commit caf6912f3f4af7232340d500a4a2008f81b93f14 upstream.
    
    We're not factoring in the start of the file for where to write and
    read the swapfile, which leads to very unfortunate side effects of
    writing where we should not be...
    
    [This issue only affects swapfiles on filesystems on top of blockdevs
    that implement rw_page ops (brd, zram, btt, pmem), and not on top of any
    other block devices, in contrast to the upstream commit fix.]
    
    Fixes: dd6bd0d9c7db ("swap: use bdev_read_page() / bdev_write_page()")
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Anthony Iliopoulos <ailiop@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 685379e9ebd4d44e0846f45002ba3bf92e5e5d43
Author: Rokudo Yan <wu-yan@tcl.com>
Date:   Thu Feb 25 17:18:31 2021 -0800

    zsmalloc: account the number of compacted pages correctly
    
    commit 2395928158059b8f9858365fce7713ce7fef62e4 upstream.
    
    There exists multiple path may do zram compaction concurrently.
    1. auto-compaction triggered during memory reclaim
    2. userspace utils write zram<id>/compaction node
    
    So, multiple threads may call zs_shrinker_scan/zs_compact concurrently.
    But pages_compacted is a per zsmalloc pool variable and modification
    of the variable is not serialized(through under class->lock).
    There are two issues here:
    1. the pages_compacted may not equal to total number of pages
    freed(due to concurrently add).
    2. zs_shrinker_scan may not return the correct number of pages
    freed(issued by current shrinker).
    
    The fix is simple:
    1. account the number of pages freed in zs_compact locally.
    2. use actomic variable pages_compacted to accumulate total number.
    
    Link: https://lkml.kernel.org/r/20210202122235.26885-1-wu-yan@tcl.com
    Fixes: 860c707dca155a56 ("zsmalloc: account the number of compacted pages")
    Signed-off-by: Rokudo Yan <wu-yan@tcl.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b70e2695c9512eec312ac50bab870ea04c8d363b
Author: Jan Beulich <jbeulich@suse.com>
Date:   Thu Feb 25 16:35:15 2021 +0100

    xen-netback: respect gnttab_map_refs()'s return value
    
    commit 2991397d23ec597405b116d96de3813420bdcbc3 upstream.
    
    Commit 3194a1746e8a ("xen-netback: don't "handle" error by BUG()")
    dropped respective a BUG_ON() without noticing that with this the
    variable's value wouldn't be consumed anymore. With gnttab_set_map_op()
    setting all status fields to a non-zero value, in case of an error no
    slot should have a status of GNTST_okay (zero).
    
    This is part of XSA-367.
    
    Cc: <stable@vger.kernel.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Link: https://lore.kernel.org/r/d933f495-619a-0086-5fb4-1ec3cf81a8fc@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6483d767a146ae94b5b86f83d33d6e43621b0ab3
Author: Jan Beulich <jbeulich@suse.com>
Date:   Thu Feb 25 16:34:43 2021 +0100

    Xen/gnttab: handle p2m update errors on a per-slot basis
    
    commit 8310b77b48c5558c140e7a57a702e7819e62f04e upstream.
    
    Bailing immediately from set_foreign_p2m_mapping() upon a p2m updating
    error leaves the full batch in an ambiguous state as far as the caller
    is concerned. Instead flags respective slots as bad, unmapping what
    was mapped there right away.
    
    HYPERVISOR_grant_table_op()'s return value and the individual unmap
    slots' status fields get used only for a one-time - there's not much we
    can do in case of a failure.
    
    Note that there's no GNTST_enomem or alike, so GNTST_general_error gets
    used.
    
    The map ops' handle fields get overwritten just to be on the safe side.
    
    This is part of XSA-367.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Link: https://lore.kernel.org/r/96cccf5d-e756-5f53-b91a-ea269bfb9be0@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d20375aa75c74aadd8c02a8a91397bec16afa4f
Author: Chris Leech <cleech@redhat.com>
Date:   Tue Feb 23 21:39:01 2021 -0800

    scsi: iscsi: Verify lengths on passthrough PDUs
    
    commit f9dbdf97a5bd92b1a49cee3d591b55b11fd7a6d5 upstream.
    
    Open-iSCSI sends passthrough PDUs over netlink, but the kernel should be
    verifying that the provided PDU header and data lengths fall within the
    netlink message to prevent accessing beyond that in memory.
    
    Cc: stable@vger.kernel.org
    Reported-by: Adam Nichols <adam@grimm-co.com>
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Chris Leech <cleech@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32800aec58c688ec9c2de979bae966a1ef8667a9
Author: Chris Leech <cleech@redhat.com>
Date:   Tue Feb 23 18:00:17 2021 -0800

    scsi: iscsi: Ensure sysfs attributes are limited to PAGE_SIZE
    
    commit ec98ea7070e94cc25a422ec97d1421e28d97b7ee upstream.
    
    As the iSCSI parameters are exported back through sysfs, it should be
    enforcing that they never are more than PAGE_SIZE (which should be more
    than enough) before accepting updates through netlink.
    
    Change all iSCSI sysfs attributes to use sysfs_emit().
    
    Cc: stable@vger.kernel.org
    Reported-by: Adam Nichols <adam@grimm-co.com>
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Chris Leech <cleech@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4f2d9bfadb18f1e29724f6c6efb7ba875d7cdfe
Author: Joe Perches <joe@perches.com>
Date:   Wed Sep 16 13:40:38 2020 -0700

    sysfs: Add sysfs_emit and sysfs_emit_at to format sysfs output
    
    commit 2efc459d06f1630001e3984854848a5647086232 upstream.
    
    Output defects can exist in sysfs content using sprintf and snprintf.
    
    sprintf does not know the PAGE_SIZE maximum of the temporary buffer
    used for outputting sysfs content and it's possible to overrun the
    PAGE_SIZE buffer length.
    
    Add a generic sysfs_emit function that knows that the size of the
    temporary buffer and ensures that no overrun is done.
    
    Add a generic sysfs_emit_at function that can be used in multiple
    call situations that also ensures that no overrun is done.
    
    Validate the output buffer argument to be page aligned.
    Validate the offset len argument to be within the PAGE_SIZE buf.
    
    Signed-off-by: Joe Perches <joe@perches.com>
    Link: https://lore.kernel.org/r/884235202216d464d61ee975f7465332c86f76b2.1600285923.git.joe@perches.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 196d84f1535bfc3ee3f51facc8601e3be43a4968
Author: Lee Duncan <lduncan@suse.com>
Date:   Tue Feb 23 13:06:24 2021 -0800

    scsi: iscsi: Restrict sessions and handles to admin capabilities
    
    commit 688e8128b7a92df982709a4137ea4588d16f24aa upstream.
    
    Protect the iSCSI transport handle, available in sysfs, by requiring
    CAP_SYS_ADMIN to read it. Also protect the netlink socket by restricting
    reception of messages to ones sent with CAP_SYS_ADMIN. This disables
    normal users from being able to end arbitrary iSCSI sessions.
    
    Cc: stable@vger.kernel.org
    Reported-by: Adam Nichols <adam@grimm-co.com>
    Reviewed-by: Chris Leech <cleech@redhat.com>
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75e4a34e907c85de308304b0b4f8b34858a5b30d
Author: John David Anglin <dave.anglin@bell.net>
Date:   Thu Jan 28 18:12:30 2021 -0500

    parisc: Bump 64-bit IRQ stack size to 64 KB
    
    [ Upstream commit 31680c1d1595a59e17c14ec036b192a95f8e5f4a ]
    
    Bump 64-bit IRQ stack size to 64 KB.
    
    I had a kernel IRQ stack overflow on the mx3210 debian buildd machine.  This patch increases the
    64-bit IRQ stack size to 64 KB.  The 64-bit stack size needs to be larger than the 32-bit stack
    size since registers are twice as big.
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 063b9d8a53533a24995d2a355331fdc7b5523206
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Wed Dec 23 11:44:25 2020 -0800

    f2fs: handle unallocated section and zone on pinned/atgc
    
    [ Upstream commit 632faca72938f9f63049e48a8c438913828ac7a9 ]
    
    If we have large section/zone, unallocated segment makes them corrupted.
    
    E.g.,
    
      - Pinned file:       -1 119304647 119304647
      - ATGC   data:       -1 119304647 119304647
    
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3e0502cacd566cf310b75442af8d7a3ca73e8d6
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Wed Dec 23 14:35:19 2020 +0100

    media: uvcvideo: Allow entities with no pads
    
    [ Upstream commit 7532dad6634031d083df7af606fac655b8d08b5c ]
    
    Avoid an underflow while calculating the number of inputs for entities
    with zero pads.
    
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff75ca20275490582e8574b27ba71ff3dc5d2159
Author: Christian Gromm <christian.gromm@microchip.com>
Date:   Tue Feb 2 17:21:05 2021 +0100

    staging: most: sound: add sanity check for function argument
    
    [ Upstream commit 45b754ae5b82949dca2b6e74fa680313cefdc813 ]
    
    This patch checks the function parameter 'bytes' before doing the
    subtraction to prevent memory corruption.
    
    Signed-off-by: Christian Gromm <christian.gromm@microchip.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/1612282865-21846-1-git-send-email-christian.gromm@microchip.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c28a385d6239da77f7b4210f9b36d22433fbcff1
Author: Gopal Tiwari <gtiwari@redhat.com>
Date:   Tue Feb 2 15:12:30 2021 +0530

    Bluetooth: Fix null pointer dereference in amp_read_loc_assoc_final_data
    
    [ Upstream commit e8bd76ede155fd54d8c41d045dda43cd3174d506 ]
    
    kernel panic trace looks like:
    
     #5 [ffffb9e08698fc80] do_page_fault at ffffffffb666e0d7
     #6 [ffffb9e08698fcb0] page_fault at ffffffffb70010fe
        [exception RIP: amp_read_loc_assoc_final_data+63]
        RIP: ffffffffc06ab54f  RSP: ffffb9e08698fd68  RFLAGS: 00010246
        RAX: 0000000000000000  RBX: ffff8c8845a5a000  RCX: 0000000000000004
        RDX: 0000000000000000  RSI: ffff8c8b9153d000  RDI: ffff8c8845a5a000
        RBP: ffffb9e08698fe40   R8: 00000000000330e0   R9: ffffffffc0675c94
        R10: ffffb9e08698fe58  R11: 0000000000000001  R12: ffff8c8b9cbf6200
        R13: 0000000000000000  R14: 0000000000000000  R15: ffff8c8b2026da0b
        ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018
     #7 [ffffb9e08698fda8] hci_event_packet at ffffffffc0676904 [bluetooth]
     #8 [ffffb9e08698fe50] hci_rx_work at ffffffffc06629ac [bluetooth]
     #9 [ffffb9e08698fe98] process_one_work at ffffffffb66f95e7
    
    hcon->amp_mgr seems NULL triggered kernel panic in following line inside
    function amp_read_loc_assoc_final_data
    
            set_bit(READ_LOC_AMP_ASSOC_FINAL, &mgr->state);
    
    Fixed by checking NULL for mgr.
    
    Signed-off-by: Gopal Tiwari <gtiwari@redhat.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0aec88be84fc2b44709b73622de8475cea989740
Author: Fangrui Song <maskray@google.com>
Date:   Wed Jan 27 12:56:00 2021 -0800

    x86/build: Treat R_386_PLT32 relocation as R_386_PC32
    
    [ Upstream commit bb73d07148c405c293e576b40af37737faf23a6a ]
    
    This is similar to commit
    
      b21ebf2fb4cd ("x86: Treat R_X86_64_PLT32 as R_X86_64_PC32")
    
    but for i386. As far as the kernel is concerned, R_386_PLT32 can be
    treated the same as R_386_PC32.
    
    R_386_PLT32/R_X86_64_PLT32 are PC-relative relocation types which
    can only be used by branches. If the referenced symbol is defined
    externally, a PLT will be used.
    
    R_386_PC32/R_X86_64_PC32 are PC-relative relocation types which can be
    used by address taking operations and branches. If the referenced symbol
    is defined externally, a copy relocation/canonical PLT entry will be
    created in the executable.
    
    On x86-64, there is no PIC vs non-PIC PLT distinction and an
    R_X86_64_PLT32 relocation is produced for both `call/jmp foo` and
    `call/jmp foo@PLT` with newer (2018) GNU as/LLVM integrated assembler.
    This avoids canonical PLT entries (st_shndx=0, st_value!=0).
    
    On i386, there are 2 types of PLTs, PIC and non-PIC. Currently,
    the GCC/GNU as convention is to use R_386_PC32 for non-PIC PLT and
    R_386_PLT32 for PIC PLT. Copy relocations/canonical PLT entries
    are possible ABI issues but GCC/GNU as will likely keep the status
    quo because (1) the ABI is legacy (2) the change will drop a GNU
    ld diagnostic for non-default visibility ifunc in shared objects.
    
    clang-12 -fno-pic (since [1]) can emit R_386_PLT32 for compiler
    generated function declarations, because preventing canonical PLT
    entries is weighed over the rare ifunc diagnostic.
    
    Further info for the more interested:
    
      https://github.com/ClangBuiltLinux/linux/issues/1210
      https://sourceware.org/bugzilla/show_bug.cgi?id=27169
      https://github.com/llvm/llvm-project/commit/a084c0388e2a59b9556f2de0083333232da3f1d6 [1]
    
     [ bp: Massage commit message. ]
    
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Fangrui Song <maskray@google.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Tested-by: Nick Desaulniers <ndesaulniers@google.com>
    Tested-by: Nathan Chancellor <natechancellor@gmail.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Link: https://lkml.kernel.org/r/20210127205600.1227437-1-maskray@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60fcc6fc590da90a8b80454570f2f5c9999370b5
Author: Miaoqing Pan <miaoqing@codeaurora.org>
Date:   Tue Dec 22 14:34:47 2020 +0800

    ath10k: fix wmi mgmt tx queue full due to race condition
    
    [ Upstream commit b55379e343a3472c35f4a1245906db5158cab453 ]
    
    Failed to transmit wmi management frames:
    
    [84977.840894] ath10k_snoc a000000.wifi: wmi mgmt tx queue is full
    [84977.840913] ath10k_snoc a000000.wifi: failed to transmit packet, dropping: -28
    [84977.840924] ath10k_snoc a000000.wifi: failed to submit frame: -28
    [84977.840932] ath10k_snoc a000000.wifi: failed to transmit frame: -28
    
    This issue is caused by race condition between skb_dequeue and
    __skb_queue_tail. The queue of ‘wmi_mgmt_tx_queue’ is protected by a
    different lock: ar->data_lock vs list->lock, the result is no protection.
    So when ath10k_mgmt_over_wmi_tx_work() and ath10k_mac_tx_wmi_mgmt()
    running concurrently on different CPUs, there appear to be a rare corner
    cases when the queue length is 1,
    
      CPUx (skb_deuque)                     CPUy (__skb_queue_tail)
                                            next=list
                                            prev=list
      struct sk_buff *skb = skb_peek(list); WRITE_ONCE(newsk->next, next);
      WRITE_ONCE(list->qlen, list->qlen - 1);WRITE_ONCE(newsk->prev, prev);
      next       = skb->next;               WRITE_ONCE(next->prev, newsk);
      prev       = skb->prev;               WRITE_ONCE(prev->next, newsk);
      skb->next  = skb->prev = NULL;        list->qlen++;
      WRITE_ONCE(next->prev, prev);
      WRITE_ONCE(prev->next, next);
    
    If the instruction ‘next = skb->next’ is executed before
    ‘WRITE_ONCE(prev->next, newsk)’, newsk will be lost, as CPUx get the
    old ‘next’ pointer, but the length is still added by one. The final
    result is the length of the queue will reach the maximum value but
    the queue is empty.
    
    So remove ar->data_lock, and use 'skb_queue_tail' instead of
    '__skb_queue_tail' to prevent the potential race condition. Also switch
    to use skb_queue_len_lockless, in case we queue a few SKBs simultaneously.
    
    Tested-on: WCN3990 hw1.0 SNOC WLAN.HL.3.1.c2-00033-QCAHLSWMTPLZ-1
    
    Signed-off-by: Miaoqing Pan <miaoqing@codeaurora.org>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1608618887-8857-1-git-send-email-miaoqing@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e079ecbb7043465476091d8f1d0a6511f02c4fde
Author: Di Zhu <zhudi21@huawei.com>
Date:   Mon Jan 25 20:42:29 2021 +0800

    pktgen: fix misuse of BUG_ON() in pktgen_thread_worker()
    
    [ Upstream commit 275b1e88cabb34dbcbe99756b67e9939d34a99b6 ]
    
    pktgen create threads for all online cpus and bond these threads to
    relevant cpu repecivtily. when this thread firstly be woken up, it
    will compare cpu currently running with the cpu specified at the time
    of creation and if the two cpus are not equal, BUG_ON() will take effect
    causing panic on the system.
    Notice that these threads could be migrated to other cpus before start
    running because of the cpu hotplug after these threads have created. so the
    BUG_ON() used here seems unreasonable and we can replace it with WARN_ON()
    to just printf a warning other than panic the system.
    
    Signed-off-by: Di Zhu <zhudi21@huawei.com>
    Link: https://lore.kernel.org/r/20210125124229.19334-1-zhudi21@huawei.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b948e3e241d6930798dd50a59008a7ee640caa31
Author: Tony Lindgren <tony@atomide.com>
Date:   Fri Jan 15 08:56:13 2021 +0200

    wlcore: Fix command execute failure 19 for wl12xx
    
    [ Upstream commit cb88d01b67383a095e3f7caeb4cdade5a6cf0417 ]
    
    We can currently get a "command execute failure 19" error on beacon loss
    if the signal is weak:
    
    wlcore: Beacon loss detected. roles:0xff
    wlcore: Connection loss work (role_id: 0).
    ...
    wlcore: ERROR command execute failure 19
    ...
    WARNING: CPU: 0 PID: 1552 at drivers/net/wireless/ti/wlcore/main.c:803
    ...
    (wl12xx_queue_recovery_work.part.0 [wlcore])
    (wl12xx_cmd_role_start_sta [wlcore])
    (wl1271_op_bss_info_changed [wlcore])
    (ieee80211_prep_connection [mac80211])
    
    Error 19 is defined as CMD_STATUS_WRONG_NESTING from the wlcore firmware,
    and seems to mean that the firmware no longer wants to see the quirk
    handling for WLCORE_QUIRK_START_STA_FAILS done.
    
    This quirk got added with commit 18eab430700d ("wlcore: workaround
    start_sta problem in wl12xx fw"), and it seems that this already got fixed
    in the firmware long time ago back in 2012 as wl18xx never had this quirk
    in place to start with.
    
    As we no longer even support firmware that early, to me it seems that it's
    safe to just drop WLCORE_QUIRK_START_STA_FAILS to fix the error. Looks
    like earlier firmware got disabled back in 2013 with commit 0e284c074ef9
    ("wl12xx: increase minimum singlerole firmware version required").
    
    If it turns out we still need WLCORE_QUIRK_START_STA_FAILS with any
    firmware that the driver works with, we can simply revert this patch and
    add extra checks for firmware version used.
    
    With this fix wlcore reconnects properly after a beacon loss.
    
    Cc: Raz Bouganim <r-bouganim@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210115065613.7731-1-tony@atomide.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f21f2355f92bba561032550417254badface1c60
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Tue Jan 5 13:02:34 2021 +0100

    vt/consolemap: do font sum unsigned
    
    [ Upstream commit 9777f8e60e718f7b022a94f2524f967d8def1931 ]
    
    The constant 20 makes the font sum computation signed which can lead to
    sign extensions and signed wraps. It's not much of a problem as we build
    with -fno-strict-overflow. But if we ever decide not to, be ready, so
    switch the constant to unsigned.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20210105120239.28031-7-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b4601be6aae4e584c32bf5bbbaa453a6c76bf4e
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Tue Dec 1 12:39:57 2020 +0100

    x86/reboot: Add Zotac ZBOX CI327 nano PCI reboot quirk
    
    [ Upstream commit 4b2d8ca9208be636b30e924b1cbcb267b0740c93 ]
    
    On this system the M.2 PCIe WiFi card isn't detected after reboot, only
    after cold boot. reboot=pci fixes this behavior. In [0] the same issue
    is described, although on another system and with another Intel WiFi
    card. In case it's relevant, both systems have Celeron CPUs.
    
    Add a PCI reboot quirk on affected systems until a more generic fix is
    available.
    
    [0] https://bugzilla.kernel.org/show_bug.cgi?id=202399
    
     [ bp: Massage commit message. ]
    
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/1524eafd-f89c-cfa4-ed70-0bde9e45eec9@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b32962c9cbf3038e4768d501f068b9f688e879d9
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Mon Dec 21 20:24:35 2020 +0800

    staging: fwserial: Fix error handling in fwserial_create
    
    [ Upstream commit f31559af97a0eabd467e4719253675b7dccb8a46 ]
    
    When fw_core_add_address_handler() fails, we need to destroy
    the port by tty_port_destroy(). Also we need to unregister
    the address handler by fw_core_remove_address_handler() on
    failure.
    
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Link: https://lore.kernel.org/r/20201221122437.10274-1-dinghao.liu@zju.edu.cn
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f268aea3d84d1b0b2568942fd14ecce61e5364a
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Jan 14 14:13:33 2021 +0100

    dt-bindings: net: btusb: DT fix s/interrupt-name/interrupt-names/
    
    commit f288988930e93857e0375bdf88bb670c312b82eb upstream.
    
    The standard DT property name is "interrupt-names".
    
    Fixes: fd913ef7ce619467 ("Bluetooth: btusb: Add out-of-band wakeup support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Acked-by: Rob Herring <robh@kernel.org>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Acked-by: Rajat Jain <rajatja@google.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09d0771149fe1966e2eb8e6d243f8c9dc695e554
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Sun Feb 7 21:47:33 2021 +0200

    net: bridge: use switchdev for port flags set through sysfs too
    
    commit 8043c845b63a2dd88daf2d2d268a33e1872800f0 upstream.
    
    Looking through patchwork I don't see that there was any consensus to
    use switchdev notifiers only in case of netlink provided port flags but
    not sysfs (as a sort of deprecation, punishment or anything like that),
    so we should probably keep the user interface consistent in terms of
    functionality.
    
    http://patchwork.ozlabs.org/project/netdev/patch/20170605092043.3523-3-jiri@resnulli.us/
    http://patchwork.ozlabs.org/project/netdev/patch/20170608064428.4785-3-jiri@resnulli.us/
    
    Fixes: 3922285d96e7 ("net: bridge: Add support for offloading port attributes")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Acked-by: Nikolay Aleksandrov <nikolay@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c6ddb9e5cfc04bb9dbd6dbcdac944e3c6e109c5
Author: Li Xinhai <lixinhai.lxh@gmail.com>
Date:   Wed Feb 24 12:06:54 2021 -0800

    mm/hugetlb.c: fix unnecessary address expansion of pmd sharing
    
    commit a1ba9da8f0f9a37d900ff7eff66482cf7de8015e upstream.
    
    The current code would unnecessarily expand the address range.  Consider
    one example, (start, end) = (1G-2M, 3G+2M), and (vm_start, vm_end) =
    (1G-4M, 3G+4M), the expected adjustment should be keep (1G-2M, 3G+2M)
    without expand.  But the current result will be (1G-4M, 3G+4M).  Actually,
    the range (1G-4M, 1G) and (3G, 3G+4M) would never been involved in pmd
    sharing.
    
    After this patch, we will check that the vma span at least one PUD aligned
    size and the start,end range overlap the aligned range of vma.
    
    With above example, the aligned vma range is (1G, 3G), so if (start, end)
    range is within (1G-4M, 1G), or within (3G, 3G+4M), then no adjustment to
    both start and end.  Otherwise, we will have chance to adjust start
    downwards or end upwards without exceeding (vm_start, vm_end).
    
    Mike:
    
    : The 'adjusted range' is used for calls to mmu notifiers and cache(tlb)
    : flushing.  Since the current code unnecessarily expands the range in some
    : cases, more entries than necessary would be flushed.  This would/could
    : result in performance degradation.  However, this is highly dependent on
    : the user runtime.  Is there a combination of vma layout and calls to
    : actually hit this issue?  If the issue is hit, will those entries
    : unnecessarily flushed be used again and need to be unnecessarily reloaded?
    
    Link: https://lkml.kernel.org/r/20210104081631.2921415-1-lixinhai.lxh@gmail.com
    Fixes: 75802ca66354 ("mm/hugetlb: fix calculation of adjust_range_if_pmd_sharing_possible")
    Signed-off-by: Li Xinhai <lixinhai.lxh@gmail.com>
    Suggested-by: Mike Kravetz <mike.kravetz@oracle.com>
    Reviewed-by: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: Peter Xu <peterx@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24e4602bf8482c456870a53cff428e907a09813d
Author: Marco Elver <elver@google.com>
Date:   Mon Feb 1 17:04:20 2021 +0100

    net: fix up truesize of cloned skb in skb_prepare_for_shift()
    
    commit 097b9146c0e26aabaa6ff3e5ea536a53f5254a79 upstream.
    
    Avoid the assumption that ksize(kmalloc(S)) == ksize(kmalloc(S)): when
    cloning an skb, save and restore truesize after pskb_expand_head(). This
    can occur if the allocator decides to service an allocation of the same
    size differently (e.g. use a different size class, or pass the
    allocation on to KFENCE).
    
    Because truesize is used for bookkeeping (such as sk_wmem_queued), a
    modified truesize of a cloned skb may result in corrupt bookkeeping and
    relevant warnings (such as in sk_stream_kill_queues()).
    
    Link: https://lkml.kernel.org/r/X9JR/J6dMMOy1obu@elver.google.com
    Reported-by: syzbot+7b99aafdcc2eedea6178@syzkaller.appspotmail.com
    Suggested-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Marco Elver <elver@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20210201160420.2826895-1-elver@google.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7dc1bd4e2a91e11b75374664649618d568e5491d
Author: Sabyrzhan Tasbolatov <snovitoll@gmail.com>
Date:   Thu Jan 28 17:58:01 2021 +0600

    smackfs: restrict bytes count in smackfs write functions
    
    commit 7ef4c19d245f3dc233fd4be5acea436edd1d83d8 upstream.
    
    syzbot found WARNINGs in several smackfs write operations where
    bytes count is passed to memdup_user_nul which exceeds
    GFP MAX_ORDER. Check count size if bigger than PAGE_SIZE.
    
    Per smackfs doc, smk_write_net4addr accepts any label or -CIPSO,
    smk_write_net6addr accepts any label or -DELETE. I couldn't find
    any general rule for other label lengths except SMK_LABELLEN,
    SMK_LONGLABEL, SMK_CIPSOMAX which are documented.
    
    Let's constrain, in general, smackfs label lengths for PAGE_SIZE.
    Although fuzzer crashes write to smackfs/netlabel on 0x400000 length.
    
    Here is a quick way to reproduce the WARNING:
    python -c "print('A' * 0x400000)" > /sys/fs/smackfs/netlabel
    
    Reported-by: syzbot+a71a442385a0b2815497@syzkaller.appspotmail.com
    Signed-off-by: Sabyrzhan Tasbolatov <snovitoll@gmail.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7565c53a0b8614e234ec5b4d8cb65070a3b1b55f
Author: Yumei Huang <yuhuang@redhat.com>
Date:   Fri Jan 22 16:48:19 2021 -0800

    xfs: Fix assert failure in xfs_setattr_size()
    
    commit 88a9e03beef22cc5fabea344f54b9a0dfe63de08 upstream.
    
    An assert failure is triggered by syzkaller test due to
    ATTR_KILL_PRIV is not cleared before xfs_setattr_size.
    As ATTR_KILL_PRIV is not checked/used by xfs_setattr_size,
    just remove it from the assert.
    
    Signed-off-by: Yumei Huang <yuhuang@redhat.com>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Darrick J. Wong <djwong@kernel.org>
    Signed-off-by: Darrick J. Wong <djwong@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbd43a2fb56b44621d1ed6fa098da2d0759e9b1c
Author: Sean Young <sean@mess.org>
Date:   Tue Jan 19 14:53:50 2021 +0100

    media: mceusb: sanity check for prescaler value
    
    commit 9dec0f48a75e0dadca498002d25ef4e143e60194 upstream.
    
    prescaler larger than 8 would mean the carrier is at most 152Hz,
    which does not make sense for IR carriers.
    
    Reported-by: syzbot+6d31bf169a8265204b8d@syzkaller.appspotmail.com
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5aabca0bf932c2970442baae76ef3b5de1013065
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Dec 18 12:17:16 2020 -0800

    JFS: more checks for invalid superblock
    
    commit 3bef198f1b17d1bb89260bad947ef084c0a2d1a6 upstream.
    
    syzbot is feeding invalid superblock data to JFS for mount testing.
    JFS does not check several of the fields -- just assumes that they
    are good since the JFS_MAGIC and version fields are good.
    
    In this case (syzbot reproducer), we have s_l2bsize == 0xda0c,
    pad == 0xf045, and s_state == 0x50, all of which are invalid IMO.
    Having s_l2bsize == 0xda0c causes this UBSAN warning:
      UBSAN: shift-out-of-bounds in fs/jfs/jfs_mount.c:373:25
      shift exponent -9716 is negative
    
    s_l2bsize can be tested for correctness. pad can be tested for non-0
    and punted. s_state can be tested for its valid values and punted.
    
    Do those 3 tests and if any of them fails, report the superblock as
    invalid/corrupt and let fsck handle it.
    
    With this patch, chkSuper() says this when JFS_DEBUG is enabled:
      jfs_mount: Mount Failure: superblock is corrupt!
      Mount JFS Failure: -22
      jfs_mount failed w/return code = -22
    
    The obvious problem with this method is that next week there could
    be another syzbot test that uses different fields for invalid values,
    this making this like a game of whack-a-mole.
    
    syzkaller link: https://syzkaller.appspot.com/bug?extid=36315852ece4132ec193
    
    Reported-by: syzbot+36315852ece4132ec193@syzkaller.appspotmail.com
    Reported-by: kernel test robot <lkp@intel.com> # v2
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
    Cc: jfs-discussion@lists.sourceforge.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71c7623bd86b55fb4273d88adcc8de25f3cb99d0
Author: Andrew Murray <andrew.murray@arm.com>
Date:   Wed Aug 28 18:50:06 2019 +0100

    arm64: Use correct ll/sc atomic constraints
    
    commit 580fa1b874711d633f9b145b7777b0e83ebf3787 upstream.
    
    The A64 ISA accepts distinct (but overlapping) ranges of immediates for:
    
     * add arithmetic instructions ('I' machine constraint)
     * sub arithmetic instructions ('J' machine constraint)
     * 32-bit logical instructions ('K' machine constraint)
     * 64-bit logical instructions ('L' machine constraint)
    
    ... but we currently use the 'I' constraint for many atomic operations
    using sub or logical instructions, which is not always valid.
    
    When CONFIG_ARM64_LSE_ATOMICS is not set, this allows invalid immediates
    to be passed to instructions, potentially resulting in a build failure.
    When CONFIG_ARM64_LSE_ATOMICS is selected the out-of-line ll/sc atomics
    always use a register as they have no visibility of the value passed by
    the caller.
    
    This patch adds a constraint parameter to the ATOMIC_xx and
    __CMPXCHG_CASE macros so that we can pass appropriate constraints for
    each case, with uses updated accordingly.
    
    Unfortunately prior to GCC 8.1.0 the 'K' constraint erroneously accepted
    '4294967295', so we must instead force the use of a register.
    
    Signed-off-by: Andrew Murray <andrew.murray@arm.com>
    Signed-off-by: Will Deacon <will@kernel.org>
    [bwh: Backported to 4.14: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f533dea2c83a48789df19d8f37ab8d1763d5659
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Sep 18 09:39:55 2018 +0100

    arm64: cmpxchg: Use "K" instead of "L" for ll/sc immediate constraint
    
    commit 4230509978f2921182da4e9197964dccdbe463c3 upstream.
    
    The "L" AArch64 machine constraint, which we use for the "old" value in
    an LL/SC cmpxchg(), generates an immediate that is suitable for a 64-bit
    logical instruction. However, for cmpxchg() operations on types smaller
    than 64 bits, this constraint can result in an invalid instruction which
    is correctly rejected by GAS, such as EOR W1, W1, #0xffffffff.
    
    Whilst we could special-case the constraint based on the cmpxchg size,
    it's far easier to change the constraint to "K" and put up with using
    a register for large 64-bit immediates. For out-of-line LL/SC atomics,
    this is all moot anyway.
    
    Reported-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fdae010b60ff2bb1be12f8e85b69744400ccc61
Author: Will Deacon <will.deacon@arm.com>
Date:   Thu Sep 13 13:30:45 2018 +0100

    arm64: Avoid redundant type conversions in xchg() and cmpxchg()
    
    commit 5ef3fe4cecdf82fdd71ce78988403963d01444d4 upstream.
    
    Our atomic instructions (either LSE atomics of LDXR/STXR sequences)
    natively support byte, half-word, word and double-word memory accesses
    so there is no need to mask the data register prior to being stored.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e92c7cb90430325d29c96db4858cb31ab2cdd3e
Author: Shaoying Xu <shaoyi@amazon.com>
Date:   Tue Feb 16 18:32:34 2021 +0000

    arm64 module: set plt* section addresses to 0x0
    
    commit f5c6d0fcf90ce07ee0d686d465b19b247ebd5ed7 upstream.
    
    These plt* and .text.ftrace_trampoline sections specified for arm64 have
    non-zero addressses. Non-zero section addresses in a relocatable ELF would
    confuse GDB when it tries to compute the section offsets and it ends up
    printing wrong symbol addresses. Therefore, set them to zero, which mirrors
    the change in commit 5d8591bc0fba ("module: set ksymtab/kcrctab* section
    addresses to 0x0").
    
    Reported-by: Frank van der Linden <fllinden@amazon.com>
    Signed-off-by: Shaoying Xu <shaoyi@amazon.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210216183234.GA23876@amazon.com
    Signed-off-by: Will Deacon <will@kernel.org>
    [shaoyi@amazon.com: made same changes in arch/arm64/kernel/module.lds for 5.4]
    Signed-off-by: Shaoying Xu <shaoyi@amazon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f6e0a32fa261cf6aa18b52a9cc4ec96a6ca6312
Author: Cornelia Huck <cohuck@redhat.com>
Date:   Tue Feb 16 12:06:45 2021 +0100

    virtio/s390: implement virtio-ccw revision 2 correctly
    
    commit 182f709c5cff683e6732d04c78e328de0532284f upstream.
    
    CCW_CMD_READ_STATUS was introduced with revision 2 of virtio-ccw,
    and drivers should only rely on it being implemented when they
    negotiated at least that revision with the device.
    
    However, virtio_ccw_get_status() issued READ_STATUS for any
    device operating at least at revision 1. If the device accepts
    READ_STATUS regardless of the negotiated revision (which some
    implementations like QEMU do, even though the spec currently does
    not allow it), everything works as intended. While a device
    rejecting the command should also be handled gracefully, we will
    not be able to see any changes the device makes to the status,
    such as setting NEEDS_RESET or setting the status to zero after
    a completed reset.
    
    We negotiated the revision to at most 1, as we never bumped the
    maximum revision; let's do that now and properly send READ_STATUS
    only if we are operating at least at revision 2.
    
    Cc: stable@vger.kernel.org
    Fixes: 7d3ce5ab9430 ("virtio/s390: support READ_STATUS command for virtio-ccw")
    Reviewed-by: Halil Pasic <pasic@linux.ibm.com>
    Signed-off-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Link: https://lore.kernel.org/r/20210216110645.1087321-1-cohuck@redhat.com
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d26bc2d904b7545905a249ceb4cbf0154ff6933e
Author: Sergey Senozhatsky <senozhatsky@chromium.org>
Date:   Thu Nov 5 10:47:44 2020 +0900

    drm/virtio: use kvmalloc for large allocations
    
    commit ea86f3defd55f141a44146e66cbf8ffb683d60da upstream.
    
    We observed that some of virtio_gpu_object_shmem_init() allocations
    can be rather costly - order 6 - which can be difficult to fulfill
    under memory pressure conditions. Switch to kvmalloc_array() in
    virtio_gpu_object_shmem_init() and let the kernel vmalloc the entries
    array.
    
    Signed-off-by: Sergey Senozhatsky <senozhatsky@chromium.org>
    Link: http://patchwork.freedesktop.org/patch/msgid/20201105014744.1662226-1-senozhatsky@chromium.org
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Doug Horn <doughorn@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9963e0ecd5c8a1dfe6bc803a792d9a5d258f7529
Author: Mike Kravetz <mike.kravetz@oracle.com>
Date:   Wed Feb 24 12:07:50 2021 -0800

    hugetlb: fix update_and_free_page contig page struct assumption
    
    commit dbfee5aee7e54f83d96ceb8e3e80717fac62ad63 upstream.
    
    page structs are not guaranteed to be contiguous for gigantic pages.  The
    routine update_and_free_page can encounter a gigantic page, yet it assumes
    page structs are contiguous when setting page flags in subpages.
    
    If update_and_free_page encounters non-contiguous page structs, we can see
    “BUG: Bad page state in process …” errors.
    
    Non-contiguous page structs are generally not an issue.  However, they can
    exist with a specific kernel configuration and hotplug operations.  For
    example: Configure the kernel with CONFIG_SPARSEMEM and
    !CONFIG_SPARSEMEM_VMEMMAP.  Then, hotplug add memory for the area where
    the gigantic page will be allocated.  Zi Yan outlined steps to reproduce
    here [1].
    
    [1] https://lore.kernel.org/linux-mm/16F7C58B-4D79-41C5-9B64-A1A1628F4AF2@nvidia.com/
    
    Link: https://lkml.kernel.org/r/20210217184926.33567-1-mike.kravetz@oracle.com
    Fixes: 944d9fec8d7a ("hugetlb: add support for gigantic page allocation at runtime")
    Signed-off-by: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Cc: Davidlohr Bueso <dbueso@suse.de>
    Cc: "Kirill A . Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: Joao Martins <joao.m.martins@oracle.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>

commit 81bd37e7eedb9162da745faf082fb2c9137bd35e
Author: Rolf Eike Beer <eb@emlix.com>
Date:   Thu Mar 4 08:26:28 2021 +0100

    scripts: set proper OpenSSL include dir also for sign-file
    
    commit fe968c41ac4f4ec9ffe3c4cf16b72285f5e9674f upstream.
    
    Fixes: 2cea4a7a1885 ("scripts: use pkg-config to locate libcrypto")
    Signed-off-by: Rolf Eike Beer <eb@emlix.com>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f40967caaf8a5bec93d740716138176dc951b77
Author: Rolf Eike Beer <eb@emlix.com>
Date:   Thu Mar 4 08:25:01 2021 +0100

    scripts: use pkg-config to locate libcrypto
    
    commit 2cea4a7a1885bd0c765089afc14f7ff0eb77864e upstream.
    
    Otherwise build fails if the headers are not in the default location. While at
    it also ask pkg-config for the libs, with fallback to the existing value.
    
    Signed-off-by: Rolf Eike Beer <eb@emlix.com>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5eb50ccd5168ebcbc95696269953f17b86a7beaf
Author: Lech Perczak <lech.perczak@gmail.com>
Date:   Tue Feb 23 19:34:56 2021 +0100

    net: usb: qmi_wwan: support ZTE P685M modem
    
    commit 88eee9b7b42e69fb622ddb3ff6f37e8e4347f5b2 upstream.
    
    Now that interface 3 in "option" driver is no longer mapped, add device
    ID matching it to qmi_wwan.
    
    The modem is used inside ZTE MF283+ router and carriers identify it as
    such.
    Interface mapping is:
    0: QCDM, 1: AT (PCUI), 2: AT (Modem), 3: QMI, 4: ADB
    
    T:  Bus=02 Lev=02 Prnt=02 Port=05 Cnt=01 Dev#=  3 Spd=480  MxCh= 0
    D:  Ver= 2.01 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=19d2 ProdID=1275 Rev=f0.00
    S:  Manufacturer=ZTE,Incorporated
    S:  Product=ZTE Technologies MSM
    S:  SerialNumber=P685M510ZTED0000CP&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&0
    C:* #Ifs= 5 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:* If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=83(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=85(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    E:  Ad=87(I) Atr=03(Int.) MxPS=   8 Ivl=32ms
    E:  Ad=86(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 4 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=42 Prot=01 Driver=(none)
    E:  Ad=88(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: Lech Perczak <lech.perczak@gmail.com>
    Link: https://lore.kernel.org/r/20210223183456.6377-1-lech.perczak@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbea7f5aff494b6b62be194ca12cc65e2dd8c376
Author: SGCMarkus <markusornik@gmail.com>
Date:   Fri Mar 12 10:32:27 2021 +0100

    arch: arm64: configs: mh2lm: build LGE NXP NFC too
    
    some mh2lm variants use NXP NFC, others use Sony NFC, support both
########################################
vendor/lge Changes:
########################################
